"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[38385],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>f});var i=n(296540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=i.createContext({}),s=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return i.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=s(n),m=o,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||r;return n?i.createElement(f,l(l({ref:t},u),{},{components:n})):i.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[p]="string"==typeof e?e:o,l[1]=a;for(var s=2;s<r;s++)l[s]=n[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},494681:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>s});var i=n(58168),o=(n(296540),n(15680));const r={title:"Compiling on Linux",language:"en"},l=void 0,a={unversionedId:"install/source-install/compilation-linux",id:"version-2.1/install/source-install/compilation-linux",title:"Compiling on Linux",description:"\x3c!--",source:"@site/versioned_docs/version-2.1/install/source-install/compilation-linux.md",sourceDirName:"install/source-install",slug:"/install/source-install/compilation-linux",permalink:"/docs/install/source-install/compilation-linux",draft:!1,tags:[],version:"2.1",frontMatter:{title:"Compiling on Linux",language:"en"},sidebar:"docs",previous:{title:"Compiling with LDB Toolchain (Recommended)",permalink:"/docs/install/source-install/compilation-with-ldb-toolchain"},next:{title:"Compiling with Arm",permalink:"/docs/install/source-install/compilation-arm"}},c={},s=[{value:"Make sure you have the following system dependencies installed.",id:"make-sure-you-have-the-following-system-dependencies-installed",level:2},{value:"Like compiling with a Docker development image, check if AVX2 instructions are supported first.",id:"like-compiling-with-a-docker-development-image-check-if-avx2-instructions-are-supported-first",level:2},{value:"If supported, execute the following command for compilation.",id:"if-supported-execute-the-following-command-for-compilation",level:2},{value:"After compilation, the output files can be found in the <code>output/</code> directory.",id:"after-compilation-the-output-files-can-be-found-in-the-output-directory",level:2}],u={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.yg)(p,(0,i.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"This guide is about how to compile Doris on Linux using Ubuntu 16.04 or later versions."),(0,o.yg)("h2",{id:"make-sure-you-have-the-following-system-dependencies-installed"},"Make sure you have the following system dependencies installed."),(0,o.yg)("p",null,"GCC 10+, Oracle JDK 8+, Python 2.7+, Apache Maven 3.5+, CMake 3.19.2+, Bison 3.0+"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-Plain"},"sudo apt install build-essential openjdk-8-jdk maven cmake byacc flex automake libtool-bin bison binutils-dev libiberty-dev zip unzip libncurses5-dev curl git ninja-build python\nsudo add-apt-repository ppa:ubuntu-toolchain-r/ppa\nsudo apt update\nsudo apt install gcc-10 g++-10 \nsudo apt-get install autoconf automake libtool autopoint\n")),(0,o.yg)("h2",{id:"like-compiling-with-a-docker-development-image-check-if-avx2-instructions-are-supported-first"},"Like compiling with a Docker development image, check if AVX2 instructions are supported first."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-Plain"},"$ cat /proc/cpuinfo | grep avx2\n")),(0,o.yg)("h2",{id:"if-supported-execute-the-following-command-for-compilation"},"If supported, execute the following command for compilation."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-Plain"},"# By default, it builds AVX2 version.\n$ sh build.sh\n\n# If you need the no AVX2 version, add USE_AVX2=0.\n$ USE_AVX2=0 sh build.sh\n\n# To compile a debug version of BE, add BUILD_TYPE=Debug.\n$ BUILD_TYPE=Debug sh build.sh\n")),(0,o.yg)("h2",{id:"after-compilation-the-output-files-can-be-found-in-the-output-directory"},"After compilation, the output files can be found in the ",(0,o.yg)("inlineCode",{parentName:"h2"},"output/")," directory."))}d.isMDXComponent=!0}}]);