"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[34424],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>y});var a=t(296540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,y=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return t?a.createElement(y,l(l({ref:n},u),{},{components:t})):a.createElement(y,l({ref:n},u))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},676366:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=t(58168),r=(t(296540),t(15680));const i={title:"Query Analysis",language:"en"},l=void 0,o={unversionedId:"advanced/best-practice/query-analysis",id:"version-1.2/advanced/best-practice/query-analysis",title:"Query Analysis",description:"\x3c!--",source:"@site/versioned_docs/version-1.2/advanced/best-practice/query-analysis.md",sourceDirName:"advanced/best-practice",slug:"/advanced/best-practice/query-analysis",permalink:"/docs/1.2/advanced/best-practice/query-analysis",draft:!1,tags:[],version:"1.2",frontMatter:{title:"Query Analysis",language:"en"},sidebar:"docs",previous:{title:"Broker",permalink:"/docs/1.2/advanced/broker"},next:{title:"Import Analysis",permalink:"/docs/1.2/advanced/best-practice/import-analysis"}},s={},c=[{value:"query plan tree",id:"query-plan-tree",level:2},{value:"View query plan",id:"view-query-plan",level:2},{value:"View query Profile",id:"view-query-profile",level:2}],u={toc:c},p="wrapper";function d(e){let{components:n,...t}=e;return(0,r.yg)(p,(0,a.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"query-analysis"},"Query Analysis"),(0,r.yg)("p",null,"Doris provides a graphical command to help users analyze a specific query or import more easily. This article describes how to use this feature."),(0,r.yg)("h2",{id:"query-plan-tree"},"query plan tree"),(0,r.yg)("p",null,"SQL is a descriptive language, and users describe the data they want to get through a SQL. The specific execution mode of a SQL depends on the implementation of the database. The query planner is used to determine how the database executes a SQL."),(0,r.yg)("p",null,"For example, if the user specifies a Join operator, the query planner needs to decide the specific Join algorithm, such as Hash Join or Merge Sort Join; whether to use Shuffle or Broadcast; whether the Join order needs to be adjusted to avoid Cartesian product; on which nodes to execute and so on."),(0,r.yg)("p",null,"Doris' query planning process is to first convert an SQL statement into a single-machine execution plan tree."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"     \u250c\u2500\u2500\u2500\u2500\u2510\n     \u2502Sort\u2502\n     \u2514\u2500\u2500\u2500\u2500\u2518\n        \u2502\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502Aggregation\u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u2502\n     \u250c\u2500\u2500\u2500\u2500\u2510\n     \u2502Join\u2502\n     \u2514\u2500\u2500\u2500\u2500\u2518\n    \u250c\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2510\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Scan-1\u2502 \u2502Scan-2\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.yg)("p",null,"After that, the query planner will convert the single-machine query plan into a distributed query plan according to the specific operator execution mode and the specific distribution of data. The distributed query plan is composed of multiple fragments, each fragment is responsible for a part of the query plan, and the data is transmitted between the fragments through the ExchangeNode operator."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"        \u250c\u2500\u2500\u2500\u2500\u2510\n        \u2502Sort\u2502\n        \u2502F1 \u2502\n        \u2514\u2500\u2500\u2500\u2500\u2518\n           \u2502\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502Aggregation\u2502\n     \u2502F1 \u2502\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502\n        \u250c\u2500\u2500\u2500\u2500\u2510\n        \u2502Join\u2502\n        \u2502F1 \u2502\n        \u2514\u2500\u2500\u2500\u2500\u2518\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2510\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Scan-1\u2502 \u2502ExchangeNode\u2502\n\u2502F1 \u2502 \u2502F1 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                \u2502\n          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n          \u2502DataStreamDink\u2502\n          \u2502F2 \u2502\n          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                \u2502\n            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n            \u2502Scan-2\u2502\n            \u2502F2 \u2502\n            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.yg)("p",null,"As shown above, we divided the stand-alone plan into two Fragments: F1 and F2. Data is transmitted between two Fragments through an ExchangeNode."),(0,r.yg)("p",null,"And a Fragment will be further divided into multiple Instances. Instance is the final concrete execution instance. Dividing into multiple Instances helps to make full use of machine resources and improve the execution concurrency of a Fragment."),(0,r.yg)("h2",{id:"view-query-plan"},"View query plan"),(0,r.yg)("p",null,"You can view the execution plan of a SQL through the following three commands."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"EXPLAIN GRAPH select ...;")," OR ",(0,r.yg)("inlineCode",{parentName:"li"},"DESC GRAPH select ...;")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"EXPLAIN select ...;")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"EXPLAIN VERBOSE select ...;"))),(0,r.yg)("p",null,"The first command displays a query plan graphically. This command can more intuitively display the tree structure of the query plan and the division of Fragments:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain graph select tbl1.k1, sum(tbl1.k2) from tbl1 join tbl2 on tbl1.k1 = tbl2.k1 group by tbl1.k1 order by tbl1.k1;\n+---------------------------------------------------------------------------------------------------------------------------------+\n| Explain String                                                                                                                  |\n+---------------------------------------------------------------------------------------------------------------------------------+\n|                                                                                                                                 |\n|              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                                  |\n|              \u2502[9: ResultSink]\u2502                                                                                                  |\n|              \u2502[Fragment: 4]  \u2502                                                                                                  |\n|              \u2502RESULT SINK    \u2502                                                                                                  |\n|              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                                  |\n|                      \u2502                                                                                                          |\n|           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                               |\n|           \u2502[9: MERGING-EXCHANGE]\u2502                                                                                               |\n|           \u2502[Fragment: 4]        \u2502                                                                                               |\n|           \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                               |\n|                      \u2502                                                                                                          |\n|            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                                |\n|            \u2502[9: DataStreamSink]\u2502                                                                                                |\n|            \u2502[Fragment: 3]      \u2502                                                                                                |\n|            \u2502STREAM DATA SINK   \u2502                                                                                                |\n|            \u2502  EXCHANGE ID: 09  \u2502                                                                                                |\n|            \u2502  UNPARTITIONED    \u2502                                                                                                |\n|            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                                |\n|                      \u2502                                                                                                          |\n|               \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                                   |\n|               \u2502[4: TOP-N]   \u2502                                                                                                   |\n|               \u2502[Fragment: 3]\u2502                                                                                                   |\n|               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                                   |\n|                      \u2502                                                                                                          |\n|      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                          |\n|      \u2502[8: AGGREGATE (merge finalize)]\u2502                                                                                          |\n|      \u2502[Fragment: 3]                  \u2502                                                                                          |\n|      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                          |\n|                      \u2502                                                                                                          |\n|               \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                                   |\n|               \u2502[7: EXCHANGE]\u2502                                                                                                   |\n|               \u2502[Fragment: 3]\u2502                                                                                                   |\n|               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                                   |\n|                      \u2502                                                                                                          |\n|            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                                |\n|            \u2502[7: DataStreamSink]\u2502                                                                                                |\n|            \u2502[Fragment: 2]      \u2502                                                                                                |\n|            \u2502STREAM DATA SINK   \u2502                                                                                                |\n|            \u2502  EXCHANGE ID: 07  \u2502                                                                                                |\n|            \u2502  HASH_PARTITIONED \u2502                                                                                                |\n|            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                                |\n|                      \u2502                                                                                                          |\n|     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                         |\n|     \u2502[3: AGGREGATE (update serialize)]\u2502                                                                                         |\n|     \u2502[Fragment: 2]                    \u2502                                                                                         |\n|     \u2502STREAMING                        \u2502                                                                                         |\n|     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                         |\n|                      \u2502                                                                                                          |\n|     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                         |\n|     \u2502[2: HASH JOIN]                   \u2502                                                                                         |\n|     \u2502[Fragment: 2]                    \u2502                                                                                         |\n|     \u2502join op: INNER JOIN (PARTITIONED)\u2502                                                                                         |\n|     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                         |\n|           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                               |\n|    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                        |\n|    \u2502[5: EXCHANGE]\u2502       \u2502[6: EXCHANGE]\u2502                                                                                        |\n|    \u2502[Fragment: 2]\u2502       \u2502[Fragment: 2]\u2502                                                                                        |\n|    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                        |\n|           \u2502                     \u2502                                                                                               |\n| \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                     |\n| \u2502[5: DataStreamSink]\u2502 \u2502[6: DataStreamSink]\u2502                                                                                     |\n| \u2502[Fragment: 0]      \u2502 \u2502[Fragment: 1]      \u2502                                                                                     |\n| \u2502STREAM DATA SINK   \u2502 \u2502STREAM DATA SINK   \u2502                                                                                     |\n| \u2502  EXCHANGE ID: 05  \u2502 \u2502  EXCHANGE ID: 06  \u2502                                                                                     |\n| \u2502  HASH_PARTITIONED \u2502 \u2502  HASH_PARTITIONED \u2502                                                                                     |\n| \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                     |\n|           \u2502                     \u2502                                                                                               |\n|  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                                                      |\n|  \u2502[0: OlapScanNode]\u2502   \u2502[1: OlapScanNode]\u2502                                                                                      |\n|  \u2502[Fragment: 0]    \u2502   \u2502[Fragment: 1]    \u2502                                                                                      |\n|  \u2502TABLE: tbl1      \u2502   \u2502TABLE: tbl2      \u2502                                                                                      |\n|  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                                                      |\n+---------------------------------------------------------------------------------------------------------------------------------+\n")),(0,r.yg)("p",null,"As can be seen from the figure, the query plan tree is divided into 5 fragments: 0, 1, 2, 3, and 4. For example, ",(0,r.yg)("inlineCode",{parentName:"p"},"[Fragment: 0]")," on the ",(0,r.yg)("inlineCode",{parentName:"p"},"OlapScanNode")," node indicates that this node belongs to Fragment 0. Data is transferred between each Fragment through DataStreamSink and ExchangeNode."),(0,r.yg)("p",null,"The graphics command only displays the simplified node information. If you need to view more specific node information, such as the filter conditions pushed to the node as follows, you need to view the more detailed text version information through the second command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain select tbl1.k1, sum(tbl1.k2) from tbl1 join tbl2 on tbl1.k1 = tbl2.k1 group by tbl1.k1 order by tbl1.k1;\n+----------------------------------------------------------------------------------+\n| Explain String                                                                   |\n+----------------------------------------------------------------------------------+\n| PLAN FRAGMENT 0                                                                  |\n|  OUTPUT EXPRS:<slot 5> <slot 3> `tbl1`.`k1` | <slot 6> <slot 4> sum(`tbl1`.`k2`) |\n|   PARTITION: UNPARTITIONED                                                       |\n|                                                                                  |\n|   RESULT SINK                                                                    |\n|                                                                                  |\n|   9:MERGING-EXCHANGE                                                             |\n|      limit: 65535                                                                |\n|                                                                                  |\n| PLAN FRAGMENT 1                                                                  |\n|  OUTPUT EXPRS:                                                                   |\n|   PARTITION: HASH_PARTITIONED: <slot 3> `tbl1`.`k1`                              |\n|                                                                                  |\n|   STREAM DATA SINK                                                               |\n|     EXCHANGE ID: 09                                                              |\n|     UNPARTITIONED                                                                |\n|                                                                                  |\n|   4:TOP-N                                                                        |\n|   |  order by: <slot 5> <slot 3> `tbl1`.`k1` ASC                                 |\n|   |  offset: 0                                                                   |\n|   |  limit: 65535                                                                |\n|   |                                                                              |\n|   8:AGGREGATE (merge finalize)                                                   |\n|   |  output: sum(<slot 4> sum(`tbl1`.`k2`))                                      |\n|   |  group by: <slot 3> `tbl1`.`k1`                                              |\n|   |  cardinality=-1                                                              |\n|   |                                                                              |\n|   7:EXCHANGE                                                                     |\n|                                                                                  |\n| PLAN FRAGMENT 2                                                                  |\n|  OUTPUT EXPRS:                                                                   |\n|   PARTITION: HASH_PARTITIONED: `tbl1`.`k1`                                       |\n|                                                                                  |\n|   STREAM DATA SINK                                                               |\n|     EXCHANGE ID: 07                                                              |\n|     HASH_PARTITIONED: <slot 3> `tbl1`.`k1`                                       |\n|                                                                                  |\n|   3:AGGREGATE (update serialize)                                                 |\n|   |  STREAMING                                                                   |\n|   |  output: sum(`tbl1`.`k2`)                                                    |\n|   |  group by: `tbl1`.`k1`                                                       |\n|   |  cardinality=-1                                                              |\n|   |                                                                              |\n|   2:HASH JOIN                                                                    |\n|   |  join op: INNER JOIN (PARTITIONED)                                           |\n|   |  runtime filter: false                                                       |\n|   |  hash predicates:                                                            |\n|   |  colocate: false, reason: table not in the same group                        |\n|   |  equal join conjunct: `tbl1`.`k1` = `tbl2`.`k1`                              |\n|   |  cardinality=2                                                               |\n|   |                                                                              |\n|   |----6:EXCHANGE                                                                |\n|   |                                                                              |\n|   5:EXCHANGE                                                                     |\n|                                                                                  |\n| PLAN FRAGMENT 3                                                                  |\n|  OUTPUT EXPRS:                                                                   |\n|   PARTITION: RANDOM                                                              |\n|                                                                                  |\n|   STREAM DATA SINK                                                               |\n|     EXCHANGE ID: 06                                                              |\n|     HASH_PARTITIONED: `tbl2`.`k1`                                                |\n|                                                                                  |\n|   1:OlapScanNode                                                                 |\n|      TABLE: tbl2                                                                 |\n|      PREAGGREGATION: ON                                                          |\n|      partitions=1/1                                                              |\n|      rollup: tbl2                                                                |\n|      tabletRatio=3/3                                                             |\n|      tabletList=105104776,105104780,105104784                                    |\n|      cardinality=1                                                               |\n|      avgRowSize=4.0                                                              |\n|      numNodes=6                                                                  |\n|                                                                                  |\n| PLAN FRAGMENT 4                                                                  |\n|  OUTPUT EXPRS:                                                                   |\n|   PARTITION: RANDOM                                                              |\n|                                                                                  |\n|   STREAM DATA SINK                                                               |\n|     EXCHANGE ID: 05                                                              |\n|     HASH_PARTITIONED: `tbl1`.`k1`                                                |\n|                                                                                  |\n|   0:OlapScanNode                                                                 |\n|      TABLE: tbl1                                                                 |\n|      PREAGGREGATION: ON                                                          |\n|      partitions=1/1                                                              |\n|      rollup: tbl1                                                                |\n|      tabletRatio=3/3                                                             |\n|      tabletList=105104752,105104763,105104767                                    |\n|      cardinality=2                                                               |\n|      avgRowSize=8.0                                                              |\n|      numNodes=6                                                                  |\n+----------------------------------------------------------------------------------+\n")),(0,r.yg)("p",null,"The third command ",(0,r.yg)("inlineCode",{parentName:"p"},"explain verbose select ...;")," gives you more details than the second command."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain verbose select tbl1.k1, sum(tbl1.k2) from tbl1 join tbl2 on tbl1.k1 = tbl2.k1 group by tbl1.k1 order by tbl1.k1;\n+---------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Explain String                                                                                                                                          |\n+---------------------------------------------------------------------------------------------------------------------------------------------------------+\n| PLAN FRAGMENT 0                                                                                                                                         |\n|   OUTPUT EXPRS:<slot 5> <slot 3> `tbl1`.`k1` | <slot 6> <slot 4> sum(`tbl1`.`k2`)                                                                       |\n|   PARTITION: UNPARTITIONED                                                                                                                              |\n|                                                                                                                                                         |\n|   VRESULT SINK                                                                                                                                          |\n|                                                                                                                                                         |\n|   6:VMERGING-EXCHANGE                                                                                                                                   |\n|      limit: 65535                                                                                                                                       |\n|      tuple ids: 3                                                                                                                                       |\n|                                                                                                                                                         |\n| PLAN FRAGMENT 1                                                                                                                                         |\n|                                                                                                                                                         |\n|   PARTITION: HASH_PARTITIONED: `default_cluster:test`.`tbl1`.`k2`                                                                                       |\n|                                                                                                                                                         |\n|   STREAM DATA SINK                                                                                                                                      |\n|     EXCHANGE ID: 06                                                                                                                                     |\n|     UNPARTITIONED                                                                                                                                       |\n|                                                                                                                                                         |\n|   4:VTOP-N                                                                                                                                              |\n|   |  order by: <slot 5> <slot 3> `tbl1`.`k1` ASC                                                                                                        |\n|   |  offset: 0                                                                                                                                          |\n|   |  limit: 65535                                                                                                                                       |\n|   |  tuple ids: 3                                                                                                                                       |\n|   |                                                                                                                                                     |\n|   3:VAGGREGATE (update finalize)                                                                                                                        |\n|   |  output: sum(<slot 8>)                                                                                                                              |\n|   |  group by: <slot 7>                                                                                                                                 |\n|   |  cardinality=-1                                                                                                                                     |\n|   |  tuple ids: 2                                                                                                                                       |\n|   |                                                                                                                                                     |\n|   2:VHASH JOIN                                                                                                                                          |\n|   |  join op: INNER JOIN(BROADCAST)[Tables are not in the same group]                                                                                   |\n|   |  equal join conjunct: CAST(`tbl1`.`k1` AS DATETIME) = `tbl2`.`k1`                                                                                   |\n|   |  runtime filters: RF000[in_or_bloom] <- `tbl2`.`k1`                                                                                                 |\n|   |  cardinality=0                                                                                                                                      |\n|   |  vec output tuple id: 4  |  tuple ids: 0 1                                                                                                          |\n|   |                                                                                                                                                     |\n|   |----5:VEXCHANGE                                                                                                                                      |\n|   |       tuple ids: 1                                                                                                                                  |\n|   |                                                                                                                                                     |\n|   0:VOlapScanNode                                                                                                                                       |\n|      TABLE: tbl1(null), PREAGGREGATION: OFF. Reason: the type of agg on StorageEngine's Key column should only be MAX or MIN.agg expr: sum(`tbl1`.`k2`) |\n|      runtime filters: RF000[in_or_bloom] -> CAST(`tbl1`.`k1` AS DATETIME)                                                                               |\n|      partitions=0/1, tablets=0/0, tabletList=                                                                                                           |\n|      cardinality=0, avgRowSize=20.0, numNodes=1                                                                                                         |\n|      tuple ids: 0                                                                                                                                       |\n|                                                                                                                                                         |\n| PLAN FRAGMENT 2                                                                                                                                         |\n|                                                                                                                                                         |\n|   PARTITION: HASH_PARTITIONED: `default_cluster:test`.`tbl2`.`k2`                                                                                       |\n|                                                                                                                                                         |\n|   STREAM DATA SINK                                                                                                                                      |\n|     EXCHANGE ID: 05                                                                                                                                     |\n|     UNPARTITIONED                                                                                                                                       |\n|                                                                                                                                                         |\n|   1:VOlapScanNode                                                                                                                                       |\n|      TABLE: tbl2(null), PREAGGREGATION: OFF. Reason: null                                                                                               |\n|      partitions=0/1, tablets=0/0, tabletList=                                                                                                           |\n|      cardinality=0, avgRowSize=16.0, numNodes=1                                                                                                         |\n|      tuple ids: 1                                                                                                                                       |\n|                                                                                                                                                         |\n| Tuples:                                                                                                                                                 |\n| TupleDescriptor{id=0, tbl=tbl1, byteSize=32, materialized=true}                                                                                         |\n|   SlotDescriptor{id=0, col=k1, type=DATE}                                                                                                               |\n|     parent=0                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=16                                                                                                                                         |\n|     byteOffset=16                                                                                                                                       |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=1                                                                                                                                           |\n|                                                                                                                                                         |\n|   SlotDescriptor{id=2, col=k2, type=INT}                                                                                                                |\n|     parent=0                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=4                                                                                                                                          |\n|     byteOffset=0                                                                                                                                        |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=0                                                                                                                                           |\n|                                                                                                                                                         |\n|                                                                                                                                                         |\n| TupleDescriptor{id=1, tbl=tbl2, byteSize=16, materialized=true}                                                                                         |\n|   SlotDescriptor{id=1, col=k1, type=DATETIME}                                                                                                           |\n|     parent=1                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=16                                                                                                                                         |\n|     byteOffset=0                                                                                                                                        |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=0                                                                                                                                           |\n|                                                                                                                                                         |\n|                                                                                                                                                         |\n| TupleDescriptor{id=2, tbl=null, byteSize=32, materialized=true}                                                                                         |\n|   SlotDescriptor{id=3, col=null, type=DATE}                                                                                                             |\n|     parent=2                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=16                                                                                                                                         |\n|     byteOffset=16                                                                                                                                       |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=1                                                                                                                                           |\n|                                                                                                                                                         |\n|   SlotDescriptor{id=4, col=null, type=BIGINT}                                                                                                           |\n|     parent=2                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=8                                                                                                                                          |\n|     byteOffset=0                                                                                                                                        |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=0                                                                                                                                           |\n|                                                                                                                                                         |\n|                                                                                                                                                         |\n| TupleDescriptor{id=3, tbl=null, byteSize=32, materialized=true}                                                                                         |\n|   SlotDescriptor{id=5, col=null, type=DATE}                                                                                                             |\n|     parent=3                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=16                                                                                                                                         |\n|     byteOffset=16                                                                                                                                       |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=1                                                                                                                                           |\n|                                                                                                                                                         |\n|   SlotDescriptor{id=6, col=null, type=BIGINT}                                                                                                           |\n|     parent=3                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=8                                                                                                                                          |\n|     byteOffset=0                                                                                                                                        |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=0                                                                                                                                           |\n|                                                                                                                                                         |\n|                                                                                                                                                         |\n| TupleDescriptor{id=4, tbl=null, byteSize=48, materialized=true}                                                                                         |\n|   SlotDescriptor{id=7, col=k1, type=DATE}                                                                                                               |\n|     parent=4                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=16                                                                                                                                         |\n|     byteOffset=16                                                                                                                                       |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=1                                                                                                                                           |\n|                                                                                                                                                         |\n|   SlotDescriptor{id=8, col=k2, type=INT}                                                                                                                |\n|     parent=4                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=4                                                                                                                                          |\n|     byteOffset=0                                                                                                                                        |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=0                                                                                                                                           |\n|                                                                                                                                                         |\n|   SlotDescriptor{id=9, col=k1, type=DATETIME}                                                                                                           |\n|     parent=4                                                                                                                                            |\n|     materialized=true                                                                                                                                   |\n|     byteSize=16                                                                                                                                         |\n|     byteOffset=32                                                                                                                                       |\n|     nullIndicatorByte=0                                                                                                                                 |\n|     nullIndicatorBit=-1                                                                                                                                 |\n|     slotIdx=2                                                                                                                                           |\n+---------------------------------------------------------------------------------------------------------------------------------------------------------+\n160 rows in set (0.00 sec)\n")),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"The information displayed in the query plan is still being standardized and improved, and we will introduce it in detail in subsequent articles.")),(0,r.yg)("h2",{id:"view-query-profile"},"View query Profile"),(0,r.yg)("p",null,"The user can open the session variable ",(0,r.yg)("inlineCode",{parentName:"p"},"is_report_success")," with the following command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"SET is_report_success=true;\n")),(0,r.yg)("p",null,"Then execute the query, and Doris will generate a Profile of the query. Profile contains the specific execution of a query for each node, which helps us analyze query bottlenecks."),(0,r.yg)("p",null,"After executing the query, we can first get the Profile list with the following command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'mysql> show query profile "/"\\G\n**************************** 1. row ******************** ******\n   QueryId: c257c52f93e149ee-ace8ac14e8c9fef9\n      User: root\n DefaultDb: default_cluster:db1\n       SQL: select tbl1.k1, sum(tbl1.k2) from tbl1 join tbl2 on tbl1.k1 = tbl2.k1 group by tbl1.k1 order by tbl1.k1\n QueryType: Query\n StartTime: 2021-04-08 11:30:50\n   EndTime: 2021-04-08 11:30:50\n TotalTime: 9ms\nQueryState: EOF\n')),(0,r.yg)("p",null,"This command will list all currently saved profiles. Each row corresponds to a query. We can select the QueryId corresponding to the Profile we want to see to see the specific situation."),(0,r.yg)("p",null,"Viewing a Profile is divided into 3 steps:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"View the overall execution plan tree"),(0,r.yg)("p",{parentName:"li"},"This step is mainly used to analyze the execution plan as a whole and view the execution time of each Fragment."),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'mysql> show query profile "/c257c52f93e149ee-ace8ac14e8c9fef9"\\G\n*************************** 1. row ***************************\nFragments:\n             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             \u2502[-1: DataBufferSender]\u2502\n             \u2502Fragment: 0           \u2502\n             \u2502MaxActiveTime: 6.626ms\u2502\n             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                         \u2502\n               \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n               \u2502[9: EXCHANGE_NODE]\u2502\n               \u2502Fragment: 0       \u2502\n               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                         \u2502\n             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             \u2502[9: DataStreamSender] \u2502\n             \u2502Fragment: 1           \u2502\n             \u2502MaxActiveTime: 5.449ms\u2502\n             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                         \u2502\n                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                 \u2502[4: SORT_NODE]\u2502\n                 \u2502Fragment: 1   \u2502\n                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                        \u250c\u2518\n             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             \u2502[8: AGGREGATION_NODE]\u2502\n             \u2502Fragment: 1          \u2502\n             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                        \u2514\u2510\n               \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n               \u2502[7: EXCHANGE_NODE]\u2502\n               \u2502Fragment: 1       \u2502\n               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                         \u2502\n             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             \u2502[7: DataStreamSender] \u2502\n             \u2502Fragment: 2           \u2502\n             \u2502MaxActiveTime: 3.505ms\u2502\n             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                        \u250c\u2518\n             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             \u2502[3: AGGREGATION_NODE]\u2502\n             \u2502Fragment: 2          \u2502\n             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                        \u2502\n              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n              \u2502[2: HASH_JOIN_NODE]\u2502\n              \u2502Fragment: 2        \u2502\n              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n \u2502[5: EXCHANGE_NODE]\u2502      \u2502[6: EXCHANGE_NODE]\u2502\n \u2502Fragment: 2       \u2502      \u2502Fragment: 2       \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502                         \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502[5: DataStreamSender]\u2502 \u2502[6: DataStreamSender]   \u2502\n\u2502Fragment: 4          \u2502 \u2502Fragment: 3             \u2502\n\u2502MaxActiveTime: 1.87ms\u2502 \u2502MaxActiveTime: 636.767us\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502                        \u250c\u2518\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n \u2502[0: OLAP_SCAN_NODE]\u2502    \u2502[1: OLAP_SCAN_NODE]\u2502\n \u2502Fragment: 4        \u2502    \u2502Fragment: 3        \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502                        \u2502\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502[OlapScanner]\u2502          \u2502[OlapScanner]\u2502\n    \u2502Fragment: 4  \u2502          \u2502Fragment: 3  \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502                        \u2502\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502[SegmentIterator]\u2502      \u2502[SegmentIterator]\u2502\n  \u2502Fragment: 4      \u2502      \u2502Fragment: 3      \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n1 row in set (0.02 sec)\n')),(0,r.yg)("p",{parentName:"li"},"As shown in the figure above, each node is marked with the Fragment to which it belongs, and at the Sender node of each Fragment, the execution time of the Fragment is marked. This time-consuming is the longest of all Instance execution times under Fragment. This helps us find the most time-consuming Fragment from an overall perspective.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"View the Instance list under the specific Fragment"),(0,r.yg)("p",{parentName:"li"},"   For example, if we find that Fragment 1 takes the longest time, we can continue to view the Instance list of Fragment 1:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"```sql\n")),(0,r.yg)("p",{parentName:"li"},'   mysql> show query profile "/c257c52f93e149ee-ace8ac14e8c9fef9/1";\n+-----------------------------------+-------------------+------------+\n| Instances                         | Host              | ActiveTime |\n+-----------------------------------+-------------------+------------+\n| c257c52f93e149ee-ace8ac14e8c9ff03 | 10.200.00.01:9060 | 5.449ms    |\n| c257c52f93e149ee-ace8ac14e8c9ff05 | 10.200.00.02:9060 | 5.367ms    |\n| c257c52f93e149ee-ace8ac14e8c9ff04 | 10.200.00.03:9060 | 5.358ms    |\n+-----------------------------------+-------------------+------------+ '),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"This shows the execution nodes and time consumption of all three Instances on Fragment 1.\n\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"View the specific Instance"),(0,r.yg)("p",{parentName:"li"},"We can continue to view the detailed profile of each operator on a specific Instance:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'mysql> show query profile "/c257c52f93e149ee-ace8ac14e8c9fef9/1/c257c52f93e149ee-ace8ac14e8c9ff03"\\G\n**************************** 1. row ******************** ******\nInstance:\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n \u2502[9: DataStreamSender] \u2502\n \u2502(Active: 37.222us, non-child: 0.40) \u2502\n \u2502 - Counters: \u2502\n \u2502 - BytesSent: 0.00 \u2502\n \u2502 - IgnoreRows: 0 \u2502\n \u2502 - OverallThroughput: 0.0 /sec \u2502\n \u2502 - PeakMemoryUsage: 8.00 KB \u2502\n \u2502 - SerializeBatchTime: 0ns \u2502\n \u2502 - UncompressedRowBatchSize: 0.00 \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                     \u2514\u2510\n                      \u2502\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502[4: SORT_NODE] \u2502\n    \u2502(Active: 5.421ms, non-child: 0.71)\u2502\n    \u2502 - Counters: \u2502\n    \u2502 - PeakMemoryUsage: 12.00 KB \u2502\n    \u2502 - RowsReturned: 0 \u2502\n    \u2502 - RowsReturnedRate: 0 \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                     \u250c\u2518\n                     \u2502\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502[8: AGGREGATION_NODE] \u2502\n   \u2502(Active: 5.355ms, non-child: 10.68)\u2502\n   \u2502 - Counters: \u2502\n   \u2502 - BuildTime: 3.701us \u2502\n   \u2502 - GetResultsTime: 0ns \u2502\n   \u2502 - HTResize: 0 \u2502\n   \u2502 - HTResizeTime: 1.211us \u2502\n   \u2502 - HashBuckets: 0 \u2502\n   \u2502 - HashCollisions: 0 \u2502\n   \u2502 - HashFailedProbe: 0 \u2502\n   \u2502 - HashFilledBuckets: 0 \u2502\n   \u2502 - HashProbe: 0 \u2502\n   \u2502 - HashTravelLength: 0 \u2502\n   \u2502 - LargestPartitionPercent: 0 \u2502\n   \u2502 - MaxPartitionLevel: 0 \u2502\n   \u2502 - NumRepartitions: 0 \u2502\n   \u2502 - PartitionsCreated: 16 \u2502\n   \u2502 - PeakMemoryUsage: 34.02 MB \u2502\n   \u2502 - RowsProcessed: 0 \u2502\n   \u2502 - RowsRepartitioned: 0 \u2502\n   \u2502 - RowsReturned: 0 \u2502\n   \u2502 - RowsReturnedRate: 0 \u2502\n   \u2502 - SpilledPartitions: 0 \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                     \u2514\u2510\n                      \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502[7: EXCHANGE_NODE] \u2502\n\u2502(Active: 4.360ms, non-child: 46.84) \u2502\n\u2502 - Counters: \u2502\n\u2502 - BytesReceived: 0.00 \u2502\n\u2502 - ConvertRowBatchTime: 387ns \u2502\n\u2502 - DataArrivalWaitTime: 4.357ms \u2502\n\u2502 - DeserializeRowBatchTimer: 0ns \u2502\n\u2502 - FirstBatchArrivalWaitTime: 4.356ms\u2502\n\u2502 - PeakMemoryUsage: 0.00 \u2502\n\u2502 - RowsReturned: 0 \u2502\n\u2502 - RowsReturnedRate: 0 \u2502\n\u2502 - SendersBlockedTotalTimer(*): 0ns \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n')),(0,r.yg)("p",{parentName:"li"},"The above figure shows the specific profiles of each operator of Instance c257c52f93e149ee-ace8ac14e8c9ff03 in Fragment 1."))),(0,r.yg)("p",null,"Through the above three steps, we can gradually check the performance bottleneck of a SQL."))}d.isMDXComponent=!0}}]);