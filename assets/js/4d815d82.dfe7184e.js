"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[925947],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>d});var r=t(296540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(t),m=a,d=p["".concat(s,".").concat(m)]||p[m]||g[m]||l;return t?r.createElement(d,i(i({ref:n},c),{},{components:t})):r.createElement(d,i({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},185688:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var r=t(58168),a=(t(296540),t(15680));const l={title:"KURT,KURT_POP,KURTOSIS",language:"en"},i=void 0,o={unversionedId:"sql-manual/sql-functions/aggregate-functions/kurt",id:"version-3.0/sql-manual/sql-functions/aggregate-functions/kurt",title:"KURT,KURT_POP,KURTOSIS",description:"\x3c!--",source:"@site/versioned_docs/version-3.0/sql-manual/sql-functions/aggregate-functions/kurt.md",sourceDirName:"sql-manual/sql-functions/aggregate-functions",slug:"/sql-manual/sql-functions/aggregate-functions/kurt",permalink:"/docs/3.0/sql-manual/sql-functions/aggregate-functions/kurt",draft:!1,tags:[],version:"3.0",frontMatter:{title:"KURT,KURT_POP,KURTOSIS",language:"en"},sidebar:"docs",previous:{title:"SEQUENCE-COUNT",permalink:"/docs/3.0/sql-manual/sql-functions/aggregate-functions/sequence-count"},next:{title:"SKEW,SKEW_POP,SKEWNESS",permalink:"/docs/3.0/sql-manual/sql-functions/aggregate-functions/skew"}},s={},u=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Return value",id:"return-value",level:2},{value:"Example",id:"example",level:2},{value:"Related Commands",id:"related-commands",level:2}],c={toc:u},p="wrapper";function g(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,r.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"description"},"Description"),(0,a.yg)("p",null,"Returns the ",(0,a.yg)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Kurtosis"},"kurtosis")," of the expr expression.\nThe forumula used for this function is ",(0,a.yg)("inlineCode",{parentName:"p"},"4-th centrol moment / ((variance)^2) - 3"),", when variance is zero, ",(0,a.yg)("inlineCode",{parentName:"p"},"kurtosis")," will return ",(0,a.yg)("inlineCode",{parentName:"p"},"NULL"),"."),(0,a.yg)("h2",{id:"syntax"},"Syntax"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"kurtosis(expr)")),(0,a.yg)("h2",{id:"arguments"},"Arguments"),(0,a.yg)("p",null,"TinyInt/SmallInt/Integer/BigInt/Float/Double, Decimal will be casted to a float number."),(0,a.yg)("h2",{id:"return-value"},"Return value"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"Double")),(0,a.yg)("h2",{id:"example"},"Example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},'create table statistic_test(tag int, val1 double not null, val2 double null) distributed by hash(tag) properties("replication_num"="1")\n\ninsert into statistic_test values (1, -10, -10),(2, -20, NULL),(3, 100, NULL),(4, 100, NULL),(5, 1000,1000);\n\n// NULL is ignored\nselect kurt(val1), kurt(val2) from statistic_test\n--------------\n\n+-------------------+--------------------+\n| kurt(val1)        | kurt(val2)         |\n+-------------------+--------------------+\n| 0.162124583734851 | -1.3330994719286338 |\n+-------------------+--------------------+\n1 row in set (0.02 sec)\n\n// Each group just has one row, result is NULL\nselect kurt(val1), kurt(val2) from statistic_test group by tag\n--------------\n\n+------------+------------+\n| kurt(val1) | kurt(val2) |\n+------------+------------+\n|       NULL |       NULL |\n|       NULL |       NULL |\n|       NULL |       NULL |\n|       NULL |       NULL |\n|       NULL |       NULL |\n+------------+------------+\n5 rows in set (0.02 sec)\n')),(0,a.yg)("h2",{id:"related-commands"},"Related Commands"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.0/sql-manual/sql-functions/aggregate-functions/skew"},"skew")))}g.isMDXComponent=!0}}]);