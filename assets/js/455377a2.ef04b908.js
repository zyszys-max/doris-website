"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[237281],{15680:(e,t,r)=>{r.d(t,{xA:()=>i,yg:()=>m});var a=r(296540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),p=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},i=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),u=p(r),g=n,m=u["".concat(c,".").concat(g)]||u[g]||d[g]||o;return r?a.createElement(m,l(l({ref:t},i),{},{components:r})):a.createElement(m,l({ref:t},i))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:n,l[1]=s;for(var p=2;p<o;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},736281:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=r(58168),n=(r(296540),r(15680));const o={title:"Quick Start",language:"en"},l=void 0,s={unversionedId:"install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-quickstart",id:"install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-quickstart",title:"Quick Start",description:"\x3c!--",source:"@site/docs/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-quickstart.md",sourceDirName:"install/cluster-deployment/k8s-deploy/compute-storage-decoupled",slug:"/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-quickstart",permalink:"/docs/dev/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-quickstart",draft:!1,tags:[],version:"current",frontMatter:{title:"Quick Start",language:"en"},sidebar:"docs",previous:{title:"Cluster Operation",permalink:"/docs/dev/install/cluster-deployment/k8s-deploy/compute-storage-coupled/cluster-operation"},next:{title:"Install FoundationDB",permalink:"/docs/dev/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-fdb"}},c={},p=[{value:"Step 1: Deploy Operator",id:"step-1-deploy-operator",level:2},{value:"Step 2: Quickly deploy a storage and computing separation cluster",id:"step-2-quickly-deploy-a-storage-and-computing-separation-cluster",level:2},{value:"Step 3: Creating remote storage vault",id:"step-3-creating-remote-storage-vault",level:2}],i={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.yg)(u,(0,a.A)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"To deploy a storage-computing separation cluster on K8s, FDB deployed in advance is required. If it is a virtual machine deployment, please ensure the deployed virtual machine can be accessed by the services on the K8s cluster. For deployment, please refer to ",(0,n.yg)("a",{parentName:"p",href:"/docs/dev/compute-storage-decoupled/before-deployment#51-install-foundationdb"},"Before Deployment")," doc; if deploy on K8s, please refer to ",(0,n.yg)("a",{parentName:"p",href:"/docs/dev/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-fdb"},"FDB deployment on k8s"),".",(0,n.yg)("br",{parentName:"p"}),"\n","Doris storage-computing separation cluster deployment is divided into two parts: deploying Doris-Operator and its RBAC resources; Deploying customized resource ",(0,n.yg)("inlineCode",{parentName:"p"},"DorisDisaggregatedCluster"),"."),(0,n.yg)("h2",{id:"step-1-deploy-operator"},"Step 1: Deploy Operator"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Issue resource definitions:")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"kubectl create -f https://raw.githubusercontent.com/apache/doris-operator/master/config/crd/bases/crds.yaml\n")),(0,n.yg)("p",null,"Expected Results:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"customresourcedefinition.apiextensions.k8s.io/dorisdisaggregatedclusters.disaggregated.cluster.doris.com created\ncustomresourcedefinition.apiextensions.k8s.io/doris.selectdb.com_dorisclusters.yaml created\n")),(0,n.yg)("ol",{start:2},(0,n.yg)("li",{parentName:"ol"},"Deploy Doris-Operator and dependent RBAC rules:")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/apache/doris-operator/master/config/operator/disaggregated-operator.yaml\n")),(0,n.yg)("p",null,"Expected Results:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"kubectl -n doris get pods\nNAME                              READY   STATUS    RESTARTS   AGE\ndoris-operator-6b97df65c4-xwvw8   1/1     Running   0          19s\n")),(0,n.yg)("h2",{id:"step-2-quickly-deploy-a-storage-and-computing-separation-cluster"},"Step 2: Quickly deploy a storage and computing separation cluster"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Download the ",(0,n.yg)("inlineCode",{parentName:"li"},"ddc-sample.yaml")," deployment sample:")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"curl -O https://raw.githubusercontent.com/apache/doris-operator/master/doc/examples/disaggregated/cluster/ddc-sample.yaml\n")),(0,n.yg)("ol",{start:2},(0,n.yg)("li",{parentName:"ol"},"According to the documents of deploying doris storage and computing separation cluster, configure metaService in the ",(0,n.yg)("a",{parentName:"li",href:"/docs/dev/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/config-ms"},"metadata configuration"),"; configure the fe specifications in the ",(0,n.yg)("a",{parentName:"li",href:"/docs/dev/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/config-fe"},"fe configuration"),"; and configure the resource groups in the ",(0,n.yg)("a",{parentName:"li",href:"/docs/dev/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/config-cg"},"compute cluster configuration"),". After the configuration is completed, use the following command to deploy resource:")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f ddc-sample.yaml\n")),(0,n.yg)("p",null,"After the deployment resource is delivered, using the command ",(0,n.yg)("inlineCode",{parentName:"p"},"kubectl get ddc")," to check the cluster status. The expected successful result is as follow:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"kubectl get ddc\nNAME                         CLUSTERHEALTH   FEPHASE   CGCOUNT   CGAVAILABLECOUNT   CGFULLAVAILABLECOUNT\ntest-disaggregated-cluster   green           Ready     2         2                  2\n")),(0,n.yg)("admonition",{title:"Tip  ",type:"tip"},(0,n.yg)("p",{parentName:"admonition"},"MS service needs to use FDB as the backend metadata storage. FDB service must be deployed before deploying MS service. Please deploy it in advance according to ",(0,n.yg)("a",{parentName:"p",href:"/docs/dev/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-fdb"},"install FDB"),".  ")),(0,n.yg)("h2",{id:"step-3-creating-remote-storage-vault"},"Step 3: Creating remote storage vault"),(0,n.yg)("p",null,"After the cluster is built, you need to execute the corresponding ",(0,n.yg)("inlineCode",{parentName:"p"},"CREATE STORAGE VAULT")," SQL statement through the client to create a storage backend to achieve data persistence.\nRefer to ",(0,n.yg)("a",{parentName:"p",href:"../compute-storage-coupled/install-access-cluster.md"},"Accessing Doris Cluster")," to connect to the Doris cluster. One of the implementation methods is provided below."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"1. Get service")),(0,n.yg)("p",null,"After deploying the cluster, you can view the service exposed by Doris Operator by using the following command:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"kubectl get svc\n")),(0,n.yg)("p",null,"The returned results are as follows:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"NAME                                     TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)                               AGE\ntest-disaggregated-cluster-fe            ClusterIP   10.96.147.97   <none>        8030/TCP,9020/TCP,9030/TCP,9010/TCP   15m\ntest-disaggregated-cluster-fe-internal   ClusterIP   None           <none>        9030/TCP                              15m\ntest-disaggregated-cluster-ms            ClusterIP   10.96.169.8    <none>        5000/TCP                              15m\ntest-disaggregated-cluster-cg1           ClusterIP   10.96.47.90    <none>        9060/TCP,8040/TCP,9050/TCP,8060/TCP   14m\ntest-disaggregated-cluster-cg2           ClusterIP   10.96.50.199   <none>        9060/TCP,8040/TCP,9050/TCP,8060/TCP   14m\n")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"2. Access by MySQL Client")),(0,n.yg)("p",null,"Use the following command to create a pod containing the mysql client in the current Kubernetes cluster:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"kubectl run mysql-client --image=mysql:5.7 -it --rm --restart=Never -- /bin/bash\n")),(0,n.yg)("p",null,"In the container within the cluster, you can use the fe service name to access the Doris cluster:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"mysql -uroot -P9030 -h test-disaggregated-cluster-fe  \n")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"3. Create storage vault")),(0,n.yg)("p",null,"Create statement syntax, please refer to ",(0,n.yg)("a",{parentName:"p",href:"/docs/dev/compute-storage-decoupled/managing-storage-vault"},"managing storage vault"),".",(0,n.yg)("br",{parentName:"p"}),"\n","Here is an example of S3 protocol object storage:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Create S3 Storage Vault")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-SQL"},'CREATE STORAGE VAULT IF NOT EXISTS s3_vault\n    PROPERTIES (\n        "type"="S3",                                   -- required\n        "s3.endpoint" = "oss-cn-beijing.aliyuncs.com", -- required\n        "s3.region" = "bj",                            -- required\n        "s3.bucket" = "bucket",                        -- required\n        "s3.root.path" = "big/data/prefix",            -- required\n        "s3.access_key" = "ak",                        -- required\n        "s3.secret_key" = "sk",                        -- required\n        "provider" = "OSS"                             -- required\n    );\n')),(0,n.yg)("ol",{start:2},(0,n.yg)("li",{parentName:"ol"},"Set the default storage vault")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-SQL"},"SET s3_vault AS DEFAULT STORAGE VAULT;\n")))}d.isMDXComponent=!0}}]);