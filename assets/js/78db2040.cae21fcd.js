"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[964938],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>m});var a=t(296540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(t),g=o,m=c["".concat(s,".").concat(g)]||c[g]||d[g]||r;return t?a.createElement(m,l(l({ref:n},u),{},{components:t})):a.createElement(m,l({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=g;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[c]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<r;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},119365:(e,n,t)=>{t.d(n,{A:()=>l});var a=t(296540),o=t(320053);const r={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:t,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.A)(r.tabItem,l),hidden:t},n)}},411470:(e,n,t)=>{t.d(n,{A:()=>w});var a=t(58168),o=t(296540),r=t(320053),l=t(823104),i=t(956347),s=t(757485),p=t(231682),u=t(289466);function c(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:o}}=e;return{value:n,label:t,attributes:a,default:o}}))}function d(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??c(t);return function(e){const n=(0,p.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s.aZ)(r),(0,o.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function y(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=d(e),[l,i]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[s,p]=m({queryString:t,groupId:a}),[c,y]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,u.Dv)(t);return[a,(0,o.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),h=(()=>{const e=s??c;return g({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{h&&i(h)}),[h]);return{selectedValue:l,selectValue:(0,o.useCallback)((e=>{if(!g({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),p(e),y(e)}),[p,y,r]),tabValues:r}}var h=t(992303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:n,block:t,selectedValue:i,selectValue:s,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),d=e=>{const n=e.currentTarget,t=u.indexOf(n),a=p[t].value;a!==i&&(c(n),s(a))},g=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}n?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n)},p.map((e=>{let{value:n,label:t,attributes:l}=e;return o.createElement("li",(0,a.A)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>u.push(e),onKeyDown:g,onClick:d},l,{className:(0,r.A)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":i===n})}),t??n)})))}function v(e){let{lazy:n,children:t,selectedValue:a}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function N(e){const n=y(e);return o.createElement("div",{className:(0,r.A)("tabs-container",f.tabList)},o.createElement(b,(0,a.A)({},e,n)),o.createElement(v,(0,a.A)({},e,n)))}function w(e){const n=(0,h.A)();return o.createElement(N,(0,a.A)({key:String(n)},e))}},184552:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=t(58168),o=(t(296540),t(15680));t(411470),t(119365);const r={title:"Compiling with Arm",language:"en"},l=void 0,i={unversionedId:"install/source-install/compilation-arm",id:"version-2.0/install/source-install/compilation-arm",title:"Compiling with Arm",description:"\x3c!--",source:"@site/versioned_docs/version-2.0/install/source-install/compilation-arm.md",sourceDirName:"install/source-install",slug:"/install/source-install/compilation-arm",permalink:"/docs/2.0/install/source-install/compilation-arm",draft:!1,tags:[],version:"2.0",frontMatter:{title:"Compiling with Arm",language:"en"},sidebar:"docs",previous:{title:"Compiling on Linux",permalink:"/docs/2.0/install/source-install/compilation-linux"},next:{title:"Compiling on Windows",permalink:"/docs/2.0/install/source-install/compilation-win"}},s={},p=[{value:"Hardware/OS environment",id:"hardwareos-environment",level:2},{value:"Software Environment",id:"software-environment",level:2},{value:"Software Environment List",id:"software-environment-list",level:3},{value:"Install with CentOS 8.4",id:"install-with-centos-84",level:3},{value:"Install with Ubuntu 20.04",id:"install-with-ubuntu-2004",level:3},{value:"Compile",id:"compile",level:2},{value:"FAQ",id:"faq",level:2}],u={toc:p},c="wrapper";function d(e){let{components:n,...t}=e;return(0,o.yg)(c,(0,a.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"compile-with-arm"},"Compile with ARM"),(0,o.yg)("p",null,"This document describes how to compile Doris on the ARM64 platform."),(0,o.yg)("p",null,"Please note that this document is provided as a guide only. Compiling in different environments may result in different errors. If you encounter any problems, feel free to raise an ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/apache/doris/issues"},"issue")," or propose a solution to Doris."),(0,o.yg)("h2",{id:"hardwareos-environment"},"Hardware/OS environment"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"System version: CentOS 8.4, Ubuntu 20.04"),(0,o.yg)("li",{parentName:"ul"},"System architecture: ARM64"),(0,o.yg)("li",{parentName:"ul"},"Memory: 16 GB +")),(0,o.yg)("h2",{id:"software-environment"},"Software Environment"),(0,o.yg)("h3",{id:"software-environment-list"},"Software Environment List"),(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:null},"Component Name"),(0,o.yg)("th",{parentName:"tr",align:null},"Component Version"))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"Git"),(0,o.yg)("td",{parentName:"tr",align:null},"2.0+")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"JDK"),(0,o.yg)("td",{parentName:"tr",align:null},"1.8.0")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"Maven"),(0,o.yg)("td",{parentName:"tr",align:null},"3.6.3")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"NodeJS"),(0,o.yg)("td",{parentName:"tr",align:null},"16.3.0")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"LDB-Toolchain"),(0,o.yg)("td",{parentName:"tr",align:null},"0.9.1")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"Commonly Used Components: byacc patch automake libtool make which file ncurses-devel gettext-devel unzip bzip2 zip util-linux wget git python2"),(0,o.yg)("td",{parentName:"tr",align:null},"yum install or apt-get install")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"autoconf"),(0,o.yg)("td",{parentName:"tr",align:null},"2.69")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"bison"),(0,o.yg)("td",{parentName:"tr",align:null},"3.0.4")))),(0,o.yg)("h3",{id:"install-with-centos-84"},"Install with CentOS 8.4"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Create a root directory for software package and a root directory for software installation."))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"# Create a root directory for software package.\nmkdir /opt/tools\n\n# Create a root directory for software installation.\nmkdir /opt/software\n")),(0,o.yg)("ol",{start:2},(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Install dependencies."))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"### Git ###\n# Use yum install to save the trouble of compilation.\nyum install -y git\n\n### You can choose either one of the two methods to install JDK8. ###\n# The first one is yum install. It eliminates the need for additional downloads and configurations. Install the devel package to obtain certain tools, such as the jps command.\nyum install -y java-1.8.0-openjdk java-1.8.0-openjdk-devel        \n# The second once is to download the installation package for ARM64, extract it, and configure the environment variables.\ncd /opt/tools\nwget https://doris-thirdparty-repo.bj.bcebos.com/thirdparty/jdk-8u291-linux-aarch64.tar.gz && tar -zxvf jdk-8u291-linux-aarch64.tar.gz && \\\nmv jdk1.8.0_291 /opt/software/jdk8\n\n### Maven ###\ncd /opt/tools\n# After downloading with wget, extract the package, and configure the environment variables.\nwget https://dlcdn.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz && tar -zxvf apache-maven-3.6.3-bin.tar.gz && \\\nmv apache-maven-3.6.3 /opt/software/maven\n\n### NodeJS ###\ncd /opt/tools\n# Download package for ARM64\nwget https://doris-thirdparty-repo.bj.bcebos.com/thirdparty/node-v16.3.0-linux-arm64.tar.xz && tar -xvf node-v16.3.0-linux-arm64.tar.xz && \\\nmv node-v16.3.0-linux-arm64 /opt/software/nodejs\n\n### LDB-Toolchain ###\ncd /opt/tools\n# Download LDB-Toolchain for ARM\nwget https://github.com/amosbird/ldb_toolchain_gen/releases/download/v0.9.1/ldb_toolchain_gen.aarch64.sh && sh ldb_toolchain_gen.aarch64.sh /opt/software/ldb_toolchain/\n\n### Others ###\n# Install required system packages\nsudo yum install -y byacc patch automake libtool make which file ncurses-devel gettext-devel unzip bzip2 bison zip util-linux wget git python2\n\n# Install autoconf-2.69\ncd /opt/tools\nwget http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz && \\\n    tar zxf autoconf-2.69.tar.gz && \\\n    mv autoconf-2.69 /opt/software/autoconf && \\\n    cd /opt/software/autoconf && \\\n    ./configure && \\\n    make && \\\n    make install\n")),(0,o.yg)("ol",{start:3},(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Configure environment variables"))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},'# Configure the environment variables.\nvim /etc/profile.d/doris.sh\nexport JAVA_HOME=/opt/software/jdk8\nexport MAVEN_HOME=/opt/software/maven\nexport NODE_JS_HOME=/opt/software/nodejs\nexport LDB_HOME=/opt/software/ldb_toolchain\nexport PATH=$JAVA_HOME/bin:$MAVEN_HOME/bin:$NODE_JS_HOME/bin:$LDB_HOME/bin:$PATH\n\n# Save, exit, and refresh the environment variables.\nsource /etc/profile.d/doris.sh\n\n# Check if the configuration succeeds.\njava -version\n> java version "1.8.0_291"\nmvn -version\n> Apache Maven 3.6.3\nnode --version\n> v16.3.0\ngcc --version\n> gcc-11\n')),(0,o.yg)("h3",{id:"install-with-ubuntu-2004"},"Install with Ubuntu 20.04"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Update apt-get software library"))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"apt-get update\n")),(0,o.yg)("ol",{start:2},(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Reconfigure shell"))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"# By default, Ubuntu's shell is set to dash instead of bash, so please switch to bash before continuing. Run the following command to view detailed information about shell and confirm which program it corresponds to.\nls -al /bin/sh\n\n# Switch the shell to bash.\nsudo dpkg-reconfigure dash\n# Select no and confirm. This will reconfigure dash and make it no longer the default shell tool.\n")),(0,o.yg)("ol",{start:3},(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Create a root directory for software package and a root directory for software installation."))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"# Create a root directory for software package.\nmkdir /opt/tools\n\n# Create a root directory for software installation.\nmkdir /opt/software\n")),(0,o.yg)("ol",{start:4},(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Install dependencies."))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"### Git ###\n# Use apt-get install to save the trouble of compilation.\napt-get -y install git\n\n### JDK8 ###      \n# Download the installation package for ARM64, extract it, and configure the environment variables.\ncd /opt/tools\nwget https://doris-thirdparty-repo.bj.bcebos.com/thirdparty/jdk-8u291-linux-aarch64.tar.gz && tar -zxvf jdk-8u291-linux-aarch64.tar.gz && \\\nmv jdk1.8.0_291 /opt/software/jdk8\n\n### Maven ###\ncd /opt/tools\n# After downloading with wget, extract the package, and configure the environment variables.\nwget https://dlcdn.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz && tar -zxvf apache-maven-3.6.3-bin.tar.gz && \\\nmv apache-maven-3.6.3 /opt/software/maven\n\n### NodeJS ###\ncd /opt/tools\n# Download package for ARM64\nwget https://doris-thirdparty-repo.bj.bcebos.com/thirdparty/node-v16.3.0-linux-arm64.tar.xz && tar -xvf node-v16.3.0-linux-arm64.tar.xz && \\\nmv node-v16.3.0-linux-arm64 /opt/software/nodejs\n\n### LDB-Toolchain ###\ncd /opt/tools\n# Download LDB-Toolchain for ARM\nwget https://github.com/amosbird/ldb_toolchain_gen/releases/download/v0.9.1/ldb_toolchain_gen.aarch64.sh && sh ldb_toolchain_gen.aarch64.sh /opt/software/ldb_toolchain/\n\n### Others ###\n# Install required system packages\nsudo apt install -y build-essential cmake flex automake bison binutils-dev libiberty-dev zip libncurses5-dev curl ninja-build\nsudo apt-get install -y make\nsudo apt-get install -y unzip\nsudo apt-get install -y python2\nsudo apt-get install -y byacc\nsudo apt-get install -y automake\nsudo apt-get install -y libtool\nsudo apt-get install -y bzip2\nsudo add-apt-repository ppa:ubuntu-toolchain-r/ppa \nsudo apt update\nsudo apt install gcc-11 g++-11 \nsudo apt-get -y install autoconf autopoint\n\n# install autoconf-2.69\ncd /opt/tools\nwget http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz && \\\n    tar zxf autoconf-2.69.tar.gz && \\\n    mv autoconf-2.69 /opt/software/autoconf && \\\n    cd /opt/software/autoconf && \\\n    ./configure && \\\n    make && \\\n    make install\n")),(0,o.yg)("ol",{start:5},(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Configure environment variables"))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},'# Configure the environment variables.\nvim /etc/profile.d/doris.sh\nexport JAVA_HOME=/opt/software/jdk8\nexport MAVEN_HOME=/opt/software/maven\nexport NODE_JS_HOME=/opt/software/nodejs\nexport LDB_HOME=/opt/software/ldb_toolchain\nexport PATH=$JAVA_HOME/bin:$MAVEN_HOME/bin:$NODE_JS_HOME/bin:$LDB_HOME/bin:$PATH\n\n# Save, exit, and refresh the environment variables.\nsource /etc/profile.d/doris.sh\n\n# Check if the configuration succeeds.\njava -version\n> java version "1.8.0_291"\nmvn -version\n> Apache Maven 3.6.3\nnode --version\n> v16.3.0\ngcc --version\n> gcc-11\n')),(0,o.yg)("h2",{id:"compile"},"Compile"),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"It is recommended to use LDB Toolchain for compilation with ARM environment. ")),(0,o.yg)("p",null,"When compiling Doris on an ARM platform, please disable the AVX2 and LIBUNWIND third-party libraries."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"export USE_AVX2=OFF\nexport USE_UNWIND=OFF\n")),(0,o.yg)("p",null,'Then, continue the compilation by referring to the "Compile with LDB Toolchain" documentation.'),(0,o.yg)("h2",{id:"faq"},"FAQ"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Cannot find the libhdfs3.a file when compiling when compiling third-party libraries"))),(0,o.yg)("p",null,"Encounter the error message as: ",(0,o.yg)("inlineCode",{parentName:"p"},"not found lib/libhdfs3.a file or directory")," during compilation"),(0,o.yg)("p",null,"Cause: Something wrong with dependency download for the third-party library"),(0,o.yg)("p",null,"Solution: Use a third-party library download repository."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"export REPOSITORY_URL=https://doris-thirdparty-repo.bj.bcebos.com/thirdparty\nsh /opt/doris/thirdparty/build-thirdparty.sh\n")),(0,o.yg)("p",null,"The REPOSITORY_URL contains source code packages for all third-party libraries and their historical versions."),(0,o.yg)("ol",{start:2},(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Cannot find python command"))),(0,o.yg)("p",null,"An exception is thrown when executing build.sh:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"/opt/doris/env.sh: line 46: python: command not found\n")),(0,o.yg)("p",null,"Possible cause: The system typically uses ",(0,o.yg)("inlineCode",{parentName:"p"},"python2.7"),", ",(0,o.yg)("inlineCode",{parentName:"p"},"python3.6"),", ",(0,o.yg)("inlineCode",{parentName:"p"},"python2"),", and ",(0,o.yg)("inlineCode",{parentName:"p"},"python3")," to execute Python commands. However, Doris installation dependencies only require Python 2.7+, so you just need to create a symbolic link for the ",(0,o.yg)("inlineCode",{parentName:"p"},"python")," command, which can be linked to either Python version 2 or version 3."),(0,o.yg)("p",null,"Solution: Create a symbolic link for the ",(0,o.yg)("inlineCode",{parentName:"p"},"python")," command in the ",(0,o.yg)("inlineCode",{parentName:"p"},"\\usr\\bin")," directory, for example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-Shell"},"sudo ln -s /usr/bin/python2.7 /usr/bin/python\n")),(0,o.yg)("ol",{start:3},(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},'No "output" directory after compilation'))),(0,o.yg)("p",null,'After executing build.sh, the "output" folder is not found in the directory.'),(0,o.yg)("p",null,"Cause: The compilation was not successful and needs to be recompiled."),(0,o.yg)("p",null,"Solution."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-Shell"},"sh build.sh --clean\n")),(0,o.yg)("ol",{start:4},(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Compilation failure due to insufficient remaining space"))),(0,o.yg)("p",null,"An error is thrown like the following during compilation:"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"fatal error: error writing to /tmp/ccKn4nPK.s: No space left on device 1112 | } // namespace doris::vectorized compilation terminated.")),(0,o.yg)("p",null,"Solution: Increase the available space on the device by deleting unnecessary files or freeing up storage."),(0,o.yg)("ol",{start:5},(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Cannot find")," ",(0,o.yg)("strong",{parentName:"li"},(0,o.yg)("inlineCode",{parentName:"strong"},"pkg.m4"))," ",(0,o.yg)("strong",{parentName:"li"},"file in")," ",(0,o.yg)("strong",{parentName:"li"},(0,o.yg)("inlineCode",{parentName:"strong"},"pkg.config")))),(0,o.yg)("p",null,"An error is thrown like the following during compilation:"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"Couldn't find pkg.m4 from pkg-config. Install the appropriate package for your distribution or set ACLOCAL_PATH to the directory containing pkg.m4.")),(0,o.yg)("p",null,"After examining the logs, it is found that the issue is related to the compilation of the ",(0,o.yg)("inlineCode",{parentName:"p"},"libxml2")," third-party library."),(0,o.yg)("p",null,"Cause: Possible causes of compilation error of ",(0,o.yg)("inlineCode",{parentName:"p"},"libxml2")," include: "),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"1) Exceptions in loading environment variables in the Ubuntu system, resulting in the ldb directory's index not being successfully loaded."),(0,o.yg)("li",{parentName:"ul"},"2) Failure to retrieve environment variables during libxml2 compilation, causing the compilation process to not find the ldb/aclocal directory.")),(0,o.yg)("p",null,"Solution: Copy the ",(0,o.yg)("inlineCode",{parentName:"p"},"pkg.m4")," file from the ldb/aclocal directory to the libxml2/m4 directory and recompile the third-party library."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-Shell"}," cp /opt/software/ldb_toolchain/share/aclocal/pkg.m4 /opt/doris/thirdparty/src/libxml2-v2.9.10/m4\n sh /opt/doris/thirdparty/build-thirdparty.sh\n")),(0,o.yg)("ol",{start:6},(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Failure in executing the CURL_HAS_TLS_PROXY test"))),(0,o.yg)("p",null,"An error is thrown like the following during the compilation of third-party package:"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},'-- Performing Test CURL_HAS_TLS_PROXY - Failed CMake Error at cmake/dependencies.cmake:15 (get_property): INTERFACE_LIBRARY targets may only have whitelisted properties. The property "LINK_LIBRARIES_ALL" is not allowed.')),(0,o.yg)("p",null,"After reviewing the logs, it is found that the error is caused by ",(0,o.yg)("inlineCode",{parentName:"p"},"No such file or directory")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"fatal error: curl/curl.h: No such file or directory 2 | #include <curl/curl.h> compilation terminated. ninja: build stopped: subcommand failed.")),(0,o.yg)("p",null,"Cause: There is an error in the compilation environment. Check the gcc version and it can be found that the system comes with version 9.3.0. That's why it does not use the ldb compilation. Hence, you should configure the ldb environment variables."),(0,o.yg)("p",null,"Solution: Configure the ldb environment variables:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-Shell"}," # Configure the environment variables\n vim /etc/profile.d/ldb.sh\n export LDB_HOME=/opt/software/ldb_toolchain\n export PATH=$LDB_HOME/bin:$PATH\n # Save, exit, and refresh the environment variables\n source /etc/profile.d/ldb.sh\n # Test\n gcc --version\n # Show gcc-11\n")),(0,o.yg)("ol",{start:7},(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Other component issues"))),(0,o.yg)("p",null,"If you encounter error messages related to the following components, you can solve them by one solution."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"bison: fseterr.c error reported when installing bison-3.0.4"),(0,o.yg)("li",{parentName:"ul"},'flex: "flex" command not found'),(0,o.yg)("li",{parentName:"ul"},"cmake:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"cmake command not found"),(0,o.yg)("li",{parentName:"ul"},"cannot find the required dependencies for cmake"),(0,o.yg)("li",{parentName:"ul"},"cannot find CMAKE_ROOT"),(0,o.yg)("li",{parentName:"ul"},"The CXX environment variable in cmake does not contain a compiler set"))),(0,o.yg)("li",{parentName:"ul"},"boost: Boost.Build engine failure."),(0,o.yg)("li",{parentName:"ul"},"mysql: missing client dependency file for MySQL (a file ending in .a)."),(0,o.yg)("li",{parentName:"ul"},"gcc: gcc version needs to be 11+.")),(0,o.yg)("p",null,"Cause: All these issues arise from not using the correct ldb-toolchain for compilation."),(0,o.yg)("p",null,"Solution:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Check if the ldb-toolchain environment variable is properly configured."),(0,o.yg)("li",{parentName:"ul"},"Verify if the GCC version matches the recommended version in the ",(0,o.yg)("a",{parentName:"li",href:"https://doris.apache.org/docs/2.0/install/source-install/compilation-with-ldb-toolchain"},"Compile with LDB Toolchain")," documentation."),(0,o.yg)("li",{parentName:"ul"},"Delete the ldb directory generated after executing the ",(0,o.yg)("inlineCode",{parentName:"li"},"ldb_toolchain_gen.aarch64.sh")," script. Re-run the script, configure the environment variables, and verify the GCC version.")))}d.isMDXComponent=!0}}]);