"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[663239],{15680:(e,t,a)=>{a.d(t,{xA:()=>m,yg:()=>u});var n=a(296540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=p(a),c=i,u=d["".concat(s,".").concat(c)]||d[c]||y[c]||r;return a?n.createElement(u,o(o({ref:t},m),{},{components:a})):n.createElement(u,o({ref:t},m))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},520597:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>y,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=a(58168),i=(a(296540),a(15680));const r={title:"Variable",language:"en"},o=void 0,l={unversionedId:"advanced/variables",id:"version-1.2/advanced/variables",title:"Variable",description:"\x3c!--",source:"@site/versioned_docs/version-1.2/advanced/variables.md",sourceDirName:"advanced",slug:"/advanced/variables",permalink:"/docs/1.2/advanced/variables",draft:!1,tags:[],version:"1.2",frontMatter:{title:"Variable",language:"en"},sidebar:"docs",previous:{title:"Approximate deduplication using HLL",permalink:"/docs/1.2/advanced/using-hll"},next:{title:"Time zone",permalink:"/docs/1.2/advanced/time-zone"}},s={},p=[{value:"Variable setting and viewing",id:"variable-setting-and-viewing",level:2},{value:"View",id:"view",level:3},{value:"Settings",id:"settings",level:3},{value:"Set variables in the query statement",id:"set-variables-in-the-query-statement",level:3},{value:"Supported variables",id:"supported-variables",level:2},{value:"Supplementary instructions on statement execution timeout control",id:"supplementary-instructions-on-statement-execution-timeout-control",level:4}],m={toc:p},d="wrapper";function y(e){let{components:t,...a}=e;return(0,i.yg)(d,(0,n.A)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"variable"},"Variable"),(0,i.yg)("p",null,"This document focuses on currently supported variables."),(0,i.yg)("p",null,"Variables in Doris refer to variable settings in MySQL. However, some of the variables are only used to be compatible with some MySQL client protocols, and do not produce their actual meaning in the MySQL database."),(0,i.yg)("h2",{id:"variable-setting-and-viewing"},"Variable setting and viewing"),(0,i.yg)("h3",{id:"view"},"View"),(0,i.yg)("p",null,"All or specified variables can be viewed via ",(0,i.yg)("inlineCode",{parentName:"p"},"SHOW VARIABLES [LIKE 'xxx'];"),". Such as:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"SHOW VARIABLES;\nSHOW VARIABLES LIKE '%time_zone%';\n")),(0,i.yg)("h3",{id:"settings"},"Settings"),(0,i.yg)("p",null,"Note that before version 1.1, after the setting takes effect globally, the setting value will be inherited in subsequent new session connections, but the value in the current session will remain unchanged.\nAfter version 1.1 (inclusive), after the setting takes effect globally, the setting value will be used in subsequent new session connections, and the value in the current session will also change."),(0,i.yg)("p",null,"For session-only, set by the ",(0,i.yg)("inlineCode",{parentName:"p"},"SET var_name=xxx;")," statement. Such as:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'SET exec_mem_limit = 137438953472;\nSET forward_to_master = true;\nSET time_zone = "Asia/Shanghai";\n')),(0,i.yg)("p",null,"For global-level, set by ",(0,i.yg)("inlineCode",{parentName:"p"},"SET GLOBAL var_name=xxx;"),". Such as:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"SET GLOBAL exec_mem_limit = 137438953472\n")),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"Note 1: Only ADMIN users can set variable at global-level.")),(0,i.yg)("p",null,"Variables that support both session-level and global-level setting include:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"time_zone")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"wait_timeout")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"sql_mode")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"enable_profile")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"query_timeout")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"insert_timeout")," "),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"exec_mem_limit")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"batch_size")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"parallel_fragment_exec_instance_num")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"parallel_exchange_instance_num")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"allow_partition_column_nullable")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"insert_visible_timeout_ms")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"enable_fold_constant_by_be"))),(0,i.yg)("p",null,"Variables that support only global-level setting include:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"default_rowset_type")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"default_password_lifetime")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"password_history")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"validate_password_policy"))),(0,i.yg)("p",null,"At the same time, variable settings also support constant expressions. Such as:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"SET exec_mem_limit = 10 * 1024 * 1024 * 1024;\nSET forward_to_master = concat('tr', 'u', 'e');\n")),(0,i.yg)("h3",{id:"set-variables-in-the-query-statement"},"Set variables in the query statement"),(0,i.yg)("p",null,"In some scenarios, we may need to set variables specifically for certain queries.\nThe SET_VAR hint sets the session value of a system variable temporarily (for the duration of a single statement). Examples:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"SELECT /*+ SET_VAR(exec_mem_limit = 8589934592) */ name FROM people ORDER BY name;\nSELECT /*+ SET_VAR(query_timeout = 1, enable_partition_cache=true) */ sleep(3);\n")),(0,i.yg)("p",null,"Note that the comment must start with /*+ and can only follow the SELECT."),(0,i.yg)("h2",{id:"supported-variables"},"Supported variables"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"SQL_AUTO_IS_NULL")),(0,i.yg)("p",{parentName:"li"},"  Used for compatible JDBC connection pool C3P0. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"auto_increment_increment")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"autocommit")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"auto_broadcast_join_threshold")),(0,i.yg)("p",{parentName:"li"},"  The maximum size in bytes of the table that will be broadcast to all nodes when a join is performed, broadcast can be disabled by setting this value to -1."),(0,i.yg)("p",{parentName:"li"},"  The system provides two join implementation methods, ",(0,i.yg)("inlineCode",{parentName:"p"},"broadcast join")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"shuffle join"),"."),(0,i.yg)("p",{parentName:"li"},"  ",(0,i.yg)("inlineCode",{parentName:"p"},"broadcast join")," means that after conditional filtering the small table, broadcast it to each node where the large table is located to form an in-memory Hash table, and then stream the data of the large table for Hash Join."),(0,i.yg)("p",{parentName:"li"},"  ",(0,i.yg)("inlineCode",{parentName:"p"},"shuffle join")," refers to hashing both small and large tables according to the join key, and then performing distributed join."),(0,i.yg)("p",{parentName:"li"},"  ",(0,i.yg)("inlineCode",{parentName:"p"},"broadcast join")," has better performance when the data volume of the small table is small. On the contrary, shuffle join has better performance."),(0,i.yg)("p",{parentName:"li"},"  The system will automatically try to perform a Broadcast Join, or you can explicitly specify the implementation of each join operator. The system provides a configurable parameter ",(0,i.yg)("inlineCode",{parentName:"p"},"auto_broadcast_join_threshold"),", which specifies the upper limit of the memory used by the hash table to the overall execution memory when ",(0,i.yg)("inlineCode",{parentName:"p"},"broadcast join")," is used. The value ranges from 0 to 1, and the default value is 0.8. When the memory used by the system to calculate the hash table exceeds this limit, it will automatically switch to using ",(0,i.yg)("inlineCode",{parentName:"p"},"shuffle join")),(0,i.yg)("p",{parentName:"li"},"  The overall execution memory here is: a fraction of what the query optimizer estimates"),(0,i.yg)("blockquote",{parentName:"li"},(0,i.yg)("p",{parentName:"blockquote"},"Note:"),(0,i.yg)("p",{parentName:"blockquote"},"It is not recommended to use this parameter to adjust, if you must use a certain join, it is recommended to use hint, such as join","[shuffle]")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"batch_size")),(0,i.yg)("p",{parentName:"li"},"  Used to specify the number of rows of a single packet transmitted by each node during query execution. By default, the number of rows of a packet is 1024 rows. That is, after the source node generates 1024 rows of data, it is packaged and sent to the destination node."),(0,i.yg)("p",{parentName:"li"},"  A larger number of rows will increase the throughput of the query in the case of scanning large data volumes, but may increase the query delay in small query scenario. At the same time, it also increases the memory overhead of the query. The recommended setting range is 1024 to 4096.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"character_set_client")),(0,i.yg)("p",{parentName:"li"}," Used for compatibility with MySQL clients. No practical effect.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"character_set_connection")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"character_set_results")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"character_set_server")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"codegen_level")),(0,i.yg)("p",{parentName:"li"},"  Used to set the level of LLVM codegen. (Not currently in effect).\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"collation_connection")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"collation_database")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"collation_server")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"have_query_cache")),(0,i.yg)("p",{parentName:"li"},"Used for compatibility with MySQL clients. No practical effect.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"default_order_by_limit")),(0,i.yg)("p",{parentName:"li"},"Used to control the default number of items returned after OrderBy. The default value is -1, and the maximum number of records after the query is returned by default, and the upper limit is the MAX_VALUE of the long data type.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"delete_without_partition")),(0,i.yg)("p",{parentName:"li"},"  When set to true. When using the delete command to delete partition table data, no partition is required. The delete operation will be automatically applied to all partitions."),(0,i.yg)("p",{parentName:"li"},"   Note, however, that the automatic application to all partitions may cause the delete command to take a long time to trigger a large number of subtasks and cause a long time. If it is not necessary, it is not recommended to turn it on.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"disable_colocate_join")),(0,i.yg)("p",{parentName:"li"},"  Controls whether the ",(0,i.yg)("a",{parentName:"p",href:"/docs/1.2/query-acceleration/join-optimization/colocation-join"},"Colocation Join")," function is enabled. The default is false, which means that the feature is enabled. True means that the feature is disabled. When this feature is disabled, the query plan will not attempt to perform a Colocation Join.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"enable_bucket_shuffle_join")),(0,i.yg)("p",{parentName:"li"},"  Controls whether the ",(0,i.yg)("a",{parentName:"p",href:"/docs/1.2/query-acceleration/join-optimization/bucket-shuffle-join"},"Bucket Shuffle Join")," function is enabled. The default is true, which means that the feature is enabled. False means that the feature is disabled. When this feature is disabled, the query plan will not attempt to perform a Bucket Shuffle Join.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"disable_streaming_preaggregations")),(0,i.yg)("p",{parentName:"li"},"  Controls whether streaming pre-aggregation is turned on. The default is false, which is enabled. Currently not configurable and enabled by default.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"enable_insert_strict")),(0,i.yg)("p",{parentName:"li"},"  Used to set the ",(0,i.yg)("inlineCode",{parentName:"p"},"strict")," mode when loading data via INSERT statement. The default is false, which means that the ",(0,i.yg)("inlineCode",{parentName:"p"},"strict")," mode is not turned on. For an introduction to this mode, see ",(0,i.yg)("a",{parentName:"p",href:"/docs/1.2/data-operate/import/import-way/insert-into-manual"},"here"),".")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"enable_spilling")),(0,i.yg)("p",{parentName:"li"},"  Used to set whether to enable external sorting. The default is false, which turns off the feature. This feature is enabled when the user does not specify a LIMIT condition for the ORDER BY clause and also sets ",(0,i.yg)("inlineCode",{parentName:"p"},"enable_spilling")," to true. When this feature is enabled, the temporary data is stored in the ",(0,i.yg)("inlineCode",{parentName:"p"},"doris-scratch/")," directory of the BE data directory and the temporary data is cleared after the query is completed."),(0,i.yg)("p",{parentName:"li"},"  This feature is mainly used for sorting operations with large amounts of data using limited memory."),(0,i.yg)("p",{parentName:"li"},"  Note that this feature is experimental and does not guarantee stability. Please turn it on carefully.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"exec_mem_limit")),(0,i.yg)("p",{parentName:"li"},"  Used to set the memory limit for a single query. The default is 2GB, you can set it in B/K/KB/M/MB/G/GB/T/TB/P/PB, the default is B."),(0,i.yg)("p",{parentName:"li"},"  This parameter is used to limit the memory that can be used by an instance of a single query fragment in a query plan. A query plan may have multiple instances, and a BE node may execute one or more instances. Therefore, this parameter does not accurately limit the memory usage of a query across the cluster, nor does it accurately limit the memory usage of a query on a single BE node. The specific needs need to be judged according to the generated query plan."),(0,i.yg)("p",{parentName:"li"},"  Usually, only some blocking nodes (such as sorting node, aggregation node, and join node) consume more memory, while in other nodes (such as scan node), data is streamed and does not occupy much memory."),(0,i.yg)("p",{parentName:"li"},"  When a ",(0,i.yg)("inlineCode",{parentName:"p"},"Memory Exceed Limit")," error occurs, you can try to increase the parameter exponentially, such as 4G, 8G, 16G, and so on.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"forward_to_master")),(0,i.yg)("p",{parentName:"li"},"  The user sets whether to forward some commands to the Master FE node for execution. The default is ",(0,i.yg)("inlineCode",{parentName:"p"},"true"),", which means forwarding. There are multiple FE nodes in Doris, one of which is the Master node. Usually users can connect to any FE node for full-featured operation. However, some of detail information can only be obtained from the Master FE node."),(0,i.yg)("p",{parentName:"li"},"  For example, the ",(0,i.yg)("inlineCode",{parentName:"p"},"SHOW BACKENDS;")," command, if not forwarded to the Master FE node, can only see some basic information such as whether the node is alive, and forwarded to the Master FE to obtain more detailed information including the node startup time and the last heartbeat time."),(0,i.yg)("p",{parentName:"li"},"  The commands currently affected by this parameter are as follows:"),(0,i.yg)("ol",{parentName:"li"},(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"SHOW FRONTEND;")),(0,i.yg)("p",{parentName:"li"},"Forward to Master to view the last heartbeat information.")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"SHOW BACKENDS;")),(0,i.yg)("p",{parentName:"li"},"Forward to Master to view startup time, last heartbeat information, and disk capacity information.")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"SHOW BROKERS;")),(0,i.yg)("p",{parentName:"li"},"Forward to Master to view the start time and last heartbeat information.")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"SHOW TABLET;"),"/",(0,i.yg)("inlineCode",{parentName:"p"},"ADMIN SHOW REPLICA DISTRIBUTION;"),"/",(0,i.yg)("inlineCode",{parentName:"p"},"ADMIN SHOW REPLICA STATUS;")),(0,i.yg)("p",{parentName:"li"},"Forward to Master to view the tablet information stored in the Master FE metadata. Under normal circumstances, the tablet information in different FE metadata should be consistent. When a problem occurs, this method can be used to compare the difference between the current FE and Master FE metadata.")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"SHOW PROC;")),(0,i.yg)("p",{parentName:"li"},"Forward to Master to view information about the relevant PROC stored in the Master FE metadata. Mainly used for metadata comparison.")))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"init_connect")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"interactive_timeout")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"enable_profile")),(0,i.yg)("p",{parentName:"li"},"  Used to set whether you need to view the profile of the query. The default is false, which means no profile is required."),(0,i.yg)("p",{parentName:"li"},"  By default, the BE sends a profile to the FE for viewing errors only if an error occurs in the query. A successful query will not send a profile. Sending a profile will incur a certain amount of network overhead, which is detrimental to a high concurrent query scenario."),(0,i.yg)("p",{parentName:"li"},"  When the user wants to analyze the profile of a query, the query can be sent after this variable is set to true. After the query is finished, you can view the profile on the web page of the currently connected FE:"),(0,i.yg)("p",{parentName:"li"},"  ",(0,i.yg)("inlineCode",{parentName:"p"},"fe_host:fe_http:port/query")),(0,i.yg)("p",{parentName:"li"},"  It will display the most recent 100 queries which ",(0,i.yg)("inlineCode",{parentName:"p"},"enable_profile")," is set to true.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"language")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"license")),(0,i.yg)("p",{parentName:"li"},"  Show Doris's license. No other effect.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")),(0,i.yg)("p",{parentName:"li"},"  Used to control whether the user table name is case-sensitive."),(0,i.yg)("p",{parentName:"li"},"  A value of 0 makes the table name case-sensitive. The default is 0."),(0,i.yg)("p",{parentName:"li"},"  When the value is 1, the table name is case insensitive. Doris will convert the table name to lowercase when storing and querying.",(0,i.yg)("br",{parentName:"p"}),"\n","The advantage is that any case of table name can be used in one statement. The following SQL is correct:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre"},"mysql> show tables;\n+------------------+\n| Tables_ in_testdb|\n+------------------+\n| cost             |\n+------------------+\nmysql> select * from COST where COst.id < 100 order by cost.id;\n")),(0,i.yg)("p",{parentName:"li"},"  The disadvantage is that the table name specified in the table creation statement cannot be obtained after table creation. The table name viewed by 'show tables' is lower case of the specified table name."),(0,i.yg)("p",{parentName:"li"},"  When the value is 2, the table name is case insensitive. Doris stores the table name specified in the table creation statement and converts it to lowercase for comparison during query.",(0,i.yg)("br",{parentName:"p"}),"\n","The advantage is that the table name viewed by 'show tables' is the table name specified in the table creation statement;",(0,i.yg)("br",{parentName:"p"}),"\n","The disadvantage is that only one case of table name can be used in the same statement. For example, the table name 'cost' can be used to query the 'cost' table:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre"},"mysql> select * from COST where COST.id < 100 order by COST.id;\n")),(0,i.yg)("p",{parentName:"li"},"  This variable is compatible with MySQL and must be configured at cluster initialization by specifying ",(0,i.yg)("inlineCode",{parentName:"p"},"lower_case_table_names=")," in fe.conf. It cannot be modified by the ",(0,i.yg)("inlineCode",{parentName:"p"},"set")," statement after cluster initialization is complete, nor can it be modified by restarting or upgrading the cluster."),(0,i.yg)("p",{parentName:"li"},"  The system view table names in information_schema are case-insensitive and behave as 2 when the value of ",(0,i.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")," is 0."))),(0,i.yg)("p",null,"Translated with ",(0,i.yg)("a",{parentName:"p",href:"http://www.DeepL.com/Translator"},"www.DeepL.com/Translator")," (free version)"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"max_allowed_packet")),(0,i.yg)("p",{parentName:"li"},"For compatibility with JDBC connection pool C3P0. Has no real effect on Doris itself. If you encounter the error ",(0,i.yg)("inlineCode",{parentName:"p"},"Packet for query is too large (1,514,085 > 1,048,576). You can change this value on the server by setting the 'max_allowed_packet' variable."),", you can use ",(0,i.yg)("inlineCode",{parentName:"p"},"set GLOBAL max_allowed_packet = 1548576")," to increase the value.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"max_pushdown_conditions_per_column")),(0,i.yg)("p",{parentName:"li"},"  For the specific meaning of this variable, please refer to the description of ",(0,i.yg)("inlineCode",{parentName:"p"},"max_pushdown_conditions_per_column")," in ",(0,i.yg)("a",{parentName:"p",href:"/docs/1.2/admin-manual/config/be-config"},"BE Configuration"),". This variable is set to -1 by default, which means that the configuration value in ",(0,i.yg)("inlineCode",{parentName:"p"},"be.conf")," is used. If the setting is greater than 0, the query in the current session will use the variable value, and ignore the configuration value in ",(0,i.yg)("inlineCode",{parentName:"p"},"be.conf"),".")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"max_scan_key_num")),(0,i.yg)("p",{parentName:"li"},"  For the specific meaning of this variable, please refer to the description of ",(0,i.yg)("inlineCode",{parentName:"p"},"doris_max_scan_key_num")," in ",(0,i.yg)("a",{parentName:"p",href:"/docs/1.2/admin-manual/config/be-config"},"BE Configuration"),". This variable is set to -1 by default, which means that the configuration value in ",(0,i.yg)("inlineCode",{parentName:"p"},"be.conf")," is used. If the setting is greater than 0, the query in the current session will use the variable value, and ignore the configuration value in ",(0,i.yg)("inlineCode",{parentName:"p"},"be.conf"),".")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"net_buffer_length")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"net_read_timeout")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"net_write_timeout")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"parallel_exchange_instance_num")),(0,i.yg)("p",{parentName:"li"},"  Used to set the number of exchange nodes used by an upper node to receive data from the lower node in the execution plan. The default is -1, which means that the number of exchange nodes is equal to the number of execution instances of the lower nodes (default behavior). When the setting is greater than 0 and less than the number of execution instances of the lower node, the number of exchange nodes is equal to the set value."),(0,i.yg)("p",{parentName:"li"},"  In a distributed query execution plan, the upper node usually has one or more exchange nodes for receiving data from the execution instances of the lower nodes on different BEs. Usually the number of exchange nodes is equal to the number of execution instances of the lower nodes."),(0,i.yg)("p",{parentName:"li"},"  In some aggregate query scenarios, if the amount of data to be scanned at the bottom is large, but the amount of data after aggregation is small, you can try to modify this variable to a smaller value, which can reduce the resource overhead of such queries. Such as the scenario of aggregation query on the DUPLICATE KEY data model.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"parallel_fragment_exec_instance_num")),(0,i.yg)("p",{parentName:"li"},"  For the scan node, set its number of instances to execute on each BE node. The default is 1."),(0,i.yg)("p",{parentName:"li"},"  A query plan typically produces a set of scan ranges, the range of data that needs to be scanned. These data are distributed across multiple BE nodes. A BE node will have one or more scan ranges. By default, a set of scan ranges for each BE node is processed by only one execution instance. When the machine resources are abundant, you can increase the variable and let more execution instances process a set of scan ranges at the same time, thus improving query efficiency."),(0,i.yg)("p",{parentName:"li"},"  The number of scan instances determines the number of other execution nodes in the upper layer, such as aggregate nodes and join nodes. Therefore, it is equivalent to increasing the concurrency of the entire query plan execution. Modifying this parameter will help improve the efficiency of large queries, but larger values will consume more machine resources, such as CPU, memory, and disk IO.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"query_cache_size")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"query_cache_type")),(0,i.yg)("p",{parentName:"li"},"  Used for compatible JDBC connection pool C3P0. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"query_timeout")),(0,i.yg)("p",{parentName:"li"},"  Used to set the query timeout. This variable applies to all query statements in the current connection. Particularly, timeout of INSERT statements is recommended to be managed by the insert_timeout below. The default is 5 minutes, in seconds.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"insert_timeout")),(0,i.yg)("p",{parentName:"li"}," Used to set the insert timeout. This variable applies to INSERT statements particularly in the current connection, and is recommended to manage long-duration INSERT action. The default is 4 hours, in seconds. It will lose effect when query_timeout is\ngreater than itself to make it compatible with the habits of older version users to use query_timeout to control the timeout of INSERT statements.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"resource_group")),(0,i.yg)("p",{parentName:"li"},"  Not used.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"send_batch_parallelism")),(0,i.yg)("p",{parentName:"li"},"  Used to set the default parallelism for sending batch when execute InsertStmt operation, if the value for parallelism exceed ",(0,i.yg)("inlineCode",{parentName:"p"},"max_send_batch_parallelism_per_job")," in BE config, then the coordinator BE will use the value of ",(0,i.yg)("inlineCode",{parentName:"p"},"max_send_batch_parallelism_per_job"),".")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"sql_mode")),(0,i.yg)("p",{parentName:"li"},"  Used to specify SQL mode to accommodate certain SQL dialects. For the SQL mode, see ",(0,i.yg)("a",{parentName:"p",href:"/docs/1.2/advanced/sql-mode"},"here"),".\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"sql_safe_updates")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"sql_select_limit")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"system_time_zone")),(0,i.yg)("p",{parentName:"li"},"  Displays the current system time zone. Cannot be changed.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"time_zone")),(0,i.yg)("p",{parentName:"li"},"  Used to set the time zone of the current session. The time zone has an effect on the results of certain time functions. For the time zone, see ",(0,i.yg)("a",{parentName:"p",href:"/docs/1.2/advanced/time-zone"},"here"),".\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"tx_isolation")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"tx_read_only")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"transaction_read_only")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"transaction_isolation")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"version")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL clients. No practical effect.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"performance_schema")),(0,i.yg)("p",{parentName:"li"},"  Used for compatibility with MySQL JDBC 8.0.16 or later version. No practical effect.",(0,i.yg)("br",{parentName:"p"}),"\n","")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"version_comment")),(0,i.yg)("p",{parentName:"li"},"  Used to display the version of Doris. Cannot be changed.\n")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"wait_timeout")),(0,i.yg)("p",{parentName:"li"},"  The length of the connection used to set up an idle connection. When an idle connection does not interact with Doris for that length of time, Doris will actively disconnect the link. The default is 8 hours, in seconds.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"default_rowset_type")),(0,i.yg)("p",{parentName:"li"},"  Used for setting the default storage format of Backends storage engine. Valid options: alpha/beta")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"use_v2_rollup")),(0,i.yg)("p",{parentName:"li"},"  Used to control the sql query to use segment v2 rollup index to get data. This variable is only used for validation when upgrading to segment v2 feature. Otherwise, not recommended to use.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"rewrite_count_distinct_to_bitmap_hll")),(0,i.yg)("p",{parentName:"li"},"  Whether to rewrite count distinct queries of bitmap and HLL types as bitmap_union_count and hll_union_agg.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"prefer_join_method")),(0,i.yg)("p",{parentName:"li"},"  When choosing the join method(broadcast join or shuffle join), if the broadcast join cost and shuffle join cost are equal, which join method should we prefer."),(0,i.yg)("p",{parentName:"li"},'  Currently, the optional values for this variable are "broadcast" or "shuffle".')),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"allow_partition_column_nullable")),(0,i.yg)("p",{parentName:"li"},"  Whether to allow the partition column to be NULL when creating the table. The default is true, which means NULL is allowed. false means the partition column must be defined as NOT NULL.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"insert_visible_timeout_ms")),(0,i.yg)("p",{parentName:"li"},"  When execute insert statement, doris will wait for the transaction to commit and visible after the import is completed.\nThis parameter controls the timeout of waiting for transaction to be visible. The default value is 10000, and the minimum value is 1000.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"enable_exchange_node_parallel_merge")),(0,i.yg)("p",{parentName:"li"},"  In a sort query, when an upper level node receives the ordered data of the lower level node, it will sort the corresponding data on the exchange node to ensure that the final data is ordered. However, when a single thread merges multiple channels of data, if the amount of data is too large, it will lead to a single point of exchange node merge bottleneck."),(0,i.yg)("p",{parentName:"li"},"  Doris optimizes this part if there are too many data nodes in the lower layer. Exchange node will start multithreading for parallel merging to speed up the sorting process. This parameter is false by default, which means that exchange node does not adopt parallel merge sort to reduce the extra CPU and memory consumption.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"extract_wide_range_expr")),(0,i.yg)("p",{parentName:"li"},"  Used to control whether turn on the 'Wide Common Factors' rule. The value has two: true or false. On by default.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"enable_fold_constant_by_be")),(0,i.yg)("p",{parentName:"li"},"  Used to control the calculation method of constant folding. The default is ",(0,i.yg)("inlineCode",{parentName:"p"},"false"),", that is, calculation is performed in ",(0,i.yg)("inlineCode",{parentName:"p"},"FE"),"; if it is set to ",(0,i.yg)("inlineCode",{parentName:"p"},"true"),", it will be calculated by ",(0,i.yg)("inlineCode",{parentName:"p"},"BE")," through ",(0,i.yg)("inlineCode",{parentName:"p"},"RPC")," request.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"cpu_resource_limit")),(0,i.yg)("p",{parentName:"li"},"   Used to limit the resource overhead of a query. This is an experimental feature. The current implementation is to limit the number of scan threads for a query on a single node. The number of scan threads is limited, and the data returned from the bottom layer slows down, thereby limiting the overall computational resource overhead of the query. Assuming it is set to 2, a query can use up to 2 scan threads on a single node."),(0,i.yg)("p",{parentName:"li"},"   This parameter will override the effect of ",(0,i.yg)("inlineCode",{parentName:"p"},"parallel_fragment_exec_instance_num"),". That is, assuming that ",(0,i.yg)("inlineCode",{parentName:"p"},"parallel_fragment_exec_instance_num")," is set to 4, and this parameter is set to 2. Then 4 execution instances on a single node will share up to 2 scanning threads."),(0,i.yg)("p",{parentName:"li"},"   This parameter will be overridden by the ",(0,i.yg)("inlineCode",{parentName:"p"},"cpu_resource_limit")," configuration in the user property."),(0,i.yg)("p",{parentName:"li"},"   The default is -1, which means no limit.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"disable_join_reorder")),(0,i.yg)("p",{parentName:"li"},"  Used to turn off all automatic join reorder algorithms in the system. There are two values: true and false.It is closed by default, that is, the automatic join reorder algorithm of the system is adopted. After set to true, the system will close all automatic sorting algorithms, adopt the original SQL table order, and execute join")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"enable_infer_predicate")),(0,i.yg)("p",{parentName:"li"},"  Used to control whether to perform predicate derivation. There are two values: true and false. It is turned off by default, that is, the system does not perform predicate derivation, and uses the original predicate to perform related operations. After it is set to true, predicate expansion is performed.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"return_object_data_as_binary"),"\nUsed to identify whether to return the bitmap/hll result in the select result. In the select into outfile statement, if the export file format is csv, the bimap/hll data will be base64-encoded, if it is the parquet file format, the data will be stored as a byte array. Below will be an example of Java, more examples can be found in ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/apache/doris/tree/master/samples/read_bitmap"},"samples"),"."),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-java"},'try (Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:9030/test?user=root");\n             Statement stmt = conn.createStatement()\n) {\n    stmt.execute("set return_object_data_as_binary=true"); // IMPORTANT!!!\n    ResultSet rs = stmt.executeQuery("select uids from t_bitmap");\n    while(rs.next()){\n        byte[] bytes = rs.getBytes(1);\n        RoaringBitmap bitmap32 = new RoaringBitmap();\n        switch(bytes[0]) {\n            case 0: // for empty bitmap\n                break;\n            case 1: // for only 1 element in bitmap32\n                bitmap32.add(ByteBuffer.wrap(bytes,1,bytes.length-1)\n                        .order(ByteOrder.LITTLE_ENDIAN)\n                        .getInt());\n                break;\n            case 2: // for more than 1 elements in bitmap32\n                bitmap32.deserialize(ByteBuffer.wrap(bytes,1,bytes.length-1));\n                break;\n            // for more details, see https://github.com/apache/doris/tree/master/samples/read_bitmap\n        }\n    }\n}\n'))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"block_encryption_mode"),"\nThe block encryption mode can be controlled by this parameter, the default value is empty.\nWhen empty, using the AES algorithm is equivalent to using ",(0,i.yg)("inlineCode",{parentName:"p"},"AES_128_ECB"),", and when using the SM4 algorithm is equivalent to ",(0,i.yg)("inlineCode",{parentName:"p"},"SM4_128_ECB"),"."))),(0,i.yg)("p",null,"Optional values:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"  AES_128_ECB,\n  AES_192_ECB,\n  AES_256_ECB,\n  AES_128_CBC,\n  AES_192_CBC,\n  AES_256_CBC,\n  AES_128_CFB,\n  AES_192_CFB,\n  AES_256_CFB,\n  AES_128_CFB1,\n  AES_192_CFB1,\n  AES_256_CFB1,\n  AES_128_CFB8,\n  AES_192_CFB8,\n  AES_256_CFB8,\n  AES_128_CFB128,\n  AES_192_CFB128,\n  AES_256_CFB128,\n  AES_128_CTR,\n  AES_192_CTR,\n  AES_256_CTR,\n  AES_128_OFB,\n  AES_192_OFB,\n  AES_256_OFB,\n  SM4_128_ECB,\n  SM4_128_CBC,\n  SM4_128_CFB128,\n  SM4_128_OFB,\n  SM4_128_CTR,\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"enable_infer_predicate")),(0,i.yg)("p",{parentName:"li"},"Used to control whether predicate deduction is performed. There are two values: true and false. It is turned off by default, and the system does not perform predicate deduction, and uses the original predicate for related operations. When set to true, predicate expansion occurs.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"trim_tailing_spaces_for_external_table_query")),(0,i.yg)("p",{parentName:"li"},"Used to control whether trim the tailing spaces while quering Hive external tables. The default is false.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"skip_storage_engine_merge")),(0,i.yg)("p",{parentName:"li"},"  For debugging purpose. In vectorized execution engine, in case of problems of reading data of Aggregate Key model and Unique Key model, setting value to ",(0,i.yg)("inlineCode",{parentName:"p"},"true")," will read data as Duplicate Key model.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"skip_delete_predicate")),(0,i.yg)("p",{parentName:"li"},"  For debugging purpose. In vectorized execution engine, in case of problems of reading data, setting value to ",(0,i.yg)("inlineCode",{parentName:"p"},"true")," will also read deleted data.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"skip_delete_bitmap")),(0,i.yg)("p",{parentName:"li"},"  For debugging purpose. In Unique Key MoW table, in case of problems of reading data, setting value to ",(0,i.yg)("inlineCode",{parentName:"p"},"true")," will also read deleted data.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"skip_missing_version")),(0,i.yg)("p",{parentName:"li"},"   In some scenarios, all replicas of tablet are having missing versions, and the tablet is unable to recover. This config can control the behavior of query. When it is opened, the query will ignore the visible version recorded in FE partition, use the replica version. If the replica on be has missing versions, the query will directly skip this missing version, and only return the data of the existing version, In addition, the query will always try to select the one with the highest lastSuccessVersion among all surviving BE replicas, so as to recover as much data as possible. You should only open it in the emergency scenarios mentioned above, only used for temporary recovery queries. Note that, this variable conflicts with the a variable, when the a variable is not -1, this variable will not work.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"default_password_lifetime")),(0,i.yg)("p",{parentName:"li"},"Default password expiration time. The default value is 0, which means no expiration. The unit is days. This parameter is only enabled if the user's password expiration property has a value of DEFAULT. like:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre"},'CREATE USER user1 IDENTIFIED BY "12345" PASSWORD_EXPIRE DEFAULT;\nALTER USER user1 PASSWORD_EXPIRE DEFAULT;\n'))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"password_history")),(0,i.yg)("p",{parentName:"li"},"The default number of historical passwords. The default value is 0, which means no limit. This parameter is enabled only when the user's password history attribute is the DEFAULT value. like:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre"},'CREATE USER user1 IDENTIFIED BY "12345" PASSWORD_HISTORY DEFAULT;\nALTER USER user1 PASSWORD_HISTORY DEFAULT;\n'))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"validate_password_policy")),(0,i.yg)("p",{parentName:"li"},"Password strength verification policy. Defaults to ",(0,i.yg)("inlineCode",{parentName:"p"},"NONE")," or ",(0,i.yg)("inlineCode",{parentName:"p"},"0"),", i.e. no verification. Can be set to ",(0,i.yg)("inlineCode",{parentName:"p"},"STRONG")," or ",(0,i.yg)("inlineCode",{parentName:"p"},"2"),". When set to ",(0,i.yg)("inlineCode",{parentName:"p"},"STRONG")," or ",(0,i.yg)("inlineCode",{parentName:"p"},"2"),", when setting a password via the ",(0,i.yg)("inlineCode",{parentName:"p"},"ALTER USER")," or ",(0,i.yg)("inlineCode",{parentName:"p"},"SET PASSWORD"),' commands, the password must contain any of "uppercase letters", "lowercase letters", "numbers" and "special characters". 3 items, and the length must be greater than or equal to 8. Special characters include: ',(0,i.yg)("inlineCode",{parentName:"p"},"~!@#$%^&*()_+|<>,.?/:;'[]{}\""),".")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"group_concat_max_len")),(0,i.yg)("p",{parentName:"li"},"  For compatible purpose. This variable has no effect, just enable some BI tools can query or set this session variable sucessfully.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"rewrite_or_to_in_predicate_threshold")),(0,i.yg)("p",{parentName:"li"},"  The default threshold of rewriting OR to IN. The default value is 2, which means that when there are 2 ORs, if they can be compact, they will be rewritten as IN predicate.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"group_by_and_having_use_alias_first")),(0,i.yg)("p",{parentName:"li"},"Specifies whether group by and having clauses use column aliases rather than searching for column name in From clause. The default value is false.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"enable_file_cache")),(0,i.yg)("p",{parentName:"li"},"  Set wether to use block file cache. This variable takes effect only if the BE config enable_file_cache=true. The cache is not used when BE config enable_file_cache=false.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"topn_opt_limit_threshold")),(0,i.yg)("p",{parentName:"li"},"  Set threshold for limit of topn query (eg. SELECT * FROM t ORDER BY k LIMIT n). If n <= threshold, topn optimizations(runtime predicate pushdown, two phase result fetch and read order by key) will enable automatically, otherwise disable. Default value is 1024.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"drop_table_if_ctas_failed")),(0,i.yg)("p",{parentName:"li"},"  Controls whether create table as select deletes created tables when a insert error occurs, the default value is true.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"show_user_default_role")))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"Controls whether to show each user's implicit roles in the results of `show roles`. Default is false.\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"use_fix_replica")),(0,i.yg)("p",{parentName:"li"},"  Use a fixed replica to query. If use_fix_replica is 1, the smallest one is used, if use_fix_replica is 2, the second smallest one is used, and so on. The default value is -1, which means it is not enabled.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"dry_run_query")))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"If set to true, for query requests, the actual result set will no longer be returned, but only the number of rows. The default is false.\n\nThis parameter can be used to avoid the time-consuming result set transmission when testing a large number of data sets, and focus on the time-consuming underlying query execution.\n\n```\nmysql> select * from bigtable;\n+--------------+\n| ReturnedRows |\n+--------------+\n| 10000000     |\n+--------------+\n```\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"enable_strong_consistency_read")),(0,i.yg)("p",{parentName:"li"},"Used to enable strong consistent reading. By default, Doris supports strong consistency within the same session, that is, changes to data within the same session are visible in real time. If you want strong consistent reads between sessions, set this variable to true. "))),(0,i.yg)("hr",null),(0,i.yg)("h4",{id:"supplementary-instructions-on-statement-execution-timeout-control"},"Supplementary instructions on statement execution timeout control"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Means of control"),(0,i.yg)("p",{parentName:"li"},"   Currently doris supports timeout control through ",(0,i.yg)("inlineCode",{parentName:"p"},"variable")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"user property")," two systems. Both include ",(0,i.yg)("inlineCode",{parentName:"p"},"qeury_timeout")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"insert_timeout"),".")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Priority"),(0,i.yg)("p",{parentName:"li"},"   The order of priority for timeout to take effect is: ",(0,i.yg)("inlineCode",{parentName:"p"},"session variable")," > ",(0,i.yg)("inlineCode",{parentName:"p"},"user property")," > ",(0,i.yg)("inlineCode",{parentName:"p"},"global variable")," > ",(0,i.yg)("inlineCode",{parentName:"p"},"default value")),(0,i.yg)("p",{parentName:"li"},"   When a variable with a higher priority is not set, the value of the next priority is automatically adopted.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Related semantics"),(0,i.yg)("p",{parentName:"li"},"   ",(0,i.yg)("inlineCode",{parentName:"p"},"query_timeout")," is used to control the timeout of all statements, and ",(0,i.yg)("inlineCode",{parentName:"p"},"insert_timeout")," is specifically used to control the timeout of the INSERT statement. When the INSERT statement is executed, the timeout time will take"),(0,i.yg)("p",{parentName:"li"},"   The maximum value of ",(0,i.yg)("inlineCode",{parentName:"p"},"query_timeout")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"insert_timeout"),"."),(0,i.yg)("p",{parentName:"li"},"   ",(0,i.yg)("inlineCode",{parentName:"p"},"query_timeout")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"insert_timeout")," in ",(0,i.yg)("inlineCode",{parentName:"p"},"user property")," can only be specified by the ADMIN user for the target user, and its semantics is to change the default timeout time of the specified user, and it does not have ",(0,i.yg)("inlineCode",{parentName:"p"},"quota")," semantics.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Precautions"),(0,i.yg)("p",{parentName:"li"},"   The timeout set by ",(0,i.yg)("inlineCode",{parentName:"p"},"user property")," needs to be triggered after the client reconnects."))))}y.isMDXComponent=!0}}]);