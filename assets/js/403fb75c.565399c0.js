"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[456609],{15680:(e,n,r)=>{r.d(n,{xA:()=>y,yg:()=>d});var a=r(296540);function l(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function t(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?t(Object(r),!0).forEach((function(n){l(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,a,l=function(e,n){if(null==e)return{};var r,a,l={},t=Object.keys(e);for(a=0;a<t.length;a++)r=t[a],n.indexOf(r)>=0||(l[r]=e[r]);return l}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(a=0;a<t.length;a++)r=t[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var o=a.createContext({}),c=function(e){var n=a.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},y=function(e){var n=c(e.components);return a.createElement(o.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},f=a.forwardRef((function(e,n){var r=e.components,l=e.mdxType,t=e.originalType,o=e.parentName,y=i(e,["components","mdxType","originalType","parentName"]),u=c(r),f=l,d=u["".concat(o,".").concat(f)]||u[f]||p[f]||t;return r?a.createElement(d,s(s({ref:n},y),{},{components:r})):a.createElement(d,s({ref:n},y))}));function d(e,n){var r=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var t=r.length,s=new Array(t);s[0]=f;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=e,i[u]="string"==typeof e?e:l,s[1]=i;for(var c=2;c<t;c++)s[c]=r[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},211298:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var a=r(58168),l=(r(296540),r(15680));const t={title:"array_slice",language:"en"},s=void 0,i={unversionedId:"sql-manual/sql-functions/array-functions/array_slice",id:"version-1.2/sql-manual/sql-functions/array-functions/array_slice",title:"array_slice",description:"\x3c!--",source:"@site/versioned_docs/version-1.2/sql-manual/sql-functions/array-functions/array_slice.md",sourceDirName:"sql-manual/sql-functions/array-functions",slug:"/sql-manual/sql-functions/array-functions/array_slice",permalink:"/docs/1.2/sql-manual/sql-functions/array-functions/array_slice",draft:!1,tags:[],version:"1.2",frontMatter:{title:"array_slice",language:"en"},sidebar:"docs",previous:{title:"array_remove",permalink:"/docs/1.2/sql-manual/sql-functions/array-functions/array_remove"},next:{title:"array_sort",permalink:"/docs/1.2/sql-manual/sql-functions/array-functions/array_sort"}},o={},c=[{value:"array_slice",id:"array_slice",level:2},{value:"description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"notice",id:"notice",level:3},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}],y={toc:c},u="wrapper";function p(e){let{components:n,...r}=e;return(0,l.yg)(u,(0,a.A)({},y,r,{components:n,mdxType:"MDXLayout"}),(0,l.yg)("h2",{id:"array_slice"},"array_slice"),(0,l.yg)("p",null,"array_slice"),(0,l.yg)("h3",{id:"description"},"description"),(0,l.yg)("h4",{id:"syntax"},"Syntax"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"ARRAY<T> array_slice(ARRAY<T> arr, BIGINT off, BIGINT len)")),(0,l.yg)("p",null,"Returns a slice of the array."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"A positive off indicates an indent on the left\nA negative off indicates an indent on the right.\nAn empty array is returned when the off is not within the actual range of the array.\nA negative len will be treated as 0.\n")),(0,l.yg)("h3",{id:"notice"},"notice"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"Only supported in vectorized engine")),(0,l.yg)("h3",{id:"example"},"example"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"mysql> select k2, k2[2:2] from array_type_table_nullable;\n+-----------------+-------------------------+\n| k2              | array_slice(`k2`, 2, 2) |\n+-----------------+-------------------------+\n| [1, 2, 3]       | [2, 3]                  |\n| [1, NULL, 3]    | [NULL, 3]               |\n| [2, 3]          | [3]                     |\n| NULL            | NULL                    |\n+-----------------+-------------------------+\n\nmysql> select k2, array_slice(k2, 2, 2) from array_type_table_nullable;\n+-----------------+-------------------------+\n| k2              | array_slice(`k2`, 2, 2) |\n+-----------------+-------------------------+\n| [1, 2, 3]       | [2, 3]                  |\n| [1, NULL, 3]    | [NULL, 3]               |\n| [2, 3]          | [3]                     |\n| NULL            | NULL                    |\n+-----------------+-------------------------+\n\nmysql> select k2, k2[2:2] from array_type_table_nullable_varchar;\n+----------------------------+-------------------------+\n| k2                         | array_slice(`k2`, 2, 2) |\n+----------------------------+-------------------------+\n| ['hello', 'world', 'c++']  | ['world', 'c++']        |\n| ['a1', 'equals', 'b1']     | ['equals', 'b1']        |\n| ['hasnull', NULL, 'value'] | [NULL, 'value']         |\n| ['hasnull', NULL, 'value'] | [NULL, 'value']         |\n+----------------------------+-------------------------+\n\nmysql> select k2, array_slice(k2, 2, 2) from array_type_table_nullable_varchar;\n+----------------------------+-------------------------+\n| k2                         | array_slice(`k2`, 2, 2) |\n+----------------------------+-------------------------+\n| ['hello', 'world', 'c++']  | ['world', 'c++']        |\n| ['a1', 'equals', 'b1']     | ['equals', 'b1']        |\n| ['hasnull', NULL, 'value'] | [NULL, 'value']         |\n| ['hasnull', NULL, 'value'] | [NULL, 'value']         |\n+----------------------------+-------------------------+\n")),(0,l.yg)("p",null,"Negative off:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"mysql> select k2, k2[-2:1] from array_type_table_nullable;\n+-----------+--------------------------+\n| k2        | array_slice(`k2`, -2, 1) |\n+-----------+--------------------------+\n| [1, 2, 3] | [2]                      |\n| [1, 2, 3] | [2]                      |\n| [2, 3]    | [2]                      |\n| [2, 3]    | [2]                      |\n+-----------+--------------------------+\n\nmysql> select k2, array_slice(k2, -2, 1) from array_type_table_nullable;\n+-----------+--------------------------+\n| k2        | array_slice(`k2`, -2, 1) |\n+-----------+--------------------------+\n| [1, 2, 3] | [2]                      |\n| [1, 2, 3] | [2]                      |\n| [2, 3]    | [2]                      |\n| [2, 3]    | [2]                      |\n+-----------+--------------------------+\n\nmysql> select k2, k2[-2:2] from array_type_table_nullable_varchar;\n+----------------------------+--------------------------+\n| k2                         | array_slice(`k2`, -2, 2) |\n+----------------------------+--------------------------+\n| ['hello', 'world', 'c++']  | ['world', 'c++']         |\n| ['a1', 'equals', 'b1']     | ['equals', 'b1']         |\n| ['hasnull', NULL, 'value'] | [NULL, 'value']          |\n| ['hasnull', NULL, 'value'] | [NULL, 'value']          |\n+----------------------------+--------------------------+\n\nmysql> select k2, array_slice(k2, -2, 2) from array_type_table_nullable_varchar;\n+----------------------------+--------------------------+\n| k2                         | array_slice(`k2`, -2, 2) |\n+----------------------------+--------------------------+\n| ['hello', 'world', 'c++']  | ['world', 'c++']         |\n| ['a1', 'equals', 'b1']     | ['equals', 'b1']         |\n| ['hasnull', NULL, 'value'] | [NULL, 'value']          |\n| ['hasnull', NULL, 'value'] | [NULL, 'value']          |\n+----------------------------+--------------------------+\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"mysql> select k2, array_slice(k2, 0) from array_type_table;\n+-----------+-------------------------+\n| k2        | array_slice(`k2`, 0) |\n+-----------+-------------------------+\n| [1, 2, 3] | []                      |\n+-----------+-------------------------+\n\nmysql> select k2, array_slice(k2, -5) from array_type_table;\n+-----------+----------------------+\n| k2        | array_slice(`k2`, -5) |\n+-----------+----------------------+\n| [1, 2, 3] | []                   |\n+-----------+----------------------+\n")),(0,l.yg)("h3",{id:"keywords"},"keywords"),(0,l.yg)("p",null,"ARRAY,SLICE,ARRAY_SLICE"))}p.isMDXComponent=!0}}]);