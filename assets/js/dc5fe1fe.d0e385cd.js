"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[639968],{15680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>c});var n=a(296540);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},N=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(a),N=l,c=m["".concat(s,".").concat(N)]||m[N]||y[N]||r;return a?n.createElement(c,i(i({ref:t},p),{},{components:a})):n.createElement(c,i({ref:t},p))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=N;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:l,i[1]=o;for(var u=2;u<r;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}N.displayName="MDXCreateElement"},482073:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var n=a(58168),l=(a(296540),a(15680));const r={title:"JOBS",language:"en"},i=void 0,o={unversionedId:"sql-manual/sql-functions/table-valued-functions/jobs",id:"version-3.0/sql-manual/sql-functions/table-valued-functions/jobs",title:"JOBS",description:"\x3c!--",source:"@site/versioned_docs/version-3.0/sql-manual/sql-functions/table-valued-functions/jobs.md",sourceDirName:"sql-manual/sql-functions/table-valued-functions",slug:"/sql-manual/sql-functions/table-valued-functions/jobs",permalink:"/docs/3.0/sql-manual/sql-functions/table-valued-functions/jobs",draft:!1,tags:[],version:"3.0",frontMatter:{title:"JOBS",language:"en"},sidebar:"docs",previous:{title:"CATALOGS",permalink:"/docs/3.0/sql-manual/sql-functions/table-valued-functions/catalogs"},next:{title:"MV_INFOS",permalink:"/docs/3.0/sql-manual/sql-functions/table-valued-functions/mv-infos"}},s={},u=[{value:"<code>jobs</code>",id:"jobs",level:2},{value:"Name",id:"name",level:3},{value:"description",id:"description",level:3},{value:"syntax",id:"syntax",level:4},{value:"insert job",id:"insert-job",level:5},{value:"matterialized view job",id:"matterialized-view-job",level:5},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}],p={toc:u},m="wrapper";function y(e){let{components:t,...a}=e;return(0,l.yg)(m,(0,n.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("h2",{id:"jobs"},(0,l.yg)("inlineCode",{parentName:"h2"},"jobs")),(0,l.yg)("h3",{id:"name"},"Name"),(0,l.yg)("p",null,"jobs"),(0,l.yg)("h3",{id:"description"},"description"),(0,l.yg)("p",null,"Table function, generating a temporary task table, which can view job information in a certain task type."),(0,l.yg)("p",null,"This function is used in the from clause."),(0,l.yg)("p",null,"This function is supported since 2.1.0."),(0,l.yg)("h4",{id:"syntax"},"syntax"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},'jobs("type"="")')),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"parameter description")),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:"left"},"parameter"),(0,l.yg)("th",{parentName:"tr",align:"left"},"description"),(0,l.yg)("th",{parentName:"tr",align:"left"},"type"),(0,l.yg)("th",{parentName:"tr",align:"left"},"required"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:"left"},"type"),(0,l.yg)("td",{parentName:"tr",align:"left"},"job type"),(0,l.yg)("td",{parentName:"tr",align:"left"},"string"),(0,l.yg)("td",{parentName:"tr",align:"left"},"yes")))),(0,l.yg)("p",null,"the ",(0,l.yg)("strong",{parentName:"p"},"type")," supported types"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"insert: insert into type job"),(0,l.yg)("li",{parentName:"ul"},"mv: materialized view job")),(0,l.yg)("h5",{id:"insert-job"},"insert job"),(0,l.yg)("p",null,'jobs("type"="insert")Table structure:'),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},'mysql> desc  function jobs("type"="insert");\n+-------------------+------+------+-------+---------+-------+\n| Field             | Type | Null | Key   | Default | Extra |\n+-------------------+------+------+-------+---------+-------+\n| Id                | TEXT | No   | false | NULL    | NONE  |\n| Name              | TEXT | No   | false | NULL    | NONE  |\n| Definer           | TEXT | No   | false | NULL    | NONE  |\n| ExecuteType       | TEXT | No   | false | NULL    | NONE  |\n| RecurringStrategy | TEXT | No   | false | NULL    | NONE  |\n| Status            | TEXT | No   | false | NULL    | NONE  |\n| ExecuteSql        | TEXT | No   | false | NULL    | NONE  |\n| CreateTime        | TEXT | No   | false | NULL    | NONE  |\n| SucceedTaskCount  | TEXT | No   | false | NULL    | NONE  |\n| FailedTaskCount   | TEXT | No   | false | NULL    | NONE  |\n| CanceledTaskCount | TEXT | No   | false | NULL    | NONE  |\n| Comment           | TEXT | No   | false | NULL    | NONE  |\n+-------------------+------+------+-------+---------+-------+\n12 rows in set (0.01 sec)\n')),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Id: job ID."),(0,l.yg)("li",{parentName:"ul"},"Name: job name."),(0,l.yg)("li",{parentName:"ul"},"Definer: job definer."),(0,l.yg)("li",{parentName:"ul"},"ExecuteType: Execution type"),(0,l.yg)("li",{parentName:"ul"},"RecurringStrategy: recurring strategy"),(0,l.yg)("li",{parentName:"ul"},"Status: Job status"),(0,l.yg)("li",{parentName:"ul"},"ExecuteSql: Execution SQL"),(0,l.yg)("li",{parentName:"ul"},"CreateTime: Job creation time"),(0,l.yg)("li",{parentName:"ul"},"SucceedTaskCount: Number of successful tasks"),(0,l.yg)("li",{parentName:"ul"},"FailedTaskCount: Number of failed tasks"),(0,l.yg)("li",{parentName:"ul"},"CanceledTaskCount: Number of canceled tasks"),(0,l.yg)("li",{parentName:"ul"},"Comment: job comment")),(0,l.yg)("h5",{id:"matterialized-view-job"},"matterialized view job"),(0,l.yg)("p",null,'jobs("type"="mv")Table structure:'),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},'mysql> desc function jobs("type"="mv");\n+-------------------+------+------+-------+---------+-------+\n| Field             | Type | Null | Key   | Default | Extra |\n+-------------------+------+------+-------+---------+-------+\n| Id                | TEXT | No   | false | NULL    | NONE  |\n| Name              | TEXT | No   | false | NULL    | NONE  |\n| MvId              | TEXT | No   | false | NULL    | NONE  |\n| MvName            | TEXT | No   | false | NULL    | NONE  |\n| MvDatabaseId      | TEXT | No   | false | NULL    | NONE  |\n| MvDatabaseName    | TEXT | No   | false | NULL    | NONE  |\n| ExecuteType       | TEXT | No   | false | NULL    | NONE  |\n| RecurringStrategy | TEXT | No   | false | NULL    | NONE  |\n| Status            | TEXT | No   | false | NULL    | NONE  |\n| CreateTime        | TEXT | No   | false | NULL    | NONE  |\n+-------------------+------+------+-------+---------+-------+\n10 rows in set (0.00 sec)\n')),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Id: job ID."),(0,l.yg)("li",{parentName:"ul"},"Name: job name."),(0,l.yg)("li",{parentName:"ul"},"MvId: Materialized View ID"),(0,l.yg)("li",{parentName:"ul"},"MvName: Materialized View Name"),(0,l.yg)("li",{parentName:"ul"},"MvDatabaseId: DB ID of the materialized view"),(0,l.yg)("li",{parentName:"ul"},"MvDatabaseName: Name of the database to which the materialized view belongs"),(0,l.yg)("li",{parentName:"ul"},"ExecuteType: Execution type"),(0,l.yg)("li",{parentName:"ul"},"RecurringStrategy: Loop strategy"),(0,l.yg)("li",{parentName:"ul"},"Status: Job status"),(0,l.yg)("li",{parentName:"ul"},"CreateTime: Task creation time")),(0,l.yg)("h3",{id:"example"},"example"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},"View jobs in all materialized views")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},'mysql> select * from jobs("type"="mv");\n')),(0,l.yg)("ol",{start:2},(0,l.yg)("li",{parentName:"ol"},"View job with name ",(0,l.yg)("inlineCode",{parentName:"li"},"inner_mtmv_75043"))),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},'mysql> select * from jobs("type"="mv") where Name="inner_mtmv_75043";\n')),(0,l.yg)("ol",{start:3},(0,l.yg)("li",{parentName:"ol"},"View all insert jobs")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},'mysql> select * from jobs("type"="insert");\n')),(0,l.yg)("ol",{start:4},(0,l.yg)("li",{parentName:"ol"},"View job with name ",(0,l.yg)("inlineCode",{parentName:"li"},"one_insert_job"))),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},'mysql> select * from jobs("type"="insert") where Name=\'one_insert_job\';\n')),(0,l.yg)("h3",{id:"keywords"},"keywords"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"jobs, job, insert, mv, materialized view, schedule\n")))}y.isMDXComponent=!0}}]);