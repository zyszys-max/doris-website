"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[729609],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>m});var r=t(296540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(t),y=a,m=p["".concat(l,".").concat(y)]||p[y]||d[y]||o;return t?r.createElement(m,s(s({ref:n},u),{},{components:t})):r.createElement(m,s({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=y;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},628315:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=t(58168),a=(t(296540),t(15680));const o={title:"ASSERT_TRUE",language:"en"},s=void 0,i={unversionedId:"sql-manual/sql-functions/conditional-functions/assert-true",id:"sql-manual/sql-functions/conditional-functions/assert-true",title:"ASSERT_TRUE",description:"\x3c!--",source:"@site/docs/sql-manual/sql-functions/conditional-functions/assert-true.md",sourceDirName:"sql-manual/sql-functions/conditional-functions",slug:"/sql-manual/sql-functions/conditional-functions/assert-true",permalink:"/docs/dev/sql-manual/sql-functions/conditional-functions/assert-true",draft:!1,tags:[],version:"current",frontMatter:{title:"ASSERT_TRUE",language:"en"},sidebar:"docs",previous:{title:"BIT_SHIFT_RIGHT",permalink:"/docs/dev/sql-manual/sql-functions/bitwise-functions/bitshiftright"},next:{title:"CASE",permalink:"/docs/dev/sql-manual/sql-functions/conditional-functions/case"}},l={},c=[{value:"Description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Example",id:"example",level:3},{value:"Keywords",id:"keywords",level:3}],u={toc:c},p="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"description"},"Description"),(0,a.yg)("h4",{id:"syntax"},"Syntax"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"BOOLEAN assert_true(BOOLEAN condition, VarcharLiteral errmsg)")),(0,a.yg)("p",null,"When ",(0,a.yg)("inlineCode",{parentName:"p"},"condition")," is ",(0,a.yg)("inlineCode",{parentName:"p"},"true"),", return ",(0,a.yg)("inlineCode",{parentName:"p"},"true"),". Otherwise throws an error with message ",(0,a.yg)("inlineCode",{parentName:"p"},"errmsg"),".\n",(0,a.yg)("inlineCode",{parentName:"p"},"errmsg")," could only be Literal."),(0,a.yg)("h3",{id:"example"},"Example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},'mysql> select assert_true(1, "wrong");\n+------------------------------------------+\n| assert_true(cast(1 as BOOLEAN), \'wrong\') |\n+------------------------------------------+\n|                                        1 |\n+------------------------------------------+\n1 row in set (0.12 sec)\n\nmysql> select assert_true(1, nullable("wrong"));\nERROR 1105 (HY000): errCode = 2, detailMessage = assert_true only accept constant for 2nd argument\nmysql> select assert_true(0, "wrong");\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.8)[INVALID_ARGUMENT][E33] wrong\nmysql> select assert_true(null, "wrong");\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.8)[INVALID_ARGUMENT][E33] wrong\n')),(0,a.yg)("h3",{id:"keywords"},"Keywords"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"ASSERT_TRUE, ASSERT, TRUE\n")))}d.isMDXComponent=!0}}]);