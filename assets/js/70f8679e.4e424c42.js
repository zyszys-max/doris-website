"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[395243],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>d});var r=t(296540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",_={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(t),f=i,d=p["".concat(s,".").concat(f)]||p[f]||_[f]||o;return t?r.createElement(d,a(a({ref:n},c),{},{components:t})):r.createElement(d,a({ref:n},c))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},93254:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>_,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=t(58168),i=(t(296540),t(15680));const o={title:"IPV6_STRING_TO_NUM_OR_DEFAULT",language:"en"},a=void 0,l={unversionedId:"sql-manual/sql-functions/ip-functions/ipv6-string-to-num-or-default",id:"version-2.1/sql-manual/sql-functions/ip-functions/ipv6-string-to-num-or-default",title:"IPV6_STRING_TO_NUM_OR_DEFAULT",description:"\x3c!--",source:"@site/versioned_docs/version-2.1/sql-manual/sql-functions/ip-functions/ipv6-string-to-num-or-default.md",sourceDirName:"sql-manual/sql-functions/ip-functions",slug:"/sql-manual/sql-functions/ip-functions/ipv6-string-to-num-or-default",permalink:"/docs/sql-manual/sql-functions/ip-functions/ipv6-string-to-num-or-default",draft:!1,tags:[],version:"2.1",frontMatter:{title:"IPV6_STRING_TO_NUM_OR_DEFAULT",language:"en"},sidebar:"docs",previous:{title:"IPV6_STRING_TO_NUM",permalink:"/docs/sql-manual/sql-functions/ip-functions/ipv6-string-to-num"},next:{title:"IPV6_STRING_TO_NUM_OR_NULL",permalink:"/docs/sql-manual/sql-functions/ip-functions/ipv6-string-to-num-or-null"}},s={},u=[{value:"IPV6_STRING_TO_NUM_OR_DEFAULT",id:"ipv6_string_to_num_or_default",level:2},{value:"Description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Notice",id:"notice",level:4},{value:"Example",id:"example",level:3},{value:"Keywords",id:"keywords",level:3}],c={toc:u},p="wrapper";function _(e){let{components:n,...t}=e;return(0,i.yg)(p,(0,r.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"ipv6_string_to_num_or_default"},"IPV6_STRING_TO_NUM_OR_DEFAULT"),(0,i.yg)("p",null,"IPV6_STRING_TO_NUM_OR_DEFAULT"),(0,i.yg)("h3",{id:"description"},"Description"),(0,i.yg)("h4",{id:"syntax"},"Syntax"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"VARCHAR IPV6_STRING_TO_NUM_OR_DEFAULT(VARCHAR ipv6_string)")),(0,i.yg)("p",null,"The reverse function of IPv6NumToString, it takes an IP address String and returns an IPv6 address in binary format.\nIf the input string contains a valid IPv4 address, returns its IPv6 equivalent."),(0,i.yg)("h4",{id:"notice"},"Notice"),(0,i.yg)("p",null,"will return ",(0,i.yg)("inlineCode",{parentName:"p"},"0")," if the input string is not a valid IP address"),(0,i.yg)("h3",{id:"example"},"Example"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> select hex(ipv6_string_to_num_or_default('1111::ffff'));\n+--------------------------------------------------+\n| hex(ipv6_string_to_num_or_default('1111::ffff')) |\n+--------------------------------------------------+\n| 1111000000000000000000000000FFFF                 |\n+--------------------------------------------------+\n1 row in set (0.01 sec)\n\nmysql> select hex(ipv6_string_to_num_or_default('192.168.0.1'));\n+---------------------------------------------------+\n| hex(ipv6_string_to_num_or_default('192.168.0.1')) |\n+---------------------------------------------------+\n| 00000000000000000000FFFFC0A80001                  |\n+---------------------------------------------------+\n1 row in set (0.02 sec)\n\nmysql> select hex(ipv6_string_to_num_or_default('notaaddress'));\n+---------------------------------------------------+\n| hex(ipv6_string_to_num_or_default('notaaddress')) |\n+---------------------------------------------------+\n| 00000000000000000000000000000000                  |\n+---------------------------------------------------+\n1 row in set (0.02 sec)\n")),(0,i.yg)("h3",{id:"keywords"},"Keywords"),(0,i.yg)("p",null,"IPV6_STRING_TO_NUM_OR_DEFAULT, IP"))}_.isMDXComponent=!0}}]);