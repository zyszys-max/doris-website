"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[256119],{15680:(e,r,n)=>{n.d(r,{xA:()=>y,yg:()=>m});var t=n(296540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=t.createContext({}),c=function(e){var r=t.useContext(o),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},y=function(e){var r=c(e.components);return t.createElement(o.Provider,{value:r},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,y=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,m=u["".concat(o,".").concat(d)]||u[d]||p[d]||i;return n?t.createElement(m,l(l({ref:r},y),{},{components:n})):t.createElement(m,l({ref:r},y))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var s={};for(var o in r)hasOwnProperty.call(r,o)&&(s[o]=r[o]);s.originalType=e,s[u]="string"==typeof e?e:a,l[1]=s;for(var c=2;c<i;c++)l[c]=n[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},629154:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var t=n(58168),a=(n(296540),n(15680));const i={title:"ARRAY_RANGE",language:"en"},l=void 0,s={unversionedId:"sql-manual/sql-functions/array-functions/array-range",id:"sql-manual/sql-functions/array-functions/array-range",title:"ARRAY_RANGE",description:"\x3c!--",source:"@site/docs/sql-manual/sql-functions/array-functions/array-range.md",sourceDirName:"sql-manual/sql-functions/array-functions",slug:"/sql-manual/sql-functions/array-functions/array-range",permalink:"/docs/dev/sql-manual/sql-functions/array-functions/array-range",draft:!1,tags:[],version:"current",frontMatter:{title:"ARRAY_RANGE",language:"en"},sidebar:"docs",previous:{title:"ARRAY_INTERSECT",permalink:"/docs/dev/sql-manual/sql-functions/array-functions/array-intersect"},next:{title:"ARRAY_DISTINCT",permalink:"/docs/dev/sql-manual/sql-functions/array-functions/array-distinct"}},o={},c=[{value:"array_range",id:"array_range",level:2},{value:"description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"notice",id:"notice",level:3},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}],y={toc:c},u="wrapper";function p(e){let{components:r,...n}=e;return(0,a.yg)(u,(0,t.A)({},y,n,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"array_range"},"array_range"),(0,a.yg)("p",null,"array_range"),(0,a.yg)("h3",{id:"description"},"description"),(0,a.yg)("h4",{id:"syntax"},"Syntax"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"ARRAY<Int> array_range(Int end)\nARRAY<Int> array_range(Int start, Int end)\nARRAY<Int> array_range(Int start, Int end, Int step)\nARRAY<Datetime> array_range(Datetime start_datetime, Datetime end_datetime)\nARRAY<Datetime> array_range(Datetime start_datetime, Datetime end_datetime, INTERVAL Int interval_step UNIT)\n")),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"To generate array of int:\nThe parameters are all positive integers.\nstart default value is 0, and step default value is 1.\nReturn the array which numbers from start to end - 1 by step.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"To generate array of datetime:\nAt least taking two parameters.\nThe first two parameters are all datetimev2, the third is positive integer.\nIf the third part is missing, ",(0,a.yg)("inlineCode",{parentName:"p"},"INTERVAL 1 DAY")," will be default value.\nUNIT supports YEAR/MONTH/WEEK/DAY/HOUR/MINUTE/SECOND.\nReturn the array of datetimev2 between start_datetime and closest to end_datetime by interval_step UNIT."))),(0,a.yg)("h3",{id:"notice"},"notice"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"if the 3rd parameter step/interval_step is negative or zero, the function will return NULL")),(0,a.yg)("h3",{id:"example"},"example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"mysql> select array_range(10);\n+--------------------------------+\n| array_range(10)                |\n+--------------------------------+\n| [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] |\n+--------------------------------+\n\nmysql> select array_range(10,20);\n+------------------------------------------+\n| array_range(10, 20)                      |\n+------------------------------------------+\n| [10, 11, 12, 13, 14, 15, 16, 17, 18, 19] |\n+------------------------------------------+\n\nmysql> select array_range(0,20,2);\n+-------------------------------------+\n| array_range(0, 20, 2)               |\n+-------------------------------------+\n| [0, 2, 4, 6, 8, 10, 12, 14, 16, 18] |\n+-------------------------------------+\n\nmysql> select array_range(cast('2022-05-15 12:00:00' as datetimev2(0)), cast('2022-05-17 12:00:00' as datetimev2(0))) AS array_range_default;\n+------------------------------------------------+\n| array_range_default                            |\n+------------------------------------------------+\n| [\"2022-05-15 12:00:00\", \"2022-05-16 12:00:00\"] |\n+------------------------------------------------+\n\nmysql> select array_range(cast('2019-05-15 12:00:00' as datetimev2(0)), cast('2022-05-17 12:00:00' as datetimev2(0)), interval 2 year) as array_range_2_year;\n+------------------------------------------------+\n| array_range_2_year                             |\n+------------------------------------------------+\n| [\"2019-05-15 12:00:00\", \"2021-05-15 12:00:00\"] |\n+------------------------------------------------+\n")),(0,a.yg)("h3",{id:"keywords"},"keywords"),(0,a.yg)("p",null,"ARRAY, RANGE, ARRAY_RANGE"))}p.isMDXComponent=!0}}]);