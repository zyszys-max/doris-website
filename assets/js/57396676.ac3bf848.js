"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[982444],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>y});var r=t(296540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),g=s(t),d=a,y=g["".concat(c,".").concat(d)]||g[d]||p[d]||i;return t?r.createElement(y,l(l({ref:n},u),{},{components:t})):r.createElement(y,l({ref:n},u))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[g]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},470785:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=t(58168),a=(t(296540),t(15680));const i={title:"Reordering Join with Leading Hint",language:"en"},l=void 0,o={unversionedId:"query-acceleration/tuning/tuning-plan/reordering-join-with-leading-hint",id:"version-2.1/query-acceleration/tuning/tuning-plan/reordering-join-with-leading-hint",title:"Reordering Join with Leading Hint",description:"\x3c!--",source:"@site/versioned_docs/version-2.1/query-acceleration/tuning/tuning-plan/reordering-join-with-leading-hint.md",sourceDirName:"query-acceleration/tuning/tuning-plan",slug:"/query-acceleration/tuning/tuning-plan/reordering-join-with-leading-hint",permalink:"/docs/query-acceleration/tuning/tuning-plan/reordering-join-with-leading-hint",draft:!1,tags:[],version:"2.1",frontMatter:{title:"Reordering Join with Leading Hint",language:"en"},sidebar:"docs",previous:{title:"Controlling Hints with CBO Rule",permalink:"/docs/query-acceleration/tuning/tuning-plan/controlling-hints-with-cbo-rule"},next:{title:"Accelerating Queries with SQL Cache",permalink:"/docs/query-acceleration/tuning/tuning-plan/accelerating-queries-with-sql-cache"}},c={},s=[{value:"Introduction",id:"introduction",level:2},{value:"Examples",id:"examples",level:2},{value:"Tuning Cases",id:"tuning-cases",level:2},{value:"Combining with ORDERED Hint",id:"combining-with-ordered-hint",level:2},{value:"Summary",id:"summary",level:2}],u={toc:s},g="wrapper";function p(e){let{components:n,...t}=e;return(0,a.yg)(g,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"introduction"},"Introduction"),(0,a.yg)("p",null,"Leading Hint is a powerful query optimization technique that allows users to guide the Doris optimizer in determining the table join order in a query plan. Proper use of Leading Hint can significantly enhance the performance of complex queries. "),(0,a.yg)("p",null,"This documentation will provide a detailed introduction on how to use Leading Hint in Doris to control the order of joins."),(0,a.yg)("admonition",{title:"Note",type:"info"},(0,a.yg)("p",{parentName:"admonition"},"For detailed usage instructions, please refer to the ",(0,a.yg)("a",{parentName:"p",href:"../../../query-acceleration/tuning/join-hint"},"Hint")," documentation.")),(0,a.yg)("h2",{id:"examples"},"Examples"),(0,a.yg)("p",null,"Here is a query example:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM t1 JOIN t2 ON t1.c1 = t2.c2;\n")),(0,a.yg)("p",null,"By default, Doris may choose t1 as the driving table. If we want to swap the join order to make t2 the driving table, we can use Leading Hint:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT /*+ LEADING(t2 t1) */ * FROM t1 JOIN t2 ON t1.c1 = t2.c2;\n")),(0,a.yg)("p",null,"To verify whether the Hint is effective, you can use the EXPLAIN command to view the query plan and validate:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"EXPLAIN SELECT /*+ LEADING(t2 t1) */ * FROM t1 JOIN t2 ON t1.c1 = t2.c2;\n")),(0,a.yg)("p",null,'In the result of EXPLAIN, there will be a "Hint log" section, showing the following:'),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Used: Indicates successfully applied ",(0,a.yg)("inlineCode",{parentName:"p"},"hint"))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Unused: Indicates unused ",(0,a.yg)("inlineCode",{parentName:"p"},"hint"))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"SyntaxError: Indicates ",(0,a.yg)("inlineCode",{parentName:"p"},"hint")," with syntax errors"))),(0,a.yg)("h2",{id:"tuning-cases"},"Tuning Cases"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"1. Left-Deep Tree (Default Behavior)")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT /*+ LEADING(t1 t2 t3) */ *   \nFROM t1 JOIN t2 ON t1.c1 = t2.c2 JOIN t3 ON t2.c2 = t3.c3;\n")),(0,a.yg)("p",null,"Tree Structure:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"      join  \n     /    \\  \n   join    t3  \n  /    \\  \nt1      t2\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"2. Right-Deep Tree")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT /*+ LEADING(t1 {t2 t3}) */ *   \nFROM t1 JOIN t2 ON t1.c1 = t2.c2 JOIN t3 ON t2.c2 = t3.c3;\n")),(0,a.yg)("p",null,"Tree Structure:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"  join  \n /    \\  \nt1    join  \n     /    \\  \n    t2     t3\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"3. Bushy Tree")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT /*+ LEADING({t1 t2} {t3 t4}) */ *   \nFROM t1 JOIN t2 ON t1.c1 = t2.c2   \nJOIN t3 ON t2.c2 = t3.c3   \nJOIN t4 ON t3.c3 = t4.c4;\n")),(0,a.yg)("p",null,"Tree Structure:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"      join  \n      /    \\  \n   join    join  \n  /    \\  /    \\  \n t1    t2 t3    t4\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"4. Zig-Zag Tree")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT /*+ LEADING(t1 {t2 t3} t4) */ *   \nFROM t1 JOIN t2 ON t1.c1 = t2.c2   \nJOIN t3 ON t2.c2 = t3.c3   \nJOIN t4 ON t3.c3 = t4.c4;\n")),(0,a.yg)("p",null,"Tree Structure:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"    join  \n   /    \\  \n join    t4  \n/    \\  \nt1   join  \n    /    \\  \n   t2     t3\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"5. Special Case")),(0,a.yg)("p",null,"For non-inner joins (such as Outer Join, Semi/Anti Join), Leading Hint will automatically derive the type of each join based on the original SQL semantics. If the specified join order is incompatible with the original SQL semantics, the Hint will be ignored."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"6. Views and Subqueries")),(0,a.yg)("p",null,"Aliases of views or subqueries can be specified as a complete subtree."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT /*+ LEADING(alias t1) */ COUNT(*)   \nFROM t1 JOIN (SELECT c2 FROM t2 JOIN t3 ON t2.c2 = t3.c3) AS alias   \nON t1.c1 = alias.c2;\n")),(0,a.yg)("p",null,"Tree Structure: In this example, ",(0,a.yg)("inlineCode",{parentName:"p"},"alias")," is treated as a whole, and its internal join order is determined by the subquery itself."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"       join  \n      /    \\  \n   alias    t1  \n   /    \\  \n  t2     t3\n")),(0,a.yg)("h2",{id:"combining-with-ordered-hint"},"Combining with ORDERED Hint"),(0,a.yg)("p",null,"When both LEADING and ORDERED Hints are used, the ORDERED Hint has higher priority."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT /*+ ORDERED */ t1.c1   \nFROM t2 JOIN t1 ON t1.c1 = t2.c2 JOIN t3 ON t2.c2 = t3.c3;\n")),(0,a.yg)("p",null,"Tree Structure:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"      join  \n     /    \\  \n   join    t3  \n  /    \\  \nt2      t1\n")),(0,a.yg)("p",null,"Here, the ORDERED Hint forces the join order to strictly follow the order of table appearance in the FROM clause. Therefore, in this case, the ORDERED Hint will take effect, while the LEADING hint will be ignored."),(0,a.yg)("h2",{id:"summary"},"Summary"),(0,a.yg)("p",null,"By using Leading Hint appropriately, we can more effectively control the join order in Doris, thereby optimizing query performance. However, it should be remembered that this is an advanced feature and should be used cautiously with a thorough understanding of query characteristics and data distribution."),(0,a.yg)("p",null,"When using it, please note the following points:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Excessive dependence on Hints may lead to suboptimal execution plans. Therefore, please ensure a full understanding of query and data characteristics before use.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"When upgrading Doris versions, the effect of Leading Hint should be re-evaluated, as optimizer strategies may be adjusted.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"For complex queries, it is recommended to use the EXPLAIN command to carefully analyze the execution plan to ensure that Leading Hint can achieve the expected effect."))))}p.isMDXComponent=!0}}]);