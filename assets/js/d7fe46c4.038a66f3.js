"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[478668],{15680:(e,r,n)=>{n.d(r,{xA:()=>f,yg:()=>p});var t=n(296540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=t.createContext({}),s=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},f=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,p=u["".concat(c,".").concat(d)]||u[d]||y[d]||i;return n?t.createElement(p,o(o({ref:r},f),{},{components:n})):t.createElement(p,o({ref:r},f))}));function p(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},455277:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>y,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var t=n(58168),a=(n(296540),n(15680));const i={title:"array_difference",language:"en"},o=void 0,l={unversionedId:"sql-manual/sql-functions/array-functions/array_difference",id:"version-1.2/sql-manual/sql-functions/array-functions/array_difference",title:"array_difference",description:"\x3c!--",source:"@site/versioned_docs/version-1.2/sql-manual/sql-functions/array-functions/array_difference.md",sourceDirName:"sql-manual/sql-functions/array-functions",slug:"/sql-manual/sql-functions/array-functions/array_difference",permalink:"/docs/1.2/sql-manual/sql-functions/array-functions/array_difference",draft:!1,tags:[],version:"1.2",frontMatter:{title:"array_difference",language:"en"},sidebar:"docs",previous:{title:"array_distinct",permalink:"/docs/1.2/sql-manual/sql-functions/array-functions/array_distinct"},next:{title:"array_union",permalink:"/docs/1.2/sql-manual/sql-functions/array-functions/array_union"}},c={},s=[{value:"array_difference",id:"array_difference",level:2},{value:"description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"notice",id:"notice",level:3},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}],f={toc:s},u="wrapper";function y(e){let{components:r,...n}=e;return(0,a.yg)(u,(0,t.A)({},f,n,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"array_difference"},"array_difference"),(0,a.yg)("p",null,"array_difference"),(0,a.yg)("h3",{id:"description"},"description"),(0,a.yg)("h4",{id:"syntax"},"Syntax"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"ARRAY<T> array_difference(ARRAY<T> arr)")),(0,a.yg)("p",null,"Calculates the difference between adjacent array elements.\nReturns an array where the first element will be 0, the second is the difference between a","[1]"," - a","[0]",".\nneed notice that NULL will be return NULL"),(0,a.yg)("h3",{id:"notice"},"notice"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"Only supported in vectorized engine")),(0,a.yg)("h3",{id:"example"},"example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"mysql> select *,array_difference(k2) from array_type_table;\n+------+-----------------------------+---------------------------------+\n| k1   | k2                          | array_difference(`k2`)          |\n+------+-----------------------------+---------------------------------+\n|    0 | []                          | []                              |\n|    1 | [NULL]                      | [NULL]                          |\n|    2 | [1, 2, 3]                   | [0, 1, 1]                       |\n|    3 | [1, NULL, 3]                | [0, NULL, NULL]                 |\n|    4 | [0, 1, 2, 3, NULL, 4, 6]    | [0, 1, 1, 1, NULL, NULL, 2]     |\n|    5 | [1, 2, 3, 4, 5, 4, 3, 2, 1] | [0, 1, 1, 1, 1, -1, -1, -1, -1] |\n|    6 | [6, 7, 8]                   | [0, 1, 1]                       |\n+------+-----------------------------+---------------------------------+\n")),(0,a.yg)("h3",{id:"keywords"},"keywords"),(0,a.yg)("p",null,"ARRAY, DIFFERENCE, ARRAY_DIFFERENCE"))}y.isMDXComponent=!0}}]);