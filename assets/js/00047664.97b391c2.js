"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[865698],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>d});var a=t(296540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},y=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(t),y=r,d=m["".concat(p,".").concat(y)]||m[y]||u[y]||i;return t?a.createElement(d,o(o({ref:n},c),{},{components:t})):a.createElement(d,o({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=y;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},505304:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=t(58168),r=(t(296540),t(15680));const i={title:"Table Schema Action",language:"en"},o=void 0,l={unversionedId:"admin-manual/fe/table-schema-action",id:"version-2.0/admin-manual/fe/table-schema-action",title:"Table Schema Action",description:"\x3c!--",source:"@site/versioned_docs/version-2.0/admin-manual/fe/table-schema-action.md",sourceDirName:"admin-manual/fe",slug:"/admin-manual/fe/table-schema-action",permalink:"/docs/2.0/admin-manual/fe/table-schema-action",draft:!1,tags:[],version:"2.0",frontMatter:{title:"Table Schema Action",language:"en"},sidebar:"docs",previous:{title:"Table Row Count Action",permalink:"/docs/2.0/admin-manual/fe/table-row-count-action"},next:{title:"Upload Action",permalink:"/docs/2.0/admin-manual/fe/upload-action"}},p={},s=[{value:"Request",id:"request",level:2},{value:"Description",id:"description",level:2},{value:"Path parameters",id:"path-parameters",level:2},{value:"Query parameters",id:"query-parameters",level:2},{value:"Request body",id:"request-body",level:2},{value:"Response",id:"response",level:2},{value:"Examples",id:"examples",level:2}],c={toc:s},m="wrapper";function u(e){let{components:n,...t}=e;return(0,r.yg)(m,(0,a.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"table-schema-action"},"Table Schema Action"),(0,r.yg)("h2",{id:"request"},"Request"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"GET /api/<db>/<table>/_schema")),(0,r.yg)("h2",{id:"description"},"Description"),(0,r.yg)("p",null,"Used to obtain the table structure information of the specified table. This interface is currently used in Spark/Flink Doris Connector.  obtains Doris table structure information."),(0,r.yg)("h2",{id:"path-parameters"},"Path parameters"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"<db>")),(0,r.yg)("p",{parentName:"li"},"  Specify database")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"<table>")),(0,r.yg)("p",{parentName:"li"},"  Specify table"))),(0,r.yg)("h2",{id:"query-parameters"},"Query parameters"),(0,r.yg)("p",null,"None"),(0,r.yg)("h2",{id:"request-body"},"Request body"),(0,r.yg)("p",null,"None"),(0,r.yg)("h2",{id:"response"},"Response"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"The http interface returns as follows:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'{\n    "msg": "success",\n    "code": 0,\n    "data": {\n        "properties": [{\n            "type": "INT",\n            "name": "k1",\n            "comment": "",\n            "aggregation_type":""\n        }, {\n            "type": "INT",\n            "name": "k2",\n            "comment": "",\n            "aggregation_type":"MAX"\n        }],\n        "keysType":UNIQUE_KEYS,\n        "status": 200\n    },\n    "count": 0\n}\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"The http v2 interface returns as follows:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'{\n    "msg": "success",\n    "code": 0,\n    "data": {\n        "properties": [{\n            "type": "INT",\n            "name": "k1",\n            "comment": ""\n        }, {\n            "type": "INT",\n            "name": "k2",\n            "comment": ""\n        }],\n        "keysType":UNIQUE_KEYS,\n        "status": 200\n    },\n    "count": 0\n}\n')),(0,r.yg)("p",null,"Note: The difference is that the ",(0,r.yg)("inlineCode",{parentName:"p"},"http")," method returns more ",(0,r.yg)("inlineCode",{parentName:"p"},"aggregation_type")," fields than the ",(0,r.yg)("inlineCode",{parentName:"p"},"http v2")," method. The ",(0,r.yg)("inlineCode",{parentName:"p"},"http v2")," is enabled by setting ",(0,r.yg)("inlineCode",{parentName:"p"},"enable_http_server_v2"),". For detailed parameter descriptions, see ",(0,r.yg)("a",{parentName:"p",href:"../config/fe-config"},"fe parameter settings")),(0,r.yg)("h2",{id:"examples"},"Examples"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Get the table structure information of the specified table via http interface."),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'GET /api/db1/tbl1/_schema\n\nResponse:\n{\n    "msg": "success",\n    "code": 0,\n    "data": {\n        "properties": [{\n            "type": "INT",\n            "name": "k1",\n            "comment": "",\n            "aggregation_type":""\n        }, {\n            "type": "INT",\n            "name": "k2",\n            "comment": "",\n            "aggregation_type":"MAX"\n        }],\n        "keysType":UNIQUE_KEYS,\n        "status": 200\n    },\n    "count": 0\n}\n'))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Get the table structure information of the specified table via http v2 interface."),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'GET /api/db1/tbl1/_schema\n\nResponse:\n{\n    "msg": "success",\n    "code": 0,\n    "data": {\n        "properties": [{\n            "type": "INT",\n            "name": "k1",\n            "comment": ""\n        }, {\n            "type": "INT",\n            "name": "k2",\n            "comment": ""\n        }],\n        "keysType":UNIQUE_KEYS,\n        "status": 200\n    },\n    "count": 0\n}\n')))))}u.isMDXComponent=!0}}]);