"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[176778],{15680:(t,e,n)=>{n.d(e,{xA:()=>m,yg:()=>b});var r=n(296540);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var l=r.createContext({}),p=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},m=function(t){var e=p(t.components);return r.createElement(l.Provider,{value:e},t.children)},c="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,l=t.parentName,m=s(t,["components","mdxType","originalType","parentName"]),c=p(n),f=i,b=c["".concat(l,".").concat(f)]||c[f]||u[f]||a;return n?r.createElement(b,o(o({ref:e},m),{},{components:n})):r.createElement(b,o({ref:e},m))}));function b(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,o=new Array(a);o[0]=f;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[c]="string"==typeof t?t:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},288244:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(58168),i=(n(296540),n(15680));const a={title:"bitmap_from_string",language:"en"},o=void 0,s={unversionedId:"sql-manual/sql-functions/bitmap-functions/bitmap_from_string",id:"version-1.2/sql-manual/sql-functions/bitmap-functions/bitmap_from_string",title:"bitmap_from_string",description:"\x3c!--",source:"@site/versioned_docs/version-1.2/sql-manual/sql-functions/bitmap-functions/bitmap_from_string.md",sourceDirName:"sql-manual/sql-functions/bitmap-functions",slug:"/sql-manual/sql-functions/bitmap-functions/bitmap_from_string",permalink:"/docs/1.2/sql-manual/sql-functions/bitmap-functions/bitmap_from_string",draft:!1,tags:[],version:"1.2",frontMatter:{title:"bitmap_from_string",language:"en"},sidebar:"docs",previous:{title:"bitmap_hash",permalink:"/docs/1.2/sql-manual/sql-functions/bitmap-functions/bitmap_hash"},next:{title:"bitmap_to_string",permalink:"/docs/1.2/sql-manual/sql-functions/bitmap-functions/bitmap_to_string"}},l={},p=[{value:"bitmap_from_string",id:"bitmap_from_string",level:2},{value:"description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}],m={toc:p},c="wrapper";function u(t){let{components:e,...n}=t;return(0,i.yg)(c,(0,r.A)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"bitmap_from_string"},"bitmap_from_string"),(0,i.yg)("h3",{id:"description"},"description"),(0,i.yg)("h4",{id:"syntax"},"Syntax"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"BITMAP BITMAP_FROM_STRING(VARCHAR input)")),(0,i.yg)("p",null,'Convert a string into a bitmap. The input string should be a comma separated unsigned bigint (ranging from 0 to 18446744073709551615).\nFor example: input string "0, 1, 2" will be converted to a Bitmap with bit 0, 1, 2 set.\nIf input string is invalid, return NULL.'),(0,i.yg)("h3",{id:"example"},"example"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"mysql> select bitmap_to_string(bitmap_empty());\n+----------------------------------+\n| bitmap_to_string(bitmap_empty()) |\n+----------------------------------+\n|                                  |\n+----------------------------------+\n\nmysql> select bitmap_to_string(bitmap_from_string(\"0, 1, 2\"));\n+-------------------------------------------------+\n| bitmap_to_string(bitmap_from_string('0, 1, 2')) |\n+-------------------------------------------------+\n| 0,1,2                                           |\n+-------------------------------------------------+\n\nmysql> select bitmap_from_string(\"-1, 0, 1, 2\");\n+-----------------------------------+\n| bitmap_from_string('-1, 0, 1, 2') |\n+-----------------------------------+\n| NULL                              |\n+-----------------------------------+\n\nmysql> select bitmap_to_string(bitmap_from_string(\"0, 1, 18446744073709551615\"));\n+--------------------------------------------------------------------+\n| bitmap_to_string(bitmap_from_string('0, 1, 18446744073709551615')) |\n+--------------------------------------------------------------------+\n| 0,1,18446744073709551615                                           |\n+--------------------------------------------------------------------+\n")),(0,i.yg)("h3",{id:"keywords"},"keywords"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"BITMAP_FROM_STRING,BITMAP\n")))}u.isMDXComponent=!0}}]);