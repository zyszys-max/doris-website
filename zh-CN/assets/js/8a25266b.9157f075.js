"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[222821],{15680:(n,e,t)=>{t.d(e,{xA:()=>p,yg:()=>u});var i=t(296540);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function r(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,i,a=function(n,e){if(null==n)return{};var t,i,a={},l=Object.keys(n);for(i=0;i<l.length;i++)t=l[i],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(i=0;i<l.length;i++)t=l[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var o=i.createContext({}),c=function(n){var e=i.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):r(r({},e),n)),t},p=function(n){var e=c(n.components);return i.createElement(o.Provider,{value:e},n.children)},y="mdxType",g={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},h=i.forwardRef((function(n,e){var t=n.components,a=n.mdxType,l=n.originalType,o=n.parentName,p=s(n,["components","mdxType","originalType","parentName"]),y=c(t),h=a,u=y["".concat(o,".").concat(h)]||y[h]||g[h]||l;return t?i.createElement(u,r(r({ref:e},p),{},{components:t})):i.createElement(u,r({ref:e},p))}));function u(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var l=t.length,r=new Array(l);r[0]=h;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=n,s[y]="string"==typeof n?n:a,r[1]=s;for(var c=2;c<l;c++)r[c]=t[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}h.displayName="MDXCreateElement"},566695:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>g,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var i=t(58168),a=(t(296540),t(15680));const l={title:"Hint",language:"zh-CN"},r=void 0,s={unversionedId:"query-acceleration/tuning/join-hint",id:"query-acceleration/tuning/join-hint",title:"Hint",description:"\x3c!--",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/query-acceleration/tuning/join-hint.md",sourceDirName:"query-acceleration/tuning",slug:"/query-acceleration/tuning/join-hint",permalink:"/zh-CN/docs/dev/query-acceleration/tuning/join-hint",draft:!1,tags:[],version:"current",frontMatter:{title:"Hint",language:"zh-CN"},sidebar:"docs",previous:{title:"\u5e38\u89c1\u8c03\u4f18\u53c2\u6570",permalink:"/zh-CN/docs/dev/query-acceleration/tuning/faq"},next:{title:"Runtime Filter",permalink:"/zh-CN/docs/dev/query-acceleration/tuning/runtime-filter"}},o={},c=[{value:"Hint \u6982\u8ff0",id:"hint-\u6982\u8ff0",level:2},{value:"LeadingHint \u4f7f\u7528\u8bf4\u660e",id:"leadinghint-\u4f7f\u7528\u8bf4\u660e",level:2},{value:"\u57fa\u672c\u8bed\u6cd5",id:"\u57fa\u672c\u8bed\u6cd5",level:3},{value:"\u57fa\u672c\u7528\u4f8b",id:"\u57fa\u672c\u7528\u4f8b",level:3},{value:"\u6269\u5c55\u573a\u666f",id:"\u6269\u5c55\u573a\u666f",level:3},{value:"OrderedHint \u4f7f\u7528\u8bf4\u660e",id:"orderedhint-\u4f7f\u7528\u8bf4\u660e",level:2},{value:"DistrbuteHint \u4f7f\u7528\u8bf4\u660e",id:"distrbutehint-\u4f7f\u7528\u8bf4\u660e",level:2},{value:"\u9644\u5f55",id:"\u9644\u5f55",level:2},{value:"1 Hint Log",id:"1-hint-log",level:3}],p={toc:c},y="wrapper";function g(n){let{components:e,...t}=n;return(0,a.yg)(y,(0,i.A)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"\u6570\u636e\u5e93 Hint \u662f\u4e00\u79cd\u6570\u636e\u5e93\u67e5\u8be2\u4f18\u5316\u6280\u672f\uff0c\u7528\u4e8e\u6307\u5bfc\u6570\u636e\u5e93\u67e5\u8be2\u4f18\u5316\u5668\u5982\u4f55\u6267\u884c\u7279\u5b9a\u7684\u67e5\u8be2\u3002\u901a\u8fc7\u63d0\u4f9b Hint\uff0c\u7528\u6237\u53ef\u4ee5\u5bf9\u67e5\u8be2\u4f18\u5316\u5668\u7684\u9ed8\u8ba4\u884c\u4e3a\u8fdb\u884c\u5fae\u8c03\uff0c\u4ee5\u671f\u671b\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u6216\u6ee1\u8db3\u7279\u5b9a\u9700\u6c42\u3002"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Hint \u4f5c\u7528\uff1a")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"\u6027\u80fd\u4f18\u5316"),"\uff1a\u901a\u8fc7 Hint\uff0c\u53ef\u4ee5\u5f71\u54cd\u67e5\u8be2\u4f18\u5316\u5668\u7684\u6267\u884c\u8ba1\u5212\uff0c\u4ece\u800c\u63d0\u5347\u67e5\u8be2\u6027\u80fd\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"\u63a7\u5236\u6267\u884c\u8ba1\u5212"),"\uff1a\u53ef\u4ee5\u6307\u5b9a\u4f7f\u7528\u8fde\u63a5\u65b9\u6cd5\u3001\u6392\u5e8f\u65b9\u6cd5\u7b49\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"\u8c03\u8bd5\u548c\u6d4b\u8bd5"),"\uff1a\u5728\u8c03\u8bd5\u548c\u6d4b\u8bd5\u67e5\u8be2\u6027\u80fd\u65f6\uff0cHint \u53ef\u4ee5\u5e2e\u52a9\u786e\u5b9a\u95ee\u9898\u7684\u6839\u6e90\u3002"))),(0,a.yg)("h2",{id:"hint-\u6982\u8ff0"},"Hint \u6982\u8ff0"),(0,a.yg)("p",null,'\u5728\u6570\u636e\u5e93\u4e2d\uff0c"Hint" \u662f\u4e00\u79cd\u6307\u4ee4\uff0c\u7528\u4e8e\u6307\u5bfc\u67e5\u8be2\u4f18\u5316\u5668\u5236\u5b9a\u6267\u884c\u8ba1\u5212\u3002\u901a\u8fc7\u5728 SQL \u8bed\u53e5\u4e2d\u5d4c\u5165 Hint\uff0c\u53ef\u4ee5\u5f71\u54cd\u4f18\u5316\u5668\u7684\u51b3\u7b56\uff0c\u4ece\u800c\u9009\u62e9\u671f\u671b\u7684\u6267\u884c\u8def\u5f84\u3002'),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 Hint \u7684\u80cc\u666f\u793a\u4f8b\uff1a")),(0,a.yg)("p",null,"\u5047\u8bbe\u6709\u4e00\u4e2a\u5305\u542b\u5927\u91cf\u6570\u636e\u7684\u8868\uff0c\u800c\u5728\u67d0\u4e9b\u7279\u5b9a\u60c5\u51b5\u4e0b\uff0c\u4f60\u4e86\u89e3\u5230\u5728\u4e00\u4e2a\u67e5\u8be2\u4e2d\uff0c\u8868\u7684\u8fde\u63a5\u987a\u5e8f\u53ef\u80fd\u4f1a\u5f71\u54cd\u67e5\u8be2\u6027\u80fd\u3002\u6b64\u65f6\uff0cLeading Hint \u5141\u8bb8\u4f60\u6307\u5b9a\u5e0c\u671b\u4f18\u5316\u5668\u9075\u5faa\u7684\u8868\u8fde\u63a5\u987a\u5e8f\u3002"),(0,a.yg)("p",null,"\u4ee5\u4e0b\u9762 SQL \u67e5\u8be2\u4e3a\u4f8b\uff1a\u82e5\u6267\u884c\u6548\u7387\u4e0d\u7406\u60f3\uff0c\u6211\u4eec\u5e0c\u671b\u8c03\u6574 join \u987a\u5e8f\uff0c\u540c\u65f6\u4e0d\u6539\u53d8\u539f\u59cb SQL\uff0c\u4ee5\u514d\u5f71\u54cd\u7528\u6237\u539f\u59cb\u573a\u666f\uff0c\u5e76\u8fbe\u5230\u8c03\u4f18\u76ee\u7684\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select * from t1 join t2 on t1.c1 = c2;\n+-------------------------------------------+\n| Explain String                            |\n+-------------------------------------------+\n| PhysicalResultSink                        |\n| --PhysicalDistribute                      |\n| ----PhysicalProject                       |\n| ------hashJoin[INNER_JOIN](t1.c1 = t2.c2) |\n| --------PhysicalOlapScan[t2]              |\n| --------PhysicalDistribute                |\n| ----------PhysicalOlapScan[t1]            |\n+-------------------------------------------+\n7 rows in set (0.06 sec)\n")),(0,a.yg)("p",null,"\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Leading Hint \u6765\u4efb\u610f\u6539\u53d8 tableA \u548c tableB \u7684 Join \u987a\u5e8f\u3002\u4f8b\u5982\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select /*+ leading(t2 t1) */ * from t1 join t2 on c1 = c2;\n+-----------------------------------------------------------------------------------------------------+\n| Explain String(Nereids Planner)                                                                     |\n+-----------------------------------------------------------------------------------------------------+\n| PhysicalResultSink                                                                                  |\n| --PhysicalDistribute                                                                                |\n| ----PhysicalProject                                                                                 |\n| ------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() build RFs:RF0 c1->[c2] |\n| --------PhysicalOlapScan[t2] apply RFs: RF0                                                         |\n| --------PhysicalDistribute                                                                          |\n| ----------PhysicalOlapScan[t1]                                                                      |\n|                                                                                                     |\n| Hint log:                                                                                           |\n| Used: leading(t2 t1)                                                                                |\n| UnUsed:                                                                                             |\n| SyntaxError:                                                                                        |\n+-----------------------------------------------------------------------------------------------------+\n12 rows in set (0.06 sec)\n")),(0,a.yg)("p",null,"\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u4f7f\u7528\u4e86 ",(0,a.yg)("inlineCode",{parentName:"p"},"/*+ leading(t2 t1) */")," \u8fd9\u7c7b Hint\u3002\u8fd9\u7c7b Hint \u4f1a\u544a\u77e5\u4f18\u5316\u5668\u5728\u6267\u884c\u8ba1\u5212\u4e2d\u4f7f\u7528\u6307\u5b9a\u8868\uff08t2\uff09\u4f5c\u4e3a\u9a71\u52a8\u8868\uff0c\u5e76\u5c06\u5176\u7f6e\u4e8e\uff08t1\uff09\u4e4b\u524d\u3002"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"\u76ee\u524d\uff0cDoris \u4e3b\u8981\u652f\u6301\u4e0e Join \u76f8\u5173\u7684 Hint \u6765\u6307\u5b9a\u8fde\u63a5\u64cd\u4f5c\u7684\u987a\u5e8f\u6216\u65b9\u5f0f\uff0c\u5305\u62ec\uff1a")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"LeadingHint\uff1a\u4e3b\u8981\u7528\u4e8e\u63a7\u5236\u8fde\u63a5\u64cd\u4f5c\u7684\u987a\u5e8f\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"OrderedHint\uff1a\u4e3b\u8981\u7528\u4e8e\u56fa\u5b9a\u8fde\u63a5\u64cd\u4f5c\u7684\u987a\u5e8f\uff0c\u53ef\u4ee5\u76f4\u63a5\u751f\u6210\u57fa\u4e8e SQL \u5199\u6cd5\u7684\u6587\u672c\u5e8f\u7684\u8fde\u63a5\u64cd\u4f5c\u3001")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"DistributeHint\uff1a\u4e3b\u8981\u7528\u4e8e\u56fa\u5b9a\u8fde\u63a5\u64cd\u4f5c\u53f3\u8868\u7684\u5206\u5e03\u5c5e\u6027\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"SetVarHint\uff1a\u4e3b\u8981\u7528\u4e8e\u8bbe\u7f6e\u5728\u5355\u6761 SQL \u91cc\u9762\u4f7f\u7528\u7684 ",(0,a.yg)("inlineCode",{parentName:"p"},"sessionVariables"),"\uff0c\u5176\u4f5c\u7528\u4ec5\u5728\u8be5\u6761 SQL \u7684\u751f\u547d\u5468\u671f\u5185\u751f\u6548\u3002"))),(0,a.yg)("p",null,"\u63a5\u4e0b\u6765\uff0c\u5c06\u8be6\u7ec6\u9610\u8ff0\u5982\u4f55\u5728 Doris \u4e2d\u4f7f\u7528\u4e0a\u8ff0\u56db\u7c7b JoinHint\u3002"),(0,a.yg)("h2",{id:"leadinghint-\u4f7f\u7528\u8bf4\u660e"},"LeadingHint \u4f7f\u7528\u8bf4\u660e"),(0,a.yg)("p",null,"Leading Hint \u662f\u4e00\u79cd\u5f3a\u5927\u7684\u67e5\u8be2\u4f18\u5316\u6280\u672f\uff0c\u5141\u8bb8\u7528\u6237\u6307\u5bfc Doris \u4f18\u5316\u5668\u786e\u5b9a\u67e5\u8be2\u8ba1\u5212\u4e2d\u7684\u8868\u8fde\u63a5\u987a\u5e8f\u3002\u6b63\u786e\u4f7f\u7528 Leading Hint \u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u590d\u6742\u67e5\u8be2\u7684\u6027\u80fd\u3002\u672c\u6587\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u5728 Doris \u4e2d\u4f7f\u7528 Leading Hint \u6765\u63a7\u5236 join \u987a\u5e8f\u3002"),(0,a.yg)("h3",{id:"\u57fa\u672c\u8bed\u6cd5"},"\u57fa\u672c\u8bed\u6cd5"),(0,a.yg)("p",null,"Leading Hint \u5141\u8bb8\u4f60\u6307\u5b9a\u5e0c\u671b\u4f18\u5316\u5668\u9075\u5faa\u7684\u8868\u8fde\u63a5\u987a\u5e8f\u3002\u5728 Doris \u91cc\u9762\uff0cLeading Hint \u7684\u57fa\u672c\u8bed\u6cd5\u5982\u4e0b\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT /*+ LEADING(tablespec [tablespec]...) */ ...\n")),(0,a.yg)("p",null,"\u5176\u4e2d\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Leading Hint \u7531 ",(0,a.yg)("inlineCode",{parentName:"p"},"/*+")," \u548c ",(0,a.yg)("inlineCode",{parentName:"p"},"*/")," \u5305\u56f4\uff0c\u5e76\u7f6e\u4e8e SQL \u8bed\u53e5\u4e2d SELECT \u7684\u6b63\u540e\u65b9\u3002")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"tablespec")," \u662f\u8868\u540d\u6216\u8868\u522b\u540d\uff0c\u81f3\u5c11\u9700\u8981\u6307\u5b9a\u4e24\u4e2a\u8868\u3002")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"\u591a\u4e2a\u8868\u4e4b\u95f4\u7528\u7a7a\u683c\u5206\u9694\u3002")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"\u53ef\u4ee5\u4f7f\u7528\u5927\u62ec\u53f7",(0,a.yg)("inlineCode",{parentName:"p"},"{}"),"\u6765\u663e\u5f0f\u5730\u6307\u5b9a Join Tree \u7684\u5f62\u72b6\u3002"))),(0,a.yg)("admonition",{title:"\u6ce8\u610f",type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"Leading Hint \u540e\u65b9\u7684 ",(0,a.yg)("inlineCode",{parentName:"p"},"/")," \u548c SELECT \u5217\u8868\u9700\u8981\u9694\u5f00\u81f3\u5c11\u4e00\u4e2a\u5206\u9694\u7b26\uff0c\u4f8b\u5982\u7a7a\u683c\u3002\u81f3\u5c11\u9700\u8981\u5199\u4e24\u4e2a\u4ee5\u4e0a\u7684\u8868\u624d\u8ba4\u4e3a\u8fd9\u4e2a Leading Hint \u662f\u5408\u7406\u7684\u3002\u4e14\u4efb\u610f\u7684 Join \u91cc\u9762\u53ef\u4ee5\u7528\u5927\u62ec\u53f7\u62ec\u8d77\u6765\uff0c\u6765\u663e\u5f0f\u5730\u6307\u5b9a Join Tree \u7684\u5f62\u72b6\u3002")),(0,a.yg)("p",null,"\u4e3e\u4f8b\u8bf4\u660e\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select /*+ leading(t2 t1) */ * from t1 join t2 on c1 = c2;\n+------------------------------------------------------------------------------+\n| Explain String(Nereids Planner)                                              |\n+------------------------------------------------------------------------------+\n| PhysicalResultSink                                                           |\n| --PhysicalDistribute[DistributionSpecGather]                                 |\n| ----PhysicalProject                                                          |\n| ------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\n| --------PhysicalOlapScan[t2]                                                 |\n| --------PhysicalDistribute[DistributionSpecHash]                             |\n| ----------PhysicalOlapScan[t1]                                               |\n|                                                                              |\n| Hint log:                                                                    |\n| Used: leading(t2 t1)                                                         |\n| UnUsed:                                                                      |\n| SyntaxError:                                                                 |\n+------------------------------------------------------------------------------+\n12 rows in set (0.01 sec)\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"1. \u5f53 Leading Hint \u4e0d\u751f\u6548\u7684\u65f6\u5019\u4f1a\u8d70\u6b63\u5e38\u7684\u6d41\u7a0b\u751f\u6210\u8ba1\u5212\uff0cEXPLAIN \u4f1a\u663e\u793a\u4f7f\u7528\u7684 Hint \u662f\u5426\u751f\u6548\uff0c\u4e3b\u8981\u5206\u4e09\u79cd\u6765\u663e\u793a\uff1a")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Used\uff1aLeading Hint \u6b63\u5e38\u751f\u6548")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Unused\uff1a\u8fd9\u91cc\u4e0d\u652f\u6301\u7684\u60c5\u51b5\u5305\u542b Leading Hint \u6307\u5b9a\u7684 join order \u4e0e\u539f SQL \u4e0d\u7b49\u4ef7\u6216\u672c\u7248\u672c\u6682\u4e0d\u652f\u6301\u7279\u6027\uff08\u8be6\u89c1\u9650\u5236\uff09")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"SyntaxError\uff1a\u6307 Leading Hint \u8bed\u6cd5\u9519\u8bef\uff0c\u5982\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u8868\u7b49"))),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"2. Leading Hint \u8bed\u6cd5\u9ed8\u8ba4\u6784\u9020\u51fa\u5de6\u6df1\u6811\uff1a")),(0,a.yg)("p",null,"\u67e5\u8be2\u8bed\u53e5\u5982\u4e0b"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-Python"},"select /leading(t1 t2 t3)/ * from t1 join t2 on... \n")),(0,a.yg)("p",null,"\u67e5\u8be2\u7ed3\u679c\u5982\u4e0b\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"      join\n     /    \\\n   join    t3\n  /    \\\n t1    t2\n\nmysql> explain shape plan select /*+ leading(t1 t2 t3) */ * from t1 join t2 on c1 = c2 join t3 on c2=c3;\n+--------------------------------------------------------------------------------+\n| Explain String(Nereids Planner)                                                |\n+--------------------------------------------------------------------------------+\n| PhysicalResultSink                                                             |\n| --PhysicalDistribute[DistributionSpecGather]                                   |\n| ----PhysicalProject                                                            |\n| ------hashJoin[INNER_JOIN] hashCondition=((t2.c2 = t3.c3)) otherCondition=()   |\n| --------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\n| ----------PhysicalOlapScan[t1]                                                 |\n| ----------PhysicalDistribute[DistributionSpecHash]                             |\n| ------------PhysicalOlapScan[t2]                                               |\n| --------PhysicalDistribute[DistributionSpecHash]                               |\n| ----------PhysicalOlapScan[t3]                                                 |\n|                                                                                |\n| Hint log:                                                                      |\n| Used: leading(t1 t2 t3)                                                        |\n| UnUsed:                                                                        |\n| SyntaxError:                                                                   |\n+--------------------------------------------------------------------------------+\n15 rows in set (0.00 sec)\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"3. \u540c\u65f6\u5141\u8bb8\u4f7f\u7528\u5927\u62ec\u53f7\u6307\u5b9a Join \u6811\u5f62\u72b6\uff1a")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select /*+ leading(t1 {t2 t3}) */ * from t1 join t2 on c1 = c2 join t3 on c2=c3;\n+----------------------------------------------------------------------------------+\n| Explain String(Nereids Planner)                                                  |\n+----------------------------------------------------------------------------------+\n| PhysicalResultSink                                                               |\n| --PhysicalDistribute[DistributionSpecGather]                                     |\n| ----PhysicalProject                                                              |\n| ------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=()     |\n| --------PhysicalOlapScan[t1]                                                     |\n| --------PhysicalDistribute[DistributionSpecHash]                                 |\n| ----------hashJoin[INNER_JOIN] hashCondition=((t2.c2 = t3.c3)) otherCondition=() |\n| ------------PhysicalOlapScan[t2]                                                 |\n| ------------PhysicalDistribute[DistributionSpecHash]                             |\n| --------------PhysicalOlapScan[t3]                                               |\n|                                                                                  |\n| Hint log:                                                                        |\n| Used: leading(t1 { t2 t3 })                                                      |\n| UnUsed:                                                                          |\n| SyntaxError:                                                                     |\n+----------------------------------------------------------------------------------+\n15 rows in set (0.02 sec)\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"4. \u5f53\u6709 View \u4f5c\u4e3a\u522b\u540d\u53c2\u4e0e JoinReorder \u7684\u65f6\u5019\u53ef\u4ee5\u6307\u5b9a\u5bf9\u5e94\u7684 View \u4f5c\u4e3a Leading Hint \u7684\u53c2\u6570\u3002\u4f8b\uff1a")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select /*+ leading(alias t1) */ count(*) from t1 join (select c2 from t2 join t3 on t2.c2 = t3.c3) as alias on t1.c1 = alias.c2;\n  +--------------------------------------------------------------------------------------+\n  | Explain String(Nereids Planner)                                                      |\n  +--------------------------------------------------------------------------------------+\n  | PhysicalResultSink                                                                   |\n  | --hashAgg[GLOBAL]                                                                    |\n  | ----PhysicalDistribute[DistributionSpecGather]                                       |\n  | ------hashAgg[LOCAL]                                                                 |\n  | --------PhysicalProject                                                              |\n  | ----------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = alias.c2)) otherCondition=()  |\n  | ------------PhysicalProject                                                          |\n  | --------------hashJoin[INNER_JOIN] hashCondition=((t2.c2 = t3.c3)) otherCondition=() |\n  | ----------------PhysicalProject                                                      |\n  | ------------------PhysicalOlapScan[t2]                                               |\n  | ----------------PhysicalDistribute[DistributionSpecHash]                             |\n  | ------------------PhysicalProject                                                    |\n  | --------------------PhysicalOlapScan[t3]                                             |\n  | ------------PhysicalDistribute[DistributionSpecHash]                                 |\n  | --------------PhysicalProject                                                        |\n  | ----------------PhysicalOlapScan[t1]                                                 |\n  |                                                                                      |\n  | Hint log:                                                                            |\n  | Used: leading(alias t1)                                                              |\n  | UnUsed:                                                                              |\n  | SyntaxError:                                                                         |\n  +--------------------------------------------------------------------------------------+\n  21 rows in set (0.06 sec)\n")),(0,a.yg)("h3",{id:"\u57fa\u672c\u7528\u4f8b"},"\u57fa\u672c\u7528\u4f8b"),(0,a.yg)("admonition",{title:"\u63d0\u793a",type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"\u5728\u63a5\u4e0b\u6765\u7684\u6848\u4f8b\u4e2d\uff0c\u5217\u547d\u540d\u548c\u8868\u547d\u540d\u76f8\u5173\uff0c\u4f8b\u5982\u5f53\u53ea\u6709 t1 \u4e2d\u6709 c1 \u5b57\u6bb5\uff0c\u4e3a\u4e86\u7b80\u5316\u4f1a\u5c06 t1.c1 \u76f4\u63a5\u5199\u6210 c1")),(0,a.yg)("p",null,"\u5efa\u8868\u8bed\u53e5\u5982\u4e0b\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"CREATE DATABASE testleading;\nUSE testleading;\n\ncreate table t1 (c1 int, c11 int) distributed by hash(c1) buckets 3 properties('replication_num' = '1');\ncreate table t2 (c2 int, c22 int) distributed by hash(c2) buckets 3 properties('replication_num' = '1');\ncreate table t3 (c3 int, c33 int) distributed by hash(c3) buckets 3 properties('replication_num' = '1');\ncreate table t4 (c4 int, c44 int) distributed by hash(c4) buckets 3 properties('replication_num' = '1');\n")),(0,a.yg)("p",null,"\u539f\u59cb plan\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select * from t1 join t2 on t1.c1 = c2;\n+-------------------------------------------+\n| Explain String                            |\n+-------------------------------------------+\n| PhysicalResultSink                        |\n| --PhysicalDistribute                      |\n| ----PhysicalProject                       |\n| ------hashJoin[INNER_JOIN](t1.c1 = t2.c2) |\n| --------PhysicalOlapScan[t2]              |\n| --------PhysicalDistribute                |\n| ----------PhysicalOlapScan[t1]            |\n+-------------------------------------------+\n7 rows in set (0.06 sec)\n")),(0,a.yg)("p",null,"\u5f53\u6211\u4eec\u9700\u8981\u4ea4\u6362 t1 \u548c t2 \u7684 join \u987a\u5e8f\u65f6\uff0c\u53ea\u9700\u5728\u524d\u9762\u52a0\u4e0a ",(0,a.yg)("inlineCode",{parentName:"p"},"leading(t2 t1)")," \u5373\u53ef\u3002\u5728\u6267\u884c ",(0,a.yg)("inlineCode",{parentName:"p"},"explain")," \u65f6\uff0c\u4f1a\u663e\u793a\u662f\u5426\u4f7f\u7528\u4e86\u8fd9\u4e2a hint\u3002\u5982\u4e0b Leading plan\uff1a",(0,a.yg)("inlineCode",{parentName:"p"},"Used")," \u8868\u793a Hint \u6b63\u5e38\u751f\u6548"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select /*+ leading(t2 t1) */ * from t1 join t2 on c1 = c2;\n+------------------------------------------------------------------------------+\n| Explain String(Nereids Planner)                                              |\n+------------------------------------------------------------------------------+\n| PhysicalResultSink                                                           |\n| --PhysicalDistribute[DistributionSpecGather]                                 |\n| ----PhysicalProject                                                          |\n| ------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\n| --------PhysicalOlapScan[t2]                                                 |\n| --------PhysicalDistribute[DistributionSpecHash]                             |\n| ----------PhysicalOlapScan[t1]                                               |\n|                                                                              |\n| Hint log:                                                                    |\n| Used: leading(t2 t1)                                                         |\n| UnUsed:                                                                      |\n| SyntaxError:                                                                 |\n+------------------------------------------------------------------------------+\n12 rows in set (0.00 sec)\n")),(0,a.yg)("p",null,"\u5982\u679c Leading Hint \u5b58\u5728\u8bed\u6cd5\u9519\u8bef\uff0c",(0,a.yg)("inlineCode",{parentName:"p"},"explain")," \u65f6\u4f1a\u5728",(0,a.yg)("inlineCode",{parentName:"p"},"SyntaxError"),"\u91cc\u663e\u793a\u76f8\u5e94\u4fe1\u606f\uff0c\u4f46\u8ba1\u5212\u4ecd\u80fd\u7167\u5e38\u751f\u6210\uff0c\u53ea\u662f\u4e0d\u4f1a\u4f7f\u7528 Leading \u800c\u5df2\u3002\u4f8b\u5982\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select /*+ leading(t2 t3) */ * from t1 join t2 on t1.c1 = c2;\n+--------------------------------------------------------+\n| Explain String                                         |\n+--------------------------------------------------------+\n| PhysicalResultSink                                     |\n| --PhysicalDistribute                                   |\n| ----PhysicalProject                                    |\n| ------hashJoin[INNER_JOIN](t1.c1 = t2.c2)              |\n| --------PhysicalOlapScan[t1]                           |\n| --------PhysicalDistribute                             |\n| ----------PhysicalOlapScan[t2]                         |\n|                                                        |\n| Used:                                                  |\n| UnUsed:                                                |\n| SyntaxError: leading(t2 t3) Msg:can not find table: t3 |\n+--------------------------------------------------------+\n11 rows in set (0.01 sec)\n")),(0,a.yg)("h3",{id:"\u6269\u5c55\u573a\u666f"},"\u6269\u5c55\u573a\u666f"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"1. \u5de6\u6df1\u6811")),(0,a.yg)("p",null,"\u4e0a\u6587\u6211\u4eec\u63d0\u53ca\uff0cDoris \u5728\u67e5\u8be2\u8bed\u53e5\u4e0d\u4f7f\u7528\u4efb\u4f55\u62ec\u53f7\u7684\u60c5\u51b5\u4e0b\uff0cLeading \u4f1a\u9ed8\u8ba4\u751f\u6210\u5de6\u6df1\u6811\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select /*+ leading(t1 t2 t3) */ * from t1 join t2 on t1.c1 = c2 join t3 on c2 = c3;\n+--------------------------------------------------------------------------------+\n| Explain String(Nereids Planner)                                                |\n+--------------------------------------------------------------------------------+\n| PhysicalResultSink                                                             |\n| --PhysicalDistribute[DistributionSpecGather]                                   |\n| ----PhysicalProject                                                            |\n| ------hashJoin[INNER_JOIN] hashCondition=((t2.c2 = t3.c3)) otherCondition=()   |\n| --------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\n| ----------PhysicalOlapScan[t1]                                                 |\n| ----------PhysicalDistribute[DistributionSpecHash]                             |\n| ------------PhysicalOlapScan[t2]                                               |\n| --------PhysicalDistribute[DistributionSpecHash]                               |\n| ----------PhysicalOlapScan[t3]                                                 |\n|                                                                                |\n| Hint log:                                                                      |\n| Used: leading(t1 t2 t3)                                                        |\n| UnUsed:                                                                        |\n| SyntaxError:                                                                   |\n+--------------------------------------------------------------------------------+\n15 rows in set (0.10 sec)\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"2. \u53f3\u6df1\u6811")),(0,a.yg)("p",null,"\u5f53\u9700\u8981\u5c06\u8ba1\u5212\u7684\u5f62\u72b6\u505a\u6210\u53f3\u6df1\u6811\u3001Bushy \u6811\u6216\u8005 zig-zag \u6811\u65f6\uff0c\u53ea\u9700\u52a0\u4e0a\u5927\u62ec\u53f7\u6765\u9650\u5236 plan \u7684\u5f62\u72b6\u5373\u53ef\uff0c\u65e0\u9700\u50cf Oracle \u4f7f\u7528 swap \u4ece\u5de6\u6df1\u6811\u4e00\u6b65\u6b65\u8c03\u6574\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select /*+ leading(t1 {t2 t3}) */ * from t1 join t2 on t1.c1 = c2 join t3 on c2 = c3;\n+-----------------------------------------------+\n| Explain String                                |\n+-----------------------------------------------+\n| PhysicalResultSink                            |\n| --PhysicalDistribute                          |\n| ----PhysicalProject                           |\n| ------hashJoin[INNER_JOIN](t1.c1 = t2.c2)     |\n| --------PhysicalOlapScan[t1]                  |\n| --------PhysicalDistribute                    |\n| ----------hashJoin[INNER_JOIN](t2.c2 = t3.c3) |\n| ------------PhysicalOlapScan[t2]              |\n| ------------PhysicalDistribute                |\n| --------------PhysicalOlapScan[t3]            |\n|                                               |\n| Used: leading(t1 { t2 t3 })                   |\n| UnUsed:                                       |\n| SyntaxError:                                  |\n+-----------------------------------------------+\n14 rows in set (0.02 sec)\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"3. Bushy \u6811")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select /*+ leading({t1 t2} {t3 t4}) */ * from t1 join t2 on t1.c1 = c2 join t3 on c2 = c3 join t4 on c3 = c4;\n+-----------------------------------------------+\n| Explain String                                |\n+-----------------------------------------------+\n| PhysicalResultSink                            |\n| --PhysicalDistribute                          |\n| ----PhysicalProject                           |\n| ------hashJoin[INNER_JOIN](t2.c2 = t3.c3)     |\n| --------hashJoin[INNER_JOIN](t1.c1 = t2.c2)   |\n| ----------PhysicalOlapScan[t1]                |\n| ----------PhysicalDistribute                  |\n| ------------PhysicalOlapScan[t2]              |\n| --------PhysicalDistribute                    |\n| ----------hashJoin[INNER_JOIN](t3.c3 = t4.c4) |\n| ------------PhysicalOlapScan[t3]              |\n| ------------PhysicalDistribute                |\n| --------------PhysicalOlapScan[t4]            |\n|                                               |\n| Used: leading({ t1 t2 } { t3 t4 })            |\n| UnUsed:                                       |\n| SyntaxError:                                  |\n+-----------------------------------------------+\n17 rows in set (0.02 sec)\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"4. Zig-Zag \u6811")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select /*+ leading(t1 {t2 t3} t4) */ * from t1 join t2 on t1.c1 = c2 join t3 on c2 = c3 join t4 on c3 = c4;\n+--------------------------------------------------------------------------------------+\n| Explain String(Nereids Planner)                                                      |\n+--------------------------------------------------------------------------------------+\n| PhysicalResultSink                                                                   |\n| --PhysicalDistribute[DistributionSpecGather]                                         |\n| ----PhysicalProject                                                                  |\n| ------hashJoin[INNER_JOIN] hashCondition=((t3.c3 = t4.c4)) otherCondition=()         |\n| --------PhysicalDistribute[DistributionSpecHash]                                     |\n| ----------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=()     |\n| ------------PhysicalOlapScan[t1]                                                     |\n| ------------PhysicalDistribute[DistributionSpecHash]                                 |\n| --------------hashJoin[INNER_JOIN] hashCondition=((t2.c2 = t3.c3)) otherCondition=() |\n| ----------------PhysicalOlapScan[t2]                                                 |\n| ----------------PhysicalDistribute[DistributionSpecHash]                             |\n| ------------------PhysicalOlapScan[t3]                                               |\n| --------PhysicalDistribute[DistributionSpecHash]                                     |\n| ----------PhysicalOlapScan[t4]                                                       |\n|                                                                                      |\n| Hint log:                                                                            |\n| Used: leading(t1 { t2 t3 } t4)                                                       |\n| UnUsed:                                                                              |\n| SyntaxError:                                                                         |\n+--------------------------------------------------------------------------------------+\n19 rows in set (0.02 sec)\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"5. Non-inner Join")),(0,a.yg)("p",null,"\u5f53\u9047\u5230\u975e inner-join\uff08\u5982 Outer Join \u6216 Semi/Anti Join\uff09\u65f6\uff0cLeading Hint \u4f1a\u6839\u636e\u539f\u59cb SQL \u8bed\u4e49\u81ea\u52a8\u63a8\u5bfc\u5404\u4e2a Join \u7684\u65b9\u5f0f\u3002\u82e5 Leading Hint \u4e0e\u539f\u59cb SQL \u8bed\u4e49\u4e0d\u540c\u6216\u65e0\u6cd5\u751f\u6210\uff0c\u5219\u4f1a\u5c06\u5176\u653e\u5165 ",(0,a.yg)("inlineCode",{parentName:"p"},"UnUsed")," \u4e2d\uff0c\u4f46\u8fd9\u5e76\u4e0d\u5f71\u54cd\u8ba1\u5212\u6b63\u5e38\u6d41\u7a0b\u7684\u751f\u6210\u3002"),(0,a.yg)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4e0d\u80fd\u4ea4\u6362\u7684\u4f8b\u5b50\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"-------- test outer join which can not swap\n-- t1 leftjoin (t2 join t3 on (P23)) on (P12) != (t1 leftjoin t2 on (P12)) join t3 on (P23)\nmysql> explain shape plan select /*+ leading(t1 {t2 t3}) */ * from t1 left join t2 on c1 = c2 join t3 on c2 = c3;\n+--------------------------------------------------------------------------------+\n| Explain String(Nereids Planner)                                                |\n+--------------------------------------------------------------------------------+\n| PhysicalResultSink                                                             |\n| --PhysicalDistribute[DistributionSpecGather]                                   |\n| ----PhysicalProject                                                            |\n| ------hashJoin[INNER_JOIN] hashCondition=((t2.c2 = t3.c3)) otherCondition=()   |\n| --------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\n| ----------PhysicalOlapScan[t1]                                                 |\n| ----------PhysicalDistribute[DistributionSpecHash]                             |\n| ------------PhysicalOlapScan[t2]                                               |\n| --------PhysicalDistribute[DistributionSpecHash]                               |\n| ----------PhysicalOlapScan[t3]                                                 |\n|                                                                                |\n| Hint log:                                                                      |\n| Used:                                                                          |\n| UnUsed: leading(t1 { t2 t3 })                                                  |\n| SyntaxError:                                                                   |\n+--------------------------------------------------------------------------------+\n15 rows in set (0.01 sec)\n")),(0,a.yg)("p",null,"\u4e0b\u9762\u662f\u4e00\u4e9b\u53ef\u4ee5\u4ea4\u6362\u7684\u4f8b\u5b50\u548c\u4e0d\u80fd\u4ea4\u6362\u7684\u4f8b\u5b50\uff0c\u8bfb\u8005\u53ef\u81ea\u884c\u9a8c\u8bc1"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"-------- test outer join which can swap\n-- (t1 leftjoin t2  on (P12)) innerjoin t3 on (P13) = (t1 innerjoin t3 on (P13)) leftjoin t2  on (P12)\nexplain shape plan select * from t1 left join t2 on c1 = c2 join t3 on c1 = c3;\nexplain shape plan select /*+ leading(t1 t3 t2) */ * from t1 left join t2 on c1 = c2 join t3 on c1 = c3;\n\n-- (t1 leftjoin t2  on (P12)) leftjoin t3 on (P13) = (t1 leftjoin t3 on (P13)) leftjoin t2  on (P12)\nexplain shape plan select * from t1 left join t2 on c1 = c2 left join t3 on c1 = c3;\nexplain shape plan select /*+ leading(t1 t3 t2) */ * from t1 left join t2 on c1 = c2 left join t3 on c1 = c3;\n\n-- (t1 leftjoin t2  on (P12)) leftjoin t3 on (P23) = t1 leftjoin (t2  leftjoin t3 on (P23)) on (P12)\nselect /*+ leading(t2 t3 t1) SWAP_INPUT(t1) */ * from t1 left join t2 on c1 = c2 left join t3 on c2 = c3;\nexplain shape plan select /*+ leading(t1 {t2 t3}) */ * from t1 left join t2 on c1 = c2 left join t3 on c2 = c3;\nexplain shape plan select /*+ leading(t1 {t2 t3}) */ * from t1 left join t2 on c1 = c2 left join t3 on c2 = c3;\n\n-------- test outer join which can not swap\n--  t1 leftjoin (t2  join t3 on (P23)) on (P12) != (t1 leftjoin t2  on (P12)) join t3 on (P23)\n-- eliminated to inner join\nexplain shape plan select /*+ leading(t1 {t2 t3}) */ * from t1 left join t2 on c1 = c2 join t3 on c2 = c3;\nexplain graph select /*+ leading(t1 t2 t3) */ * from t1 left join (select * from t2 join t3 on c2 = c3) on c1 = c2;\n\n-- test semi join\nexplain shape plan select * from t1 where c1 in (select c2 from t2);\nexplain shape plan select /*+ leading(t2 t1) */ * from t1 where c1 in (select c2 from t2);\n\n-- test anti join\nexplain shape plan select * from t1 where exists (select c2 from t2);\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"6. View")),(0,a.yg)("p",null,"\u5728\u6d89\u53ca\u522b\u540d\uff08Alias\uff09\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u522b\u540d\u4f5c\u4e3a\u4e00\u4e2a\u5b8c\u6574\u72ec\u7acb\u7684\u5b50\u6811\u8fdb\u884c\u6307\u5b9a\uff0c\u5e76\u5728\u8fd9\u4e9b\u5b50\u6811\u5185\u90e8\u6839\u636e\u6587\u672c\u5e8f\u751f\u6210 Join \u987a\u5e8f"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql>  explain shape plan select /*+ leading(alias t1) */ count(*) from t1 join (select c2 from t2 join t3 on t2.c2 = t3.c3) as alias on t1.c1 = alias.c2;\n+--------------------------------------------------------------------------------------+\n| Explain String(Nereids Planner)                                                      |\n+--------------------------------------------------------------------------------------+\n| PhysicalResultSink                                                                   |\n| --hashAgg[GLOBAL]                                                                    |\n| ----PhysicalDistribute[DistributionSpecGather]                                       |\n| ------hashAgg[LOCAL]                                                                 |\n| --------PhysicalProject                                                              |\n| ----------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = alias.c2)) otherCondition=()  |\n| ------------PhysicalProject                                                          |\n| --------------hashJoin[INNER_JOIN] hashCondition=((t2.c2 = t3.c3)) otherCondition=() |\n| ----------------PhysicalProject                                                      |\n| ------------------PhysicalOlapScan[t2]                                               |\n| ----------------PhysicalDistribute[DistributionSpecHash]                             |\n| ------------------PhysicalProject                                                    |\n| --------------------PhysicalOlapScan[t3]                                             |\n| ------------PhysicalDistribute[DistributionSpecHash]                                 |\n| --------------PhysicalProject                                                        |\n| ----------------PhysicalOlapScan[t1]                                                 |\n|                                                                                      |\n| Hint log:                                                                            |\n| Used: leading(alias t1)                                                              |\n| UnUsed:                                                                              |\n| SyntaxError:                                                                         |\n+--------------------------------------------------------------------------------------+\n21 rows in set (0.02 sec)\n")),(0,a.yg)("h2",{id:"orderedhint-\u4f7f\u7528\u8bf4\u660e"},"OrderedHint \u4f7f\u7528\u8bf4\u660e"),(0,a.yg)("p",null,"OrderedHint \u7528\u4e8e\u56fa\u5b9a Join Tree \u7684\u5f62\u72b6\uff0c\u4f7f\u5176\u6309\u7167\u67e5\u8be2\u4e2d\u8868\u7684\u6587\u672c\u987a\u5e8f\u8fdb\u884c\u663e\u793a\u548c\u6267\u884c\u3002\u8fd9\u5728\u9700\u8981\u7cbe\u786e\u63a7\u5236\u67e5\u8be2\u8ba1\u5212\u65f6\u7279\u522b\u6709\u7528\u3002"),(0,a.yg)("p",null,"OrderedHint \u7684\u8bed\u6cd5\u4e3a ",(0,a.yg)("inlineCode",{parentName:"p"},"/*+ ORDERED */"),"\uff0c\u5b83\u5e94\u8be5\u88ab\u653e\u7f6e\u5728 ",(0,a.yg)("inlineCode",{parentName:"p"},"SELECT")," \u8bed\u53e5\u4e2d\u7684 ",(0,a.yg)("inlineCode",{parentName:"p"},"SELECT")," \u5173\u952e\u5b57\u4e4b\u540e\uff0c\u7d27\u63a5\u7740\u67e5\u8be2\u7684\u5176\u4f59\u90e8\u5206\u3002"),(0,a.yg)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 OrderedHint \u7684\u793a\u4f8b\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select /*+ ORDERED */ t1.c1 from t2 join t1 on t1.c1 = t2.c2 join t3 on c2 = c3;\n+--------------------------------------------------------------------------------+\n| Explain String(Nereids Planner)                                                |\n+--------------------------------------------------------------------------------+\n| PhysicalResultSink                                                             |\n| --PhysicalDistribute[DistributionSpecGather]                                   |\n| ----PhysicalProject                                                            |\n| ------hashJoin[INNER_JOIN] hashCondition=((t2.c2 = t3.c3)) otherCondition=()   |\n| --------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\n| ----------PhysicalProject                                                      |\n| ------------PhysicalOlapScan[t2]                                               |\n| ----------PhysicalDistribute[DistributionSpecHash]                             |\n| ------------PhysicalProject                                                    |\n| --------------PhysicalOlapScan[t1]                                             |\n| --------PhysicalDistribute[DistributionSpecHash]                               |\n| ----------PhysicalProject                                                      |\n| ------------PhysicalOlapScan[t3]                                               |\n|                                                                                |\n| Hint log:                                                                      |\n| Used: ORDERED                                                                  |\n| UnUsed:                                                                        |\n| SyntaxError:                                                                   |\n+--------------------------------------------------------------------------------+\n18 rows in set (0.02 sec)\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"\u4e0e LeadingHint \u7684\u5173\u7cfb")),(0,a.yg)("p",null,"\u5f53 OrderedHint \u548c LeadingHint \u540c\u65f6\u4f7f\u7528\u65f6\uff0cOrderedHint \u5c06\u4f18\u5148\u4e8e LeadingHint\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5373\u4f7f\u6307\u5b9a\u4e86 LeadingHint\uff0c\u5982\u679c\u540c\u65f6\u5b58\u5728 OrderedHint\uff0c\u67e5\u8be2\u8ba1\u5212\u5c06\u6309\u7167 OrderedHint \u7684\u89c4\u5219\u6765\u6267\u884c\uff0c\u800c LeadingHint \u5c06\u88ab\u5ffd\u7565\u3002"),(0,a.yg)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u5c55\u793a\u4e86\u5f53\u4e24\u8005\u540c\u65f6\u4f7f\u7528\u65f6\u7684\u60c5\u51b5\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select /*+ ORDERED LEADING(t1 t2 t3) */ t1.c1 from t2 join t1 on t1.c1 = t2.c2 join t3 on c2 = c3;\n  +--------------------------------------------------------------------------------+\n  | Explain String(Nereids Planner)                                                |\n  +--------------------------------------------------------------------------------+\n  | PhysicalResultSink                                                             |\n  | --PhysicalDistribute[DistributionSpecGather]                                   |\n  | ----PhysicalProject                                                            |\n  | ------hashJoin[INNER_JOIN] hashCondition=((t2.c2 = t3.c3)) otherCondition=()   |\n  | --------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\n  | ----------PhysicalProject                                                      |\n  | ------------PhysicalOlapScan[t2]                                               |\n  | ----------PhysicalDistribute[DistributionSpecHash]                             |\n  | ------------PhysicalProject                                                    |\n  | --------------PhysicalOlapScan[t1]                                             |\n  | --------PhysicalDistribute[DistributionSpecHash]                               |\n  | ----------PhysicalProject                                                      |\n  | ------------PhysicalOlapScan[t3]                                               |\n  |                                                                                |\n  | Hint log:                                                                      |\n  | Used: ORDERED                                                                  |\n  | UnUsed: leading(t1 t2 t3)                                                      |\n  | SyntaxError:                                                                   |\n  +--------------------------------------------------------------------------------+\n  18 rows in set (0.02 sec)\n")),(0,a.yg)("h2",{id:"distrbutehint-\u4f7f\u7528\u8bf4\u660e"},"DistrbuteHint \u4f7f\u7528\u8bf4\u660e"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"\u76ee\u524d\u53ea\u80fd\u6307\u5b9a\u53f3\u8868\u7684 Distribute Type\uff0c\u800c\u4e14\u53ea\u6709 ",(0,a.yg)("inlineCode",{parentName:"p"},"[shuffle]")," \u548c ",(0,a.yg)("inlineCode",{parentName:"p"},"[broadcast]")," \u4e24\u79cd\u3002\u9700\u5199\u5728 Join \u53f3\u8868\u524d\u9762\uff0c\u4e14\u5141\u8bb8\u4f7f\u7528\u4e2d\u62ec\u53f7 ",(0,a.yg)("inlineCode",{parentName:"p"},"[]")," \u548c ",(0,a.yg)("inlineCode",{parentName:"p"},"/"),(0,a.yg)("em",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"em"},"+")),(0,a.yg)("inlineCode",{parentName:"p"},"/"),"\u4e24\u79cd\u5199\u6cd5\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"\u76ee\u524d\u80fd\u4f7f\u7528\u4efb\u610f\u4e2a DistributeHint\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"\u5f53\u9047\u5230\u65e0\u6cd5\u6b63\u786e\u751f\u6210\u8ba1\u5212\u7684 DistributeHint \u65f6\uff0c\u7cfb\u7edf\u4e0d\u4f1a\u663e\u793a\u9519\u8bef\uff0c\u4f1a\u6309\u6700\u5927\u52aa\u529b\u539f\u5219\u751f\u6548\uff0c\u6700\u7ec8\u4ee5 EXPLAIN \u663e\u793a\u7684 Distribute \u65b9\u5f0f\u4e3a\u51c6\u3002"))),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"1. \u4e0e OrderedHint \u6df7\u7528")),(0,a.yg)("p",null,"\u5229\u7528\u6587\u672c\u5e8f\u628a Join \u987a\u5e8f\u56fa\u5b9a\u4e0b\u6765\uff0c\u7136\u540e\u518d\u6307\u5b9a\u76f8\u5e94\u7684 Join \u91cc\u9762\u6211\u4eec\u9884\u671f\u4f7f\u7528\u7684 Distribute \u65b9\u5f0f\u3002\u4f8b\u5982\uff1a"),(0,a.yg)("p",null,"\u4f7f\u7528\u524d\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select count(*) from t1 join t2 on t1.c1 = t2.c2;\n  +----------------------------------------------------------------------------------+\n  | Explain String(Nereids Planner)                                                  |\n  +----------------------------------------------------------------------------------+\n  | PhysicalResultSink                                                               |\n  | --hashAgg[GLOBAL]                                                                |\n  | ----PhysicalDistribute[DistributionSpecGather]                                   |\n  | ------hashAgg[LOCAL]                                                             |\n  | --------PhysicalProject                                                          |\n  | ----------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\n  | ------------PhysicalProject                                                      |\n  | --------------PhysicalOlapScan[t1]                                               |\n  | ------------PhysicalDistribute[DistributionSpecHash]                             |\n  | --------------PhysicalProject                                                    |\n  | ----------------PhysicalOlapScan[t2]                                             |\n  +----------------------------------------------------------------------------------+\n  11 rows in set (0.01 sec)\n")),(0,a.yg)("p",null,"\u4f7f\u7528\u540e\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"mysql> explain shape plan select /*+ ordered */ count(*) from t2 join[broadcast] t1 on t1.c1 = t2.c2;\n+----------------------------------------------------------------------------------+\n| Explain String(Nereids Planner)                                                  |\n+----------------------------------------------------------------------------------+\n| PhysicalResultSink                                                               |\n| --hashAgg[GLOBAL]                                                                |\n| ----PhysicalDistribute[DistributionSpecGather]                                   |\n| ------hashAgg[LOCAL]                                                             |\n| --------PhysicalProject                                                          |\n| ----------hashJoin[INNER_JOIN] hashCondition=((t1.c1 = t2.c2)) otherCondition=() |\n| ------------PhysicalProject                                                      |\n| --------------PhysicalOlapScan[t2]                                               |\n| ------------PhysicalDistribute[DistributionSpecReplicated]                       |\n| --------------PhysicalProject                                                    |\n| ----------------PhysicalOlapScan[t1]                                             |\n|                                                                                  |\n| Hint log:                                                                        |\n| Used: ORDERED                                                                    |\n| UnUsed:                                                                          |\n| SyntaxError:                                                                     |\n+----------------------------------------------------------------------------------+\n16 rows in set (0.01 sec)\n")),(0,a.yg)("p",null,"Explain Shape Plan \u91cc\u9762\u4f1a\u663e\u793a Distribute \u7b97\u5b50\u76f8\u5173\u7684\u4fe1\u606f\u3002\u5176\u4e2d\uff1a"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"DistributionSpecReplicated \u8868\u793a\u8be5\u7b97\u5b50\u5c06\u5bf9\u5e94\u7684\u6570\u636e\u590d\u5236\u5230\u6240\u6709 BE \u8282\u70b9\uff1b")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"DistributionSpecGather \u8868\u793a\u5c06\u6570\u636e Gather \u5230 FE \u8282\u70b9\uff1b")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"DistributionSpecHash \u8868\u793a\u5c06\u6570\u636e\u6309\u7167\u7279\u5b9a\u7684 hashKey \u4ee5\u53ca\u7b97\u6cd5\u6253\u6563\u5230\u4e0d\u540c\u7684 BE \u8282\u70b9\u3002"))),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"2. \u4e0e LeadingHint \u6df7\u7528")),(0,a.yg)("p",null,"\u5728\u7f16\u5199 SQL \u67e5\u8be2\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4f7f\u7528 ",(0,a.yg)("inlineCode",{parentName:"p"},"LEADING")," \u63d0\u793a\u7684\u540c\u65f6\uff0c\u4e3a\u6bcf\u4e2a ",(0,a.yg)("inlineCode",{parentName:"p"},"JOIN")," \u64cd\u4f5c\u6307\u5b9a\u76f8\u5e94\u7684 ",(0,a.yg)("inlineCode",{parentName:"p"},"DISTRIBUTE")," \u65b9\u5f0f\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u5728 SQL \u67e5\u8be2\u4e2d\u6df7\u5408\u4f7f\u7528 ",(0,a.yg)("inlineCode",{parentName:"p"},"DistributeHint")," \u548c ",(0,a.yg)("inlineCode",{parentName:"p"},"LeadingHint"),"\u3002"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"explain shape plan\n    select \n        nation,\n        o_year,\n        sum(amount) as sum_profit\n    from\n        (\n            select\n                /*+ leading(orders shuffle {lineitem shuffle part} shuffle {supplier broadcast nation} shuffle partsupp) */\n                n_name as nation,\n                extract(year from o_orderdate) as o_year,\n                l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount\n            from\n                part,\n                supplier,\n                lineitem,\n                partsupp,\n                orders,\n                nation\n            where\n                s_suppkey = l_suppkey\n                and ps_suppkey = l_suppkey\n                and ps_partkey = l_partkey\n                and p_partkey = l_partkey\n                and o_orderkey = l_orderkey\n                and s_nationkey = n_nationkey\n                and p_name like '%green%'\n        ) as profit\n    group by\n        nation,\n        o_year\n    order by\n        nation,\n        o_year desc;\n")),(0,a.yg)("h2",{id:"\u9644\u5f55"},"\u9644\u5f55"),(0,a.yg)("h3",{id:"1-hint-log"},"1 Hint Log"),(0,a.yg)("p",null,"Hint Log \u4e3b\u8981\u7528\u4e8e\u5728\u6267\u884c ",(0,a.yg)("inlineCode",{parentName:"p"},"EXPLAIN")," \u65f6\u663e\u793a\u63d0\u793a\u662f\u5426\u751f\u6548\u3002\u5176\u663e\u793a\u4f4d\u7f6e\u901a\u5e38\u4f4d\u4e8e ",(0,a.yg)("inlineCode",{parentName:"p"},"EXPLAIN")," \u8f93\u51fa\u7684\u6700\u4e0b\u65b9\u3002"),(0,a.yg)("p",null,"Hint Log \u5206\u4e3a\u4e09\u4e2a\u72b6\u6001\uff1a"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"+---------------------------------+\n| Hint log:                       |\n| Used:                           |\n| UnUsed:                         |\n| SyntaxError:                    |\n+---------------------------------+\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"Used"),"\uff1a\u8868\u660e\u8be5\u63d0\u793a\u751f\u6548\u4e86\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"UnUsed")," \u548c ",(0,a.yg)("inlineCode",{parentName:"p"},"SyntaxError"),"\uff1a\u90fd\u8868\u660e\u8be5\u63d0\u793a\u672a\u751f\u6548\u3002\u4f46 ",(0,a.yg)("inlineCode",{parentName:"p"},"SyntaxError")," \u8868\u793a\u63d0\u793a\u8bed\u6cd5\u4f7f\u7528\u9519\u8bef\u6216\u8be5\u8bed\u6cd5\u4e0d\u652f\u6301\uff0c\u540c\u65f6\u4f1a\u9644\u52a0\u4e0d\u652f\u6301\u7684\u539f\u56e0\u4fe1\u606f\u3002"))))}g.isMDXComponent=!0}}]);