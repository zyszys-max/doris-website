"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[164671],{15680:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>y});var a=n(296540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},g=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,y=u["".concat(p,".").concat(m)]||u[m]||d[m]||l;return n?a.createElement(y,i(i({ref:t},g),{},{components:n})):a.createElement(y,i({ref:t},g))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},893430:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(58168),r=(n(296540),n(15680));const l={title:"Fluent Bit Doris Output Plugin",language:"zh-CN"},i=void 0,o={unversionedId:"ecosystem/fluentbit",id:"version-2.1/ecosystem/fluentbit",title:"Fluent Bit Doris Output Plugin",description:"\x3c!--",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/version-2.1/ecosystem/fluentbit.md",sourceDirName:"ecosystem",slug:"/ecosystem/fluentbit",permalink:"/zh-CN/docs/ecosystem/fluentbit",draft:!1,tags:[],version:"2.1",frontMatter:{title:"Fluent Bit Doris Output Plugin",language:"zh-CN"},sidebar:"ecosystem",previous:{title:"Beats Doris Output Plugin",permalink:"/zh-CN/docs/ecosystem/beats"},next:{title:"AutoMQ Load",permalink:"/zh-CN/docs/ecosystem/automq-load"}},p={},s=[{value:"\u5b89\u88c5\uff08alpha \u7248\u672c\uff09",id:"\u5b89\u88c5alpha-\u7248\u672c",level:2},{value:"\u4ece\u5b98\u7f51\u4e0b\u8f7d",id:"\u4ece\u5b98\u7f51\u4e0b\u8f7d",level:3},{value:"\u4ece\u6e90\u7801\u7f16\u8bd1",id:"\u4ece\u6e90\u7801\u7f16\u8bd1",level:3},{value:"\u53c2\u6570\u914d\u7f6e",id:"\u53c2\u6570\u914d\u7f6e",level:2},{value:"\u4f7f\u7528\u793a\u4f8b",id:"\u4f7f\u7528\u793a\u4f8b",level:2},{value:"TEXT \u65e5\u5fd7\u91c7\u96c6\u793a\u4f8b",id:"text-\u65e5\u5fd7\u91c7\u96c6\u793a\u4f8b",level:3},{value:"JSON \u65e5\u5fd7\u91c7\u96c6\u793a\u4f8b",id:"json-\u65e5\u5fd7\u91c7\u96c6\u793a\u4f8b",level:3}],g={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(u,(0,a.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://fluentbit.io/"},"Fluent Bit")," \u662f\u4e00\u4e2a\u5feb\u901f\u7684\u65e5\u5fd7\u5904\u7406\u5668\u548c\u8f6c\u53d1\u5668\uff0c\u5b83\u652f\u6301\u81ea\u5b9a\u4e49\u8f93\u51fa\u63d2\u4ef6\u5c06\u6570\u636e\u5199\u5165\u5b58\u50a8\u7cfb\u7edf\uff0cFluent Bit Doris Output Plugin \u662f\u8f93\u51fa\u5230 Doris \u7684\u63d2\u4ef6\u3002"),(0,r.yg)("p",null,"Fluent Bit Doris Output Plugin \u8c03\u7528 ",(0,r.yg)("a",{parentName:"p",href:"../data-operate/import/stream-load-manual.md"},"Doris Stream Load")," HTTP \u63a5\u53e3\u5c06\u6570\u636e\u5b9e\u65f6\u5199\u5165 Doris\uff0c\u63d0\u4f9b\u591a\u7ebf\u7a0b\u5e76\u53d1\uff0c\u5931\u8d25\u91cd\u8bd5\uff0c\u81ea\u5b9a\u4e49 Stream Load \u683c\u5f0f\u548c\u53c2\u6570\uff0c\u8f93\u51fa\u5199\u5165\u901f\u5ea6\u7b49\u80fd\u529b\u3002"),(0,r.yg)("p",null,"\u4f7f\u7528 Fluent Bit Doris Output Plugin \u4e3b\u8981\u6709\u4e09\u4e2a\u6b65\u9aa4\uff1a"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"\u4e0b\u8f7d\u6216\u7f16\u8bd1\u5305\u542b Doris Output Plugin \u7684 Fluent Bit \u4e8c\u8fdb\u5236\u7a0b\u5e8f"),(0,r.yg)("li",{parentName:"ol"},"\u914d\u7f6e Fluent Bit \u8f93\u51fa\u5730\u5740\u548c\u5176\u4ed6\u53c2\u6570"),(0,r.yg)("li",{parentName:"ol"},"\u542f\u52a8 Fluent Bit \u5c06\u6570\u636e\u5b9e\u65f6\u5199\u5165 Doris")),(0,r.yg)("h2",{id:"\u5b89\u88c5alpha-\u7248\u672c"},"\u5b89\u88c5\uff08alpha \u7248\u672c\uff09"),(0,r.yg)("h3",{id:"\u4ece\u5b98\u7f51\u4e0b\u8f7d"},"\u4ece\u5b98\u7f51\u4e0b\u8f7d"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://github.com/joker-star-l/fluent-bit/releases/download/v3.1.9-alpha/fluent-bit"},"https://github.com/joker-star-l/fluent-bit/releases/download/v3.1.9-alpha/fluent-bit")),(0,r.yg)("h3",{id:"\u4ece\u6e90\u7801\u7f16\u8bd1"},"\u4ece\u6e90\u7801\u7f16\u8bd1"),(0,r.yg)("p",null,"\u514b\u9686 ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/joker-star-l/fluent-bit"},"https://github.com/joker-star-l/fluent-bit")," \u7684 dev \u5206\u652f\uff0c\u5728 build/ \u76ee\u5f55\u4e0b\u6267\u884c"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"cmake -DFLB_RELEASE=ON ..\nmake\n")),(0,r.yg)("p",null,"\u7f16\u8bd1\u4ea7\u7269\u4e3a build/bin/fluent-bit\u3002"),(0,r.yg)("h2",{id:"\u53c2\u6570\u914d\u7f6e"},"\u53c2\u6570\u914d\u7f6e"),(0,r.yg)("p",null,"Fluent Bit Doris output plugin \u7684\u914d\u7f6e\u5982\u4e0b\uff1a"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"\u914d\u7f6e"),(0,r.yg)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"host")),(0,r.yg)("td",{parentName:"tr",align:null},"Stream Load HTTP host")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"port")),(0,r.yg)("td",{parentName:"tr",align:null},"Stream Load HTTP port")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"user")),(0,r.yg)("td",{parentName:"tr",align:null},"Doris \u7528\u6237\u540d\uff0c\u8be5\u7528\u6237\u9700\u8981\u6709doris\u5bf9\u5e94\u5e93\u8868\u7684\u5bfc\u5165\u6743\u9650")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"password")),(0,r.yg)("td",{parentName:"tr",align:null},"Doris \u7528\u6237\u7684\u5bc6\u7801")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"database")),(0,r.yg)("td",{parentName:"tr",align:null},"\u8981\u5199\u5165\u7684 Doris \u5e93\u540d")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"table")),(0,r.yg)("td",{parentName:"tr",align:null},"\u8981\u5199\u5165\u7684 Doris \u8868\u540d")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"label_prefix")),(0,r.yg)("td",{parentName:"tr",align:null},"Doris Stream Load Label \u524d\u7f00\uff0c\u6700\u7ec8\u751f\u6210\u7684 Label \u4e3a ",(0,r.yg)("em",{parentName:"td"},"{label_prefix}","_","{timestamp}","_","{uuid}")," \uff0c\u9ed8\u8ba4\u503c\u662f fluentbit, \u5982\u679c\u8bbe\u7f6e\u4e3a false \u5219\u4e0d\u4f1a\u6dfb\u52a0 Label")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"time_key")),(0,r.yg)("td",{parentName:"tr",align:null},"\u6570\u636e\u4e2d\u8981\u6dfb\u52a0\u7684\u65f6\u95f4\u6233\u5217\u7684\u540d\u79f0\uff0c\u9ed8\u8ba4\u503c\u662f date\uff0c \u5982\u679c\u8bbe\u7f6e\u4e3a false \u5219\u4e0d\u4f1a\u6dfb\u52a0\u8be5\u5217")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"header")),(0,r.yg)("td",{parentName:"tr",align:null},"Doris Stream Load \u7684 header \u53c2\u6570\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2a")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"log_request")),(0,r.yg)("td",{parentName:"tr",align:null},"\u65e5\u5fd7\u4e2d\u662f\u5426\u8f93\u51fa Doris Stream Load \u8bf7\u6c42\u548c\u54cd\u5e94\u5143\u6570\u636e\uff0c\u7528\u4e8e\u6392\u67e5\u95ee\u9898\uff0c\u9ed8\u8ba4\u4e3a true")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"log_progress_interval")),(0,r.yg)("td",{parentName:"tr",align:null},"\u65e5\u5fd7\u4e2d\u8f93\u51fa\u901f\u5ea6\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u662f\u79d2\uff0c\u9ed8\u8ba4\u4e3a 10\uff0c\u8bbe\u7f6e\u4e3a 0 \u53ef\u4ee5\u5173\u95ed\u8fd9\u79cd\u65e5\u5fd7")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"retry_limit")),(0,r.yg)("td",{parentName:"tr",align:null},"Doris Stream Load \u8bf7\u6c42\u5931\u8d25\u91cd\u8bd5\u6b21\u6570\uff0c\u9ed8\u8ba4\u4e3a 1, \u5982\u679c\u8bbe\u7f6e\u4e3a false \u5219\u4e0d\u9650\u5236\u91cd\u8bd5\u6b21\u6570")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"workers")),(0,r.yg)("td",{parentName:"tr",align:null},"\u6267\u884c Doris Stream Load \u7684 worker \u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a 2")))),(0,r.yg)("h2",{id:"\u4f7f\u7528\u793a\u4f8b"},"\u4f7f\u7528\u793a\u4f8b"),(0,r.yg)("h3",{id:"text-\u65e5\u5fd7\u91c7\u96c6\u793a\u4f8b"},"TEXT \u65e5\u5fd7\u91c7\u96c6\u793a\u4f8b"),(0,r.yg)("p",null,"\u8be5\u793a\u4f8b\u4ee5 Doris FE \u7684\u65e5\u5fd7\u4e3a\u4f8b\u5c55\u793a TEXT \u65e5\u5fd7\u91c7\u96c6\u3002"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"1. \u6570\u636e")),(0,r.yg)("p",null,"FE \u65e5\u5fd7\u6587\u4ef6\u4e00\u822c\u4f4d\u4e8e Doris \u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 ",(0,r.yg)("inlineCode",{parentName:"p"},"fe/log/fe.log")," \u6587\u4ef6\uff0c\u662f\u5178\u578b\u7684 Java \u7a0b\u5e8f\u65e5\u5fd7\uff0c\u5305\u62ec\u65f6\u95f4\u6233\uff0c\u65e5\u5fd7\u7ea7\u522b\uff0c\u7ebf\u7a0b\u540d\uff0c\u4ee3\u7801\u4f4d\u7f6e\uff0c\u65e5\u5fd7\u5185\u5bb9\u7b49\u5b57\u6bb5\u3002\u4e0d\u4ec5\u6709\u6b63\u5e38\u7684\u65e5\u5fd7\uff0c\u8fd8\u6709\u5e26 ",(0,r.yg)("inlineCode",{parentName:"p"},"stacktrace")," \u7684\u5f02\u5e38\u65e5\u5fd7\uff0c",(0,r.yg)("inlineCode",{parentName:"p"},"stacktrace")," \u662f\u8de8\u884c\u7684\uff0c\u65e5\u5fd7\u91c7\u96c6\u5b58\u50a8\u9700\u8981\u628a\u4e3b\u65e5\u5fd7\u548c ",(0,r.yg)("inlineCode",{parentName:"p"},"stacktrace")," \u7ec4\u5408\u6210\u4e00\u6761\u65e5\u5fd7\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"2024-07-08 21:18:01,432 INFO (Statistics Job Appender|61) [StatisticsJobAppender.runAfterCatalogReady():70] Stats table not available, skip\n2024-07-08 21:18:53,710 WARN (STATS_FETCH-0|208) [StmtExecutor.executeInternalQuery():3332] Failed to run internal SQL: OriginStatement{originStmt='SELECT * FROM __internal_schema.column_statistics WHERE part_id is NULL  ORDER BY update_time DESC LIMIT 500000', idx=0}\norg.apache.doris.common.UserException: errCode = 2, detailMessage = tablet 10031 has no queryable replicas. err: replica 10032's backend 10008 does not exist or not alive\n        at org.apache.doris.planner.OlapScanNode.addScanRangeLocations(OlapScanNode.java:931) ~[doris-fe.jar:1.2-SNAPSHOT]\n        at org.apache.doris.planner.OlapScanNode.computeTabletInfo(OlapScanNode.java:1197) ~[doris-fe.jar:1.2-SNAPSHOT]\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"2. \u5efa\u8868")),(0,r.yg)("p",null,"\u8868\u7ed3\u6784\u5305\u62ec\u65e5\u5fd7\u7684\u4ea7\u751f\u65f6\u95f4\uff0c\u91c7\u96c6\u65f6\u95f4\uff0c\u4e3b\u673a\u540d\uff0c\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84\uff0c\u65e5\u5fd7\u7c7b\u578b\uff0c\u65e5\u5fd7\u7ea7\u522b\uff0c\u7ebf\u7a0b\u540d\uff0c\u4ee3\u7801\u4f4d\u7f6e\uff0c\u65e5\u5fd7\u5185\u5bb9\u7b49\u5b57\u6bb5\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE TABLE `doris_log` (\n  `log_time` datetime NULL COMMENT \'log content time\',\n  `collect_time` datetime NULL COMMENT \'log agent collect time\',\n  `host` text NULL COMMENT \'hostname or ip\',\n  `path` text NULL COMMENT \'log file path\',\n  `type` text NULL COMMENT \'log type\',\n  `level` text NULL COMMENT \'log level\',\n  `thread` text NULL COMMENT \'log thread\',\n  `position` text NULL COMMENT \'log code position\',\n  `message` text NULL COMMENT \'log message\',\n  INDEX idx_host (`host`) USING INVERTED COMMENT \'\',\n  INDEX idx_path (`path`) USING INVERTED COMMENT \'\',\n  INDEX idx_type (`type`) USING INVERTED COMMENT \'\',\n  INDEX idx_level (`level`) USING INVERTED COMMENT \'\',\n  INDEX idx_thread (`thread`) USING INVERTED COMMENT \'\',\n  INDEX idx_position (`position`) USING INVERTED COMMENT \'\',\n  INDEX idx_message (`message`) USING INVERTED PROPERTIES("parser" = "unicode", "support_phrase" = "true") COMMENT \'\'\n) ENGINE=OLAP\nDUPLICATE KEY(`log_time`)\nCOMMENT \'OLAP\'\nPARTITION BY RANGE(`log_time`) ()\nDISTRIBUTED BY RANDOM BUCKETS 10\nPROPERTIES (\n"replication_num" = "1",\n"dynamic_partition.enable" = "true",\n"dynamic_partition.time_unit" = "DAY",\n"dynamic_partition.start" = "-7",\n"dynamic_partition.end" = "1",\n"dynamic_partition.prefix" = "p",\n"dynamic_partition.buckets" = "10",\n"dynamic_partition.create_history_partition" = "true",\n"compaction_policy" = "time_series"\n);\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"3. \u914d\u7f6e")),(0,r.yg)("p",null,"Fluent Bit \u65e5\u5fd7\u91c7\u96c6\u7684\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff0c",(0,r.yg)("inlineCode",{parentName:"p"},"doris_log.conf")," \u7528\u4e8e\u5b9a\u4e49 ETL \u7684\u5404\u4e2a\u90e8\u5206\u7ec4\u4ef6\uff0c",(0,r.yg)("inlineCode",{parentName:"p"},"parsers.conf")," \u7528\u4e8e\u5b9a\u4e49\u4e0d\u540c\u7684\u65e5\u5fd7\u89e3\u6790\u5668\u3002"),(0,r.yg)("p",null,"doris_log.conf:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"# config for Fluent Bit service\n[SERVICE]\n    log_level info\n    # parsers file\n    parsers_file parsers.conf\n\n# use input tail\n[INPUT]\n    name tail\n    path /path/to/your/log\n    # add log file name to the record, key is 'path'\n    path_key path\n    # set multiline parser\n    multiline.parser multiline_java \n\n# parse log\n[FILTER]\n    match *\n    name parser\n    key_name log\n    parser fe_log\n    reserve_data true\n\n# add host info\n[FILTER]\n    name sysinfo\n    match *\n    # add hostname to the record, key is 'host'\n    hostname_key host\n\n# output to doris\n[OUTPUT]\n    name doris\n    match *\n    host fehost\n    port feport\n    user your_username\n    password your_password\n    database your_db\n    table your_table\n    # add 'collect_time' to the record\n    time_key collect_time\n    # 'collect_time' is timestamp, change it to datatime\n    header columns collect_time=from_unixtime(collect_time)\n    log_request true\n    log_progress_interval 10\n")),(0,r.yg)("p",null,"parsers.conf:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},'[MULTILINE_PARSER]\n    name          multiline_java\n    type          regex\n    flush_timeout 1000\n    # Regex rules for multiline parsing\n    # ---------------------------------\n    #\n    # configuration hints:\n    #\n    #  - first state always has the name: start_state\n    #  - every field in the rule must be inside double quotes\n    #\n    # rules   |   state name   | regex pattern | next state name\n    # --------|----------------|---------------|-----------------\n    rule         "start_state"   "/(^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2})(.*)/"  "cont"\n    rule         "cont"          "/(^(?![0-9]{4}-[0-9]{2}-[0-9]{2}))(.*)/"     "cont"\n\n\n[PARSER]\n    name        fe_log\n    format      regex\n    # parse and add \'log_time\', \'level\', \'thread\', \'position\', \'message\' to the record\n    regex       ^(?<log_time>[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2},[0-9]{3}) (?<level>[^ ]+) \\((?<thread>[^\\)]+)\\) \\[(?<position>[^\\]]+)\\] (?<message>(\\n|.)*)\\n$\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"4. \u8fd0\u884c Fluent Bit")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},'fluent-bit -c doris_log.conf\n\n# log stream load response\n\n[2024/10/31 18:39:55] [ info] [output:doris:doris.1] 127.0.0.1:8040, HTTP status=200\n{\n    "TxnId": 32155,\n    "Label": "fluentbit_1730371195_91cca1aa-c15f-45d2-b503-fe7d2e839c2a",\n    "Comment": "",\n    "TwoPhaseCommit": "false",\n    "Status": "Success",\n    "Message": "OK",\n    "NumberTotalRows": 1,\n    "NumberLoadedRows": 1,\n    "NumberFilteredRows": 0,\n    "NumberUnselectedRows": 0,\n    "LoadBytes": 836,\n    "LoadTimeMs": 298,\n    "BeginTxnTimeMs": 0,\n    "StreamLoadPutTimeMs": 3,\n    "ReadDataTimeMs": 0,\n    "WriteDataTimeMs": 268,\n    "CommitAndPublishTimeMs": 25\n}\n\n# log speed info\n\n[2024/10/31 18:40:13] [ info] [output:doris:doris.1] total 0 MB 2 ROWS, total speed 0 MB/s 0 R/s, last 10 seconds speed 0 MB/s 0 R/s\n')),(0,r.yg)("h3",{id:"json-\u65e5\u5fd7\u91c7\u96c6\u793a\u4f8b"},"JSON \u65e5\u5fd7\u91c7\u96c6\u793a\u4f8b"),(0,r.yg)("p",null,"\u8be5\u6837\u4f8b\u4ee5 github events archive \u7684\u6570\u636e\u4e3a\u4f8b\u5c55\u793a JSON \u65e5\u5fd7\u91c7\u96c6\u3002"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"1. \u6570\u636e")),(0,r.yg)("p",null,"github events archive \u662f github \u7528\u6237\u64cd\u4f5c\u4e8b\u4ef6\u7684\u5f52\u6863\u6570\u636e\uff0c\u683c\u5f0f\u662f JSON\uff0c\u53ef\u4ee5\u4ece ",(0,r.yg)("a",{parentName:"p",href:"https://www.gharchive.org/"},"https://www.gharchive.org/")," \u4e0b\u8f7d\uff0c\u6bd4\u5982\u4e0b\u8f7d 2024\u5e741\u67081\u65e515\u70b9\u7684\u6570\u636e\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"wget https://data.gharchive.org/2024-01-01-15.json.gz\n")),(0,r.yg)("p",null,"\u4e0b\u9762\u662f\u4e00\u6761\u6570\u636e\u6837\u4f8b\uff0c\u5b9e\u9645\u4e00\u6761\u6570\u636e\u4e00\u884c\uff0c\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u5c55\u793a\u8fdb\u884c\u4e86\u683c\u5f0f\u5316\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-jason"},'{\n  "id": "37066529221",\n  "type": "PushEvent",\n  "actor": {\n    "id": 46139131,\n    "login": "Bard89",\n    "display_login": "Bard89",\n    "gravatar_id": "",\n    "url": "https://api.github.com/users/Bard89",\n    "avatar_url": "https://avatars.githubusercontent.com/u/46139131?"\n  },\n  "repo": {\n    "id": 780125623,\n    "name": "Bard89/talk-to-me",\n    "url": "https://api.github.com/repos/Bard89/talk-to-me"\n  },\n  "payload": {\n    "repository_id": 780125623,\n    "push_id": 17799451992,\n    "size": 1,\n    "distinct_size": 1,\n    "ref": "refs/heads/add_mvcs",\n    "head": "f03baa2de66f88f5f1754ce3fa30972667f87e81",\n    "before": "85e6544ede4ae3f132fe2f5f1ce0ce35a3169d21"\n  },\n  "public": true,\n  "created_at": "2024-04-01T23:00:00Z"\n}\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"2. \u5efa\u8868")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE TABLE github_events\n(\n  `created_at` DATETIME,\n  `id` BIGINT,\n  `type` TEXT,\n  `public` BOOLEAN,\n  `actor` VARIANT,\n  `repo` VARIANT,\n  `payload` TEXT,\n  INDEX `idx_id` (`id`) USING INVERTED,\n  INDEX `idx_type` (`type`) USING INVERTED,\n  INDEX `idx_actor` (`actor`) USING INVERTED,\n  INDEX `idx_host` (`repo`) USING INVERTED,\n  INDEX `idx_payload` (`payload`) USING INVERTED PROPERTIES("parser" = "unicode", "support_phrase" = "true")\n)\nENGINE = OLAP\nDUPLICATE KEY(`created_at`)\nPARTITION BY RANGE(`created_at`) ()\nDISTRIBUTED BY RANDOM BUCKETS 10\nPROPERTIES (\n"replication_num" = "1",\n"compaction_policy" = "time_series",\n"enable_single_replica_compaction" = "true",\n"dynamic_partition.enable" = "true",\n"dynamic_partition.create_history_partition" = "true",\n"dynamic_partition.time_unit" = "DAY",\n"dynamic_partition.start" = "-30",\n"dynamic_partition.end" = "1",\n"dynamic_partition.prefix" = "p",\n"dynamic_partition.buckets" = "10",\n"dynamic_partition.replication_num" = "1"\n);\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"3. \u914d\u7f6e")),(0,r.yg)("p",null,"\u548c\u4e4b\u524d TEXT \u65e5\u5fd7\u91c7\u96c6\u76f8\u6bd4\uff0c\u8be5\u914d\u7f6e\u6587\u4ef6\u6ca1\u6709\u4f7f\u7528 FILTER\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u989d\u5916\u7684\u5904\u7406\u8f6c\u6362\u3002"),(0,r.yg)("p",null,"github_events.conf:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"[SERVICE]\n    log_level info\n    parsers_file github_parsers.conf\n\n[INPUT]\n    name tail\n    parser github\n    path /path/to/your/log\n\n[OUTPUT]\n    name doris\n    match *\n    host fehost\n    port feport\n    user your_username\n    password your_password\n    database your_db\n    table your_table\n    time_key false\n    log_request true\n    log_progress_interval 10\n")),(0,r.yg)("p",null,"github_parsers.conf:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"[PARSER]\n    name github\n    format json\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"4. \u8fd0\u884c Fluent Bit")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"fluent-bit -c github_events.conf\n")))}d.isMDXComponent=!0}}]);